// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CAELFHKDJOP.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:CAELFHKDJOP)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct CAELFHKDJOP {
    // message fields
    // @@protoc_insertion_point(field:CAELFHKDJOP.CKDFADABICO)
    pub CKDFADABICO: ::protobuf::MessageField<super::BFNIAIMPKAB::BFNIAIMPKAB>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.DAGLMONMMMH)
    pub DAGLMONMMMH: ::protobuf::MessageField<super::PEMFFDIBADH::PEMFFDIBADH>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.DAKOPHLKOGK)
    pub DAKOPHLKOGK: ::protobuf::MessageField<super::CEBKAPOALOH::CEBKAPOALOH>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.NJCHCICPMNO)
    pub NJCHCICPMNO: ::protobuf::MessageField<super::NBNMGEKGDCB::NBNMGEKGDCB>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.ABKOHABEMMF)
    pub ABKOHABEMMF: ::protobuf::MessageField<super::NHCNOAFHCAI::NHCNOAFHCAI>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.PCPKBPJDKAH)
    pub PCPKBPJDKAH: bool,
    // @@protoc_insertion_point(field:CAELFHKDJOP.CNKNDNIMFFL)
    pub CNKNDNIMFFL: ::protobuf::MessageField<super::FECMANIDNGM::FECMANIDNGM>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.LONMAOAJKGN)
    pub LONMAOAJKGN: ::protobuf::MessageField<super::BBLDCKLFHLC::BBLDCKLFHLC>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.ICMBDLMGDBO)
    pub ICMBDLMGDBO: ::protobuf::MessageField<super::KIFANCAIHCC::KIFANCAIHCC>,
    // @@protoc_insertion_point(field:CAELFHKDJOP.status)
    pub status: ::protobuf::EnumOrUnknown<super::RogueStatus::RogueStatus>,
    // special fields
    // @@protoc_insertion_point(special_field:CAELFHKDJOP.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a CAELFHKDJOP {
    fn default() -> &'a CAELFHKDJOP {
        <CAELFHKDJOP as ::protobuf::Message>::default_instance()
    }
}

impl CAELFHKDJOP {
    pub fn new() -> CAELFHKDJOP {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(10);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BFNIAIMPKAB::BFNIAIMPKAB>(
            "CKDFADABICO",
            |m: &CAELFHKDJOP| { &m.CKDFADABICO },
            |m: &mut CAELFHKDJOP| { &mut m.CKDFADABICO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::PEMFFDIBADH::PEMFFDIBADH>(
            "DAGLMONMMMH",
            |m: &CAELFHKDJOP| { &m.DAGLMONMMMH },
            |m: &mut CAELFHKDJOP| { &mut m.DAGLMONMMMH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::CEBKAPOALOH::CEBKAPOALOH>(
            "DAKOPHLKOGK",
            |m: &CAELFHKDJOP| { &m.DAKOPHLKOGK },
            |m: &mut CAELFHKDJOP| { &mut m.DAKOPHLKOGK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NBNMGEKGDCB::NBNMGEKGDCB>(
            "NJCHCICPMNO",
            |m: &CAELFHKDJOP| { &m.NJCHCICPMNO },
            |m: &mut CAELFHKDJOP| { &mut m.NJCHCICPMNO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NHCNOAFHCAI::NHCNOAFHCAI>(
            "ABKOHABEMMF",
            |m: &CAELFHKDJOP| { &m.ABKOHABEMMF },
            |m: &mut CAELFHKDJOP| { &mut m.ABKOHABEMMF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PCPKBPJDKAH",
            |m: &CAELFHKDJOP| { &m.PCPKBPJDKAH },
            |m: &mut CAELFHKDJOP| { &mut m.PCPKBPJDKAH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FECMANIDNGM::FECMANIDNGM>(
            "CNKNDNIMFFL",
            |m: &CAELFHKDJOP| { &m.CNKNDNIMFFL },
            |m: &mut CAELFHKDJOP| { &mut m.CNKNDNIMFFL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BBLDCKLFHLC::BBLDCKLFHLC>(
            "LONMAOAJKGN",
            |m: &CAELFHKDJOP| { &m.LONMAOAJKGN },
            |m: &mut CAELFHKDJOP| { &mut m.LONMAOAJKGN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KIFANCAIHCC::KIFANCAIHCC>(
            "ICMBDLMGDBO",
            |m: &CAELFHKDJOP| { &m.ICMBDLMGDBO },
            |m: &mut CAELFHKDJOP| { &mut m.ICMBDLMGDBO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "status",
            |m: &CAELFHKDJOP| { &m.status },
            |m: &mut CAELFHKDJOP| { &mut m.status },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<CAELFHKDJOP>(
            "CAELFHKDJOP",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for CAELFHKDJOP {
    const NAME: &'static str = "CAELFHKDJOP";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CKDFADABICO)?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DAGLMONMMMH)?;
                },
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DAKOPHLKOGK)?;
                },
                34 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NJCHCICPMNO)?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.ABKOHABEMMF)?;
                },
                8 => {
                    self.PCPKBPJDKAH = is.read_bool()?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CNKNDNIMFFL)?;
                },
                106 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LONMAOAJKGN)?;
                },
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.ICMBDLMGDBO)?;
                },
                96 => {
                    self.status = is.read_enum_or_unknown()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.CKDFADABICO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.DAGLMONMMMH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.DAKOPHLKOGK.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NJCHCICPMNO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.ABKOHABEMMF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.PCPKBPJDKAH != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.CNKNDNIMFFL.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LONMAOAJKGN.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.ICMBDLMGDBO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.status != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            my_size += ::protobuf::rt::int32_size(12, self.status.value());
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.CKDFADABICO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if let Some(v) = self.DAGLMONMMMH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        if let Some(v) = self.DAKOPHLKOGK.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        if let Some(v) = self.NJCHCICPMNO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        }
        if let Some(v) = self.ABKOHABEMMF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if self.PCPKBPJDKAH != false {
            os.write_bool(1, self.PCPKBPJDKAH)?;
        }
        if let Some(v) = self.CNKNDNIMFFL.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.LONMAOAJKGN.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        }
        if let Some(v) = self.ICMBDLMGDBO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        if self.status != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            os.write_enum(12, ::protobuf::EnumOrUnknown::value(&self.status))?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> CAELFHKDJOP {
        CAELFHKDJOP::new()
    }

    fn clear(&mut self) {
        self.CKDFADABICO.clear();
        self.DAGLMONMMMH.clear();
        self.DAKOPHLKOGK.clear();
        self.NJCHCICPMNO.clear();
        self.ABKOHABEMMF.clear();
        self.PCPKBPJDKAH = false;
        self.CNKNDNIMFFL.clear();
        self.LONMAOAJKGN.clear();
        self.ICMBDLMGDBO.clear();
        self.status = ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE);
        self.special_fields.clear();
    }

    fn default_instance() -> &'static CAELFHKDJOP {
        static instance: CAELFHKDJOP = CAELFHKDJOP {
            CKDFADABICO: ::protobuf::MessageField::none(),
            DAGLMONMMMH: ::protobuf::MessageField::none(),
            DAKOPHLKOGK: ::protobuf::MessageField::none(),
            NJCHCICPMNO: ::protobuf::MessageField::none(),
            ABKOHABEMMF: ::protobuf::MessageField::none(),
            PCPKBPJDKAH: false,
            CNKNDNIMFFL: ::protobuf::MessageField::none(),
            LONMAOAJKGN: ::protobuf::MessageField::none(),
            ICMBDLMGDBO: ::protobuf::MessageField::none(),
            status: ::protobuf::EnumOrUnknown::from_i32(0),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for CAELFHKDJOP {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("CAELFHKDJOP").unwrap()).clone()
    }
}

impl ::std::fmt::Display for CAELFHKDJOP {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for CAELFHKDJOP {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11CAELFHKDJOP.proto\x1a\x11BBLDCKLFHLC.proto\x1a\x11BFNIAIMPKAB.prot\
    o\x1a\x11CEBKAPOALOH.proto\x1a\x11FECMANIDNGM.proto\x1a\x11KIFANCAIHCC.p\
    roto\x1a\x11NBNMGEKGDCB.proto\x1a\x11NHCNOAFHCAI.proto\x1a\x11PEMFFDIBAD\
    H.proto\x1a\x11RogueStatus.proto\"\xd5\x03\n\x0bCAELFHKDJOP\x12.\n\x0bCK\
    DFADABICO\x18\x0e\x20\x01(\x0b2\x0c.BFNIAIMPKABR\x0bCKDFADABICO\x12.\n\
    \x0bDAGLMONMMMH\x18\x07\x20\x01(\x0b2\x0c.PEMFFDIBADHR\x0bDAGLMONMMMH\
    \x12.\n\x0bDAKOPHLKOGK\x18\x0b\x20\x01(\x0b2\x0c.CEBKAPOALOHR\x0bDAKOPHL\
    KOGK\x12.\n\x0bNJCHCICPMNO\x18\x04\x20\x01(\x0b2\x0c.NBNMGEKGDCBR\x0bNJC\
    HCICPMNO\x12.\n\x0bABKOHABEMMF\x18\t\x20\x01(\x0b2\x0c.NHCNOAFHCAIR\x0bA\
    BKOHABEMMF\x12\x20\n\x0bPCPKBPJDKAH\x18\x01\x20\x01(\x08R\x0bPCPKBPJDKAH\
    \x12.\n\x0bCNKNDNIMFFL\x18\x05\x20\x01(\x0b2\x0c.FECMANIDNGMR\x0bCNKNDNI\
    MFFL\x12.\n\x0bLONMAOAJKGN\x18\r\x20\x01(\x0b2\x0c.BBLDCKLFHLCR\x0bLONMA\
    OAJKGN\x12.\n\x0bICMBDLMGDBO\x18\x06\x20\x01(\x0b2\x0c.KIFANCAIHCCR\x0bI\
    CMBDLMGDBO\x12$\n\x06status\x18\x0c\x20\x01(\x0e2\x0c.RogueStatusR\x06st\
    atusb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(9);
            deps.push(super::BBLDCKLFHLC::file_descriptor().clone());
            deps.push(super::BFNIAIMPKAB::file_descriptor().clone());
            deps.push(super::CEBKAPOALOH::file_descriptor().clone());
            deps.push(super::FECMANIDNGM::file_descriptor().clone());
            deps.push(super::KIFANCAIHCC::file_descriptor().clone());
            deps.push(super::NBNMGEKGDCB::file_descriptor().clone());
            deps.push(super::NHCNOAFHCAI::file_descriptor().clone());
            deps.push(super::PEMFFDIBADH::file_descriptor().clone());
            deps.push(super::RogueStatus::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(CAELFHKDJOP::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
