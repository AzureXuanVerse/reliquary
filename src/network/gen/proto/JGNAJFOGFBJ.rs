// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `JGNAJFOGFBJ.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:JGNAJFOGFBJ)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct JGNAJFOGFBJ {
    // message fields
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.JEGEDDLMOHB)
    pub JEGEDDLMOHB: ::protobuf::MessageField<super::JFBAPKFDJAF::JFBAPKFDJAF>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.OOIEEPCBNOI)
    pub OOIEEPCBNOI: ::protobuf::MessageField<super::ICMNCJPLGFN::ICMNCJPLGFN>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.NEMGEOPCBAO)
    pub NEMGEOPCBAO: ::protobuf::MessageField<super::JGALANANANF::JGALANANANF>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.PJGBJGHPDAC)
    pub PJGBJGHPDAC: ::protobuf::MessageField<super::GIIPEENECMB::GIIPEENECMB>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.NNDPGGJCPOG)
    pub NNDPGGJCPOG: ::protobuf::MessageField<super::BPKLOMEPHEF::BPKLOMEPHEF>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.PDHDKBJJOFJ)
    pub PDHDKBJJOFJ: u32,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.KCNBPDMKBOG)
    pub KCNBPDMKBOG: ::protobuf::MessageField<super::BIFPDOCGFLC::BIFPDOCGFLC>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.FHEODGILEEP)
    pub FHEODGILEEP: ::protobuf::MessageField<super::ICNPHJAADDE::ICNPHJAADDE>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.NCOAIBHNPOH)
    pub NCOAIBHNPOH: ::protobuf::MessageField<super::FIIDPGGKANO::FIIDPGGKANO>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.CNFCMJOJAOM)
    pub CNFCMJOJAOM: ::protobuf::MessageField<super::HHADPPBCIAP::HHADPPBCIAP>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.PIANNPMKHFO)
    pub PIANNPMKHFO: ::std::vec::Vec<super::BGPOKPPMEBI::BGPOKPPMEBI>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.AMLCAEIJMEE)
    pub AMLCAEIJMEE: ::protobuf::MessageField<super::HPOEPJIDFCE::HPOEPJIDFCE>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.BCBJPFIKPHG)
    pub BCBJPFIKPHG: ::protobuf::MessageField<super::BNKNFJKMJIE::BNKNFJKMJIE>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.KACLLKAKKKO)
    pub KACLLKAKKKO: ::protobuf::MessageField<super::AGFNMLEBEJD::AGFNMLEBEJD>,
    // @@protoc_insertion_point(field:JGNAJFOGFBJ.ALDGJPGGBEJ)
    pub ALDGJPGGBEJ: ::protobuf::MessageField<super::CHAPNFEBFIK::CHAPNFEBFIK>,
    // special fields
    // @@protoc_insertion_point(special_field:JGNAJFOGFBJ.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a JGNAJFOGFBJ {
    fn default() -> &'a JGNAJFOGFBJ {
        <JGNAJFOGFBJ as ::protobuf::Message>::default_instance()
    }
}

impl JGNAJFOGFBJ {
    pub fn new() -> JGNAJFOGFBJ {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(15);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::JFBAPKFDJAF::JFBAPKFDJAF>(
            "JEGEDDLMOHB",
            |m: &JGNAJFOGFBJ| { &m.JEGEDDLMOHB },
            |m: &mut JGNAJFOGFBJ| { &mut m.JEGEDDLMOHB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ICMNCJPLGFN::ICMNCJPLGFN>(
            "OOIEEPCBNOI",
            |m: &JGNAJFOGFBJ| { &m.OOIEEPCBNOI },
            |m: &mut JGNAJFOGFBJ| { &mut m.OOIEEPCBNOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::JGALANANANF::JGALANANANF>(
            "NEMGEOPCBAO",
            |m: &JGNAJFOGFBJ| { &m.NEMGEOPCBAO },
            |m: &mut JGNAJFOGFBJ| { &mut m.NEMGEOPCBAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GIIPEENECMB::GIIPEENECMB>(
            "PJGBJGHPDAC",
            |m: &JGNAJFOGFBJ| { &m.PJGBJGHPDAC },
            |m: &mut JGNAJFOGFBJ| { &mut m.PJGBJGHPDAC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BPKLOMEPHEF::BPKLOMEPHEF>(
            "NNDPGGJCPOG",
            |m: &JGNAJFOGFBJ| { &m.NNDPGGJCPOG },
            |m: &mut JGNAJFOGFBJ| { &mut m.NNDPGGJCPOG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PDHDKBJJOFJ",
            |m: &JGNAJFOGFBJ| { &m.PDHDKBJJOFJ },
            |m: &mut JGNAJFOGFBJ| { &mut m.PDHDKBJJOFJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BIFPDOCGFLC::BIFPDOCGFLC>(
            "KCNBPDMKBOG",
            |m: &JGNAJFOGFBJ| { &m.KCNBPDMKBOG },
            |m: &mut JGNAJFOGFBJ| { &mut m.KCNBPDMKBOG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ICNPHJAADDE::ICNPHJAADDE>(
            "FHEODGILEEP",
            |m: &JGNAJFOGFBJ| { &m.FHEODGILEEP },
            |m: &mut JGNAJFOGFBJ| { &mut m.FHEODGILEEP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FIIDPGGKANO::FIIDPGGKANO>(
            "NCOAIBHNPOH",
            |m: &JGNAJFOGFBJ| { &m.NCOAIBHNPOH },
            |m: &mut JGNAJFOGFBJ| { &mut m.NCOAIBHNPOH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HHADPPBCIAP::HHADPPBCIAP>(
            "CNFCMJOJAOM",
            |m: &JGNAJFOGFBJ| { &m.CNFCMJOJAOM },
            |m: &mut JGNAJFOGFBJ| { &mut m.CNFCMJOJAOM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PIANNPMKHFO",
            |m: &JGNAJFOGFBJ| { &m.PIANNPMKHFO },
            |m: &mut JGNAJFOGFBJ| { &mut m.PIANNPMKHFO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HPOEPJIDFCE::HPOEPJIDFCE>(
            "AMLCAEIJMEE",
            |m: &JGNAJFOGFBJ| { &m.AMLCAEIJMEE },
            |m: &mut JGNAJFOGFBJ| { &mut m.AMLCAEIJMEE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BNKNFJKMJIE::BNKNFJKMJIE>(
            "BCBJPFIKPHG",
            |m: &JGNAJFOGFBJ| { &m.BCBJPFIKPHG },
            |m: &mut JGNAJFOGFBJ| { &mut m.BCBJPFIKPHG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AGFNMLEBEJD::AGFNMLEBEJD>(
            "KACLLKAKKKO",
            |m: &JGNAJFOGFBJ| { &m.KACLLKAKKKO },
            |m: &mut JGNAJFOGFBJ| { &mut m.KACLLKAKKKO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::CHAPNFEBFIK::CHAPNFEBFIK>(
            "ALDGJPGGBEJ",
            |m: &JGNAJFOGFBJ| { &m.ALDGJPGGBEJ },
            |m: &mut JGNAJFOGFBJ| { &mut m.ALDGJPGGBEJ },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<JGNAJFOGFBJ>(
            "JGNAJFOGFBJ",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for JGNAJFOGFBJ {
    const NAME: &'static str = "JGNAJFOGFBJ";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JEGEDDLMOHB)?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OOIEEPCBNOI)?;
                },
                106 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NEMGEOPCBAO)?;
                },
                10 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.PJGBJGHPDAC)?;
                },
                10618 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NNDPGGJCPOG)?;
                },
                72 => {
                    self.PDHDKBJJOFJ = is.read_uint32()?;
                },
                26 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KCNBPDMKBOG)?;
                },
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.FHEODGILEEP)?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NCOAIBHNPOH)?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CNFCMJOJAOM)?;
                },
                34 => {
                    self.PIANNPMKHFO.push(is.read_message()?);
                },
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AMLCAEIJMEE)?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.BCBJPFIKPHG)?;
                },
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KACLLKAKKKO)?;
                },
                82 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.ALDGJPGGBEJ)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.JEGEDDLMOHB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.OOIEEPCBNOI.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NEMGEOPCBAO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.PJGBJGHPDAC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NNDPGGJCPOG.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.PDHDKBJJOFJ != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.PDHDKBJJOFJ);
        }
        if let Some(v) = self.KCNBPDMKBOG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.FHEODGILEEP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NCOAIBHNPOH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.CNFCMJOJAOM.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.PIANNPMKHFO {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.AMLCAEIJMEE.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.BCBJPFIKPHG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.KACLLKAKKKO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.ALDGJPGGBEJ.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.JEGEDDLMOHB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        if let Some(v) = self.OOIEEPCBNOI.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if let Some(v) = self.NEMGEOPCBAO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        }
        if let Some(v) = self.PJGBJGHPDAC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        }
        if let Some(v) = self.NNDPGGJCPOG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1327, v, os)?;
        }
        if self.PDHDKBJJOFJ != 0 {
            os.write_uint32(9, self.PDHDKBJJOFJ)?;
        }
        if let Some(v) = self.KCNBPDMKBOG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        }
        if let Some(v) = self.FHEODGILEEP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        if let Some(v) = self.NCOAIBHNPOH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        if let Some(v) = self.CNFCMJOJAOM.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        for v in &self.PIANNPMKHFO {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        };
        if let Some(v) = self.AMLCAEIJMEE.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.BCBJPFIKPHG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.KACLLKAKKKO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if let Some(v) = self.ALDGJPGGBEJ.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> JGNAJFOGFBJ {
        JGNAJFOGFBJ::new()
    }

    fn clear(&mut self) {
        self.JEGEDDLMOHB.clear();
        self.OOIEEPCBNOI.clear();
        self.NEMGEOPCBAO.clear();
        self.PJGBJGHPDAC.clear();
        self.NNDPGGJCPOG.clear();
        self.PDHDKBJJOFJ = 0;
        self.KCNBPDMKBOG.clear();
        self.FHEODGILEEP.clear();
        self.NCOAIBHNPOH.clear();
        self.CNFCMJOJAOM.clear();
        self.PIANNPMKHFO.clear();
        self.AMLCAEIJMEE.clear();
        self.BCBJPFIKPHG.clear();
        self.KACLLKAKKKO.clear();
        self.ALDGJPGGBEJ.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static JGNAJFOGFBJ {
        static instance: JGNAJFOGFBJ = JGNAJFOGFBJ {
            JEGEDDLMOHB: ::protobuf::MessageField::none(),
            OOIEEPCBNOI: ::protobuf::MessageField::none(),
            NEMGEOPCBAO: ::protobuf::MessageField::none(),
            PJGBJGHPDAC: ::protobuf::MessageField::none(),
            NNDPGGJCPOG: ::protobuf::MessageField::none(),
            PDHDKBJJOFJ: 0,
            KCNBPDMKBOG: ::protobuf::MessageField::none(),
            FHEODGILEEP: ::protobuf::MessageField::none(),
            NCOAIBHNPOH: ::protobuf::MessageField::none(),
            CNFCMJOJAOM: ::protobuf::MessageField::none(),
            PIANNPMKHFO: ::std::vec::Vec::new(),
            AMLCAEIJMEE: ::protobuf::MessageField::none(),
            BCBJPFIKPHG: ::protobuf::MessageField::none(),
            KACLLKAKKKO: ::protobuf::MessageField::none(),
            ALDGJPGGBEJ: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for JGNAJFOGFBJ {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("JGNAJFOGFBJ").unwrap()).clone()
    }
}

impl ::std::fmt::Display for JGNAJFOGFBJ {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for JGNAJFOGFBJ {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11JGNAJFOGFBJ.proto\x1a\x11AGFNMLEBEJD.proto\x1a\x11BGPOKPPMEBI.prot\
    o\x1a\x11BIFPDOCGFLC.proto\x1a\x11BNKNFJKMJIE.proto\x1a\x11BPKLOMEPHEF.p\
    roto\x1a\x11CHAPNFEBFIK.proto\x1a\x11FIIDPGGKANO.proto\x1a\x11GIIPEENECM\
    B.proto\x1a\x11HHADPPBCIAP.proto\x1a\x11HPOEPJIDFCE.proto\x1a\x11ICMNCJP\
    LGFN.proto\x1a\x11ICNPHJAADDE.proto\x1a\x11JFBAPKFDJAF.proto\x1a\x11JGAL\
    ANANANF.proto\"\xd0\x05\n\x0bJGNAJFOGFBJ\x12.\n\x0bJEGEDDLMOHB\x18\x06\
    \x20\x01(\x0b2\x0c.JFBAPKFDJAFR\x0bJEGEDDLMOHB\x12.\n\x0bOOIEEPCBNOI\x18\
    \x08\x20\x01(\x0b2\x0c.ICMNCJPLGFNR\x0bOOIEEPCBNOI\x12.\n\x0bNEMGEOPCBAO\
    \x18\r\x20\x01(\x0b2\x0c.JGALANANANFR\x0bNEMGEOPCBAO\x12.\n\x0bPJGBJGHPD\
    AC\x18\x01\x20\x01(\x0b2\x0c.GIIPEENECMBR\x0bPJGBJGHPDAC\x12/\n\x0bNNDPG\
    GJCPOG\x18\xaf\n\x20\x01(\x0b2\x0c.BPKLOMEPHEFR\x0bNNDPGGJCPOG\x12\x20\n\
    \x0bPDHDKBJJOFJ\x18\t\x20\x01(\rR\x0bPDHDKBJJOFJ\x12.\n\x0bKCNBPDMKBOG\
    \x18\x03\x20\x01(\x0b2\x0c.BIFPDOCGFLCR\x0bKCNBPDMKBOG\x12.\n\x0bFHEODGI\
    LEEP\x18\x0b\x20\x01(\x0b2\x0c.ICNPHJAADDER\x0bFHEODGILEEP\x12.\n\x0bNCO\
    AIBHNPOH\x18\x07\x20\x01(\x0b2\x0c.FIIDPGGKANOR\x0bNCOAIBHNPOH\x12.\n\
    \x0bCNFCMJOJAOM\x18\x0f\x20\x01(\x0b2\x0c.HHADPPBCIAPR\x0bCNFCMJOJAOM\
    \x12.\n\x0bPIANNPMKHFO\x18\x04\x20\x03(\x0b2\x0c.BGPOKPPMEBIR\x0bPIANNPM\
    KHFO\x12.\n\x0bAMLCAEIJMEE\x18\x02\x20\x01(\x0b2\x0c.HPOEPJIDFCER\x0bAML\
    CAEIJMEE\x12.\n\x0bBCBJPFIKPHG\x18\x05\x20\x01(\x0b2\x0c.BNKNFJKMJIER\
    \x0bBCBJPFIKPHG\x12.\n\x0bKACLLKAKKKO\x18\x0e\x20\x01(\x0b2\x0c.AGFNMLEB\
    EJDR\x0bKACLLKAKKKO\x12.\n\x0bALDGJPGGBEJ\x18\n\x20\x01(\x0b2\x0c.CHAPNF\
    EBFIKR\x0bALDGJPGGBEJb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(14);
            deps.push(super::AGFNMLEBEJD::file_descriptor().clone());
            deps.push(super::BGPOKPPMEBI::file_descriptor().clone());
            deps.push(super::BIFPDOCGFLC::file_descriptor().clone());
            deps.push(super::BNKNFJKMJIE::file_descriptor().clone());
            deps.push(super::BPKLOMEPHEF::file_descriptor().clone());
            deps.push(super::CHAPNFEBFIK::file_descriptor().clone());
            deps.push(super::FIIDPGGKANO::file_descriptor().clone());
            deps.push(super::GIIPEENECMB::file_descriptor().clone());
            deps.push(super::HHADPPBCIAP::file_descriptor().clone());
            deps.push(super::HPOEPJIDFCE::file_descriptor().clone());
            deps.push(super::ICMNCJPLGFN::file_descriptor().clone());
            deps.push(super::ICNPHJAADDE::file_descriptor().clone());
            deps.push(super::JFBAPKFDJAF::file_descriptor().clone());
            deps.push(super::JGALANANANF::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(JGNAJFOGFBJ::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
