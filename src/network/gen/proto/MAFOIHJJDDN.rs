// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `MAFOIHJJDDN.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:MAFOIHJJDDN)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct MAFOIHJJDDN {
    // message fields
    // @@protoc_insertion_point(field:MAFOIHJJDDN.CIAGMLEDKNI)
    pub CIAGMLEDKNI: ::protobuf::EnumOrUnknown<super::RogueAreaStatus::RogueAreaStatus>,
    // @@protoc_insertion_point(field:MAFOIHJJDDN.COLEFCFBMFL)
    pub COLEFCFBMFL: ::protobuf::EnumOrUnknown<super::RogueStatus::RogueStatus>,
    // @@protoc_insertion_point(field:MAFOIHJJDDN.OMBLHJDKEJA)
    pub OMBLHJDKEJA: u32,
    // @@protoc_insertion_point(field:MAFOIHJJDDN.AEEEBFLDCBG)
    pub AEEEBFLDCBG: bool,
    // @@protoc_insertion_point(field:MAFOIHJJDDN.LBHJLPCJDPA)
    pub LBHJLPCJDPA: u32,
    // @@protoc_insertion_point(field:MAFOIHJJDDN.LNGJKFGLHBE)
    pub LNGJKFGLHBE: u32,
    // special fields
    // @@protoc_insertion_point(special_field:MAFOIHJJDDN.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a MAFOIHJJDDN {
    fn default() -> &'a MAFOIHJJDDN {
        <MAFOIHJJDDN as ::protobuf::Message>::default_instance()
    }
}

impl MAFOIHJJDDN {
    pub fn new() -> MAFOIHJJDDN {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(6);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CIAGMLEDKNI",
            |m: &MAFOIHJJDDN| { &m.CIAGMLEDKNI },
            |m: &mut MAFOIHJJDDN| { &mut m.CIAGMLEDKNI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "COLEFCFBMFL",
            |m: &MAFOIHJJDDN| { &m.COLEFCFBMFL },
            |m: &mut MAFOIHJJDDN| { &mut m.COLEFCFBMFL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OMBLHJDKEJA",
            |m: &MAFOIHJJDDN| { &m.OMBLHJDKEJA },
            |m: &mut MAFOIHJJDDN| { &mut m.OMBLHJDKEJA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AEEEBFLDCBG",
            |m: &MAFOIHJJDDN| { &m.AEEEBFLDCBG },
            |m: &mut MAFOIHJJDDN| { &mut m.AEEEBFLDCBG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LBHJLPCJDPA",
            |m: &MAFOIHJJDDN| { &m.LBHJLPCJDPA },
            |m: &mut MAFOIHJJDDN| { &mut m.LBHJLPCJDPA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LNGJKFGLHBE",
            |m: &MAFOIHJJDDN| { &m.LNGJKFGLHBE },
            |m: &mut MAFOIHJJDDN| { &mut m.LNGJKFGLHBE },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<MAFOIHJJDDN>(
            "MAFOIHJJDDN",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for MAFOIHJJDDN {
    const NAME: &'static str = "MAFOIHJJDDN";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                48 => {
                    self.CIAGMLEDKNI = is.read_enum_or_unknown()?;
                },
                80 => {
                    self.COLEFCFBMFL = is.read_enum_or_unknown()?;
                },
                104 => {
                    self.OMBLHJDKEJA = is.read_uint32()?;
                },
                72 => {
                    self.AEEEBFLDCBG = is.read_bool()?;
                },
                120 => {
                    self.LBHJLPCJDPA = is.read_uint32()?;
                },
                96 => {
                    self.LNGJKFGLHBE = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.CIAGMLEDKNI != ::protobuf::EnumOrUnknown::new(super::RogueAreaStatus::RogueAreaStatus::ROGUE_AREA_STATUS_LOCK) {
            my_size += ::protobuf::rt::int32_size(6, self.CIAGMLEDKNI.value());
        }
        if self.COLEFCFBMFL != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            my_size += ::protobuf::rt::int32_size(10, self.COLEFCFBMFL.value());
        }
        if self.OMBLHJDKEJA != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.OMBLHJDKEJA);
        }
        if self.AEEEBFLDCBG != false {
            my_size += 1 + 1;
        }
        if self.LBHJLPCJDPA != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.LBHJLPCJDPA);
        }
        if self.LNGJKFGLHBE != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.LNGJKFGLHBE);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.CIAGMLEDKNI != ::protobuf::EnumOrUnknown::new(super::RogueAreaStatus::RogueAreaStatus::ROGUE_AREA_STATUS_LOCK) {
            os.write_enum(6, ::protobuf::EnumOrUnknown::value(&self.CIAGMLEDKNI))?;
        }
        if self.COLEFCFBMFL != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            os.write_enum(10, ::protobuf::EnumOrUnknown::value(&self.COLEFCFBMFL))?;
        }
        if self.OMBLHJDKEJA != 0 {
            os.write_uint32(13, self.OMBLHJDKEJA)?;
        }
        if self.AEEEBFLDCBG != false {
            os.write_bool(9, self.AEEEBFLDCBG)?;
        }
        if self.LBHJLPCJDPA != 0 {
            os.write_uint32(15, self.LBHJLPCJDPA)?;
        }
        if self.LNGJKFGLHBE != 0 {
            os.write_uint32(12, self.LNGJKFGLHBE)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> MAFOIHJJDDN {
        MAFOIHJJDDN::new()
    }

    fn clear(&mut self) {
        self.CIAGMLEDKNI = ::protobuf::EnumOrUnknown::new(super::RogueAreaStatus::RogueAreaStatus::ROGUE_AREA_STATUS_LOCK);
        self.COLEFCFBMFL = ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE);
        self.OMBLHJDKEJA = 0;
        self.AEEEBFLDCBG = false;
        self.LBHJLPCJDPA = 0;
        self.LNGJKFGLHBE = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static MAFOIHJJDDN {
        static instance: MAFOIHJJDDN = MAFOIHJJDDN {
            CIAGMLEDKNI: ::protobuf::EnumOrUnknown::from_i32(0),
            COLEFCFBMFL: ::protobuf::EnumOrUnknown::from_i32(0),
            OMBLHJDKEJA: 0,
            AEEEBFLDCBG: false,
            LBHJLPCJDPA: 0,
            LNGJKFGLHBE: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for MAFOIHJJDDN {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("MAFOIHJJDDN").unwrap()).clone()
    }
}

impl ::std::fmt::Display for MAFOIHJJDDN {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for MAFOIHJJDDN {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11MAFOIHJJDDN.proto\x1a\x15RogueAreaStatus.proto\x1a\x11RogueStatus.\
    proto\"\xf9\x01\n\x0bMAFOIHJJDDN\x122\n\x0bCIAGMLEDKNI\x18\x06\x20\x01(\
    \x0e2\x10.RogueAreaStatusR\x0bCIAGMLEDKNI\x12.\n\x0bCOLEFCFBMFL\x18\n\
    \x20\x01(\x0e2\x0c.RogueStatusR\x0bCOLEFCFBMFL\x12\x20\n\x0bOMBLHJDKEJA\
    \x18\r\x20\x01(\rR\x0bOMBLHJDKEJA\x12\x20\n\x0bAEEEBFLDCBG\x18\t\x20\x01\
    (\x08R\x0bAEEEBFLDCBG\x12\x20\n\x0bLBHJLPCJDPA\x18\x0f\x20\x01(\rR\x0bLB\
    HJLPCJDPA\x12\x20\n\x0bLNGJKFGLHBE\x18\x0c\x20\x01(\rR\x0bLNGJKFGLHBEb\
    \x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::RogueAreaStatus::file_descriptor().clone());
            deps.push(super::RogueStatus::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(MAFOIHJJDDN::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
