// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `SceneCastSkillCsReq.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:SceneCastSkillCsReq)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct SceneCastSkillCsReq {
    // message fields
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.OPGGEDKDIEI)
    pub OPGGEDKDIEI: u32,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.DILFPPEBDNI)
    pub DILFPPEBDNI: u32,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.DPJGIECJDML)
    pub DPJGIECJDML: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.ELOODDMMNIA)
    pub ELOODDMMNIA: u32,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.DNHIFPGJOCD)
    pub DNHIFPGJOCD: u32,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.MNNEFDIAJOH)
    pub MNNEFDIAJOH: ::std::vec::Vec<::protobuf::EnumOrUnknown<super::JFHDOLCOBNA::JFHDOLCOBNA>>,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.OICIBPOHEAL)
    pub OICIBPOHEAL: ::std::string::String,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.OPMDMFOFPAB)
    pub OPMDMFOFPAB: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.LMJEHCPGIKI)
    pub LMJEHCPGIKI: ::std::vec::Vec<super::NGINONJIJDG::NGINONJIJDG>,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.APOCINBFAAB)
    pub APOCINBFAAB: ::std::vec::Vec<super::LDLCOFEPKOH::LDLCOFEPKOH>,
    // @@protoc_insertion_point(field:SceneCastSkillCsReq.EDGHCNEHCLL)
    pub EDGHCNEHCLL: ::protobuf::MessageField<super::LDFPBJIHOPD::LDFPBJIHOPD>,
    // special fields
    // @@protoc_insertion_point(special_field:SceneCastSkillCsReq.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a SceneCastSkillCsReq {
    fn default() -> &'a SceneCastSkillCsReq {
        <SceneCastSkillCsReq as ::protobuf::Message>::default_instance()
    }
}

impl SceneCastSkillCsReq {
    pub fn new() -> SceneCastSkillCsReq {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(11);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OPGGEDKDIEI",
            |m: &SceneCastSkillCsReq| { &m.OPGGEDKDIEI },
            |m: &mut SceneCastSkillCsReq| { &mut m.OPGGEDKDIEI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DILFPPEBDNI",
            |m: &SceneCastSkillCsReq| { &m.DILFPPEBDNI },
            |m: &mut SceneCastSkillCsReq| { &mut m.DILFPPEBDNI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "DPJGIECJDML",
            |m: &SceneCastSkillCsReq| { &m.DPJGIECJDML },
            |m: &mut SceneCastSkillCsReq| { &mut m.DPJGIECJDML },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ELOODDMMNIA",
            |m: &SceneCastSkillCsReq| { &m.ELOODDMMNIA },
            |m: &mut SceneCastSkillCsReq| { &mut m.ELOODDMMNIA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DNHIFPGJOCD",
            |m: &SceneCastSkillCsReq| { &m.DNHIFPGJOCD },
            |m: &mut SceneCastSkillCsReq| { &mut m.DNHIFPGJOCD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "MNNEFDIAJOH",
            |m: &SceneCastSkillCsReq| { &m.MNNEFDIAJOH },
            |m: &mut SceneCastSkillCsReq| { &mut m.MNNEFDIAJOH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OICIBPOHEAL",
            |m: &SceneCastSkillCsReq| { &m.OICIBPOHEAL },
            |m: &mut SceneCastSkillCsReq| { &mut m.OICIBPOHEAL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "OPMDMFOFPAB",
            |m: &SceneCastSkillCsReq| { &m.OPMDMFOFPAB },
            |m: &mut SceneCastSkillCsReq| { &mut m.OPMDMFOFPAB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LMJEHCPGIKI",
            |m: &SceneCastSkillCsReq| { &m.LMJEHCPGIKI },
            |m: &mut SceneCastSkillCsReq| { &mut m.LMJEHCPGIKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "APOCINBFAAB",
            |m: &SceneCastSkillCsReq| { &m.APOCINBFAAB },
            |m: &mut SceneCastSkillCsReq| { &mut m.APOCINBFAAB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::LDFPBJIHOPD::LDFPBJIHOPD>(
            "EDGHCNEHCLL",
            |m: &SceneCastSkillCsReq| { &m.EDGHCNEHCLL },
            |m: &mut SceneCastSkillCsReq| { &mut m.EDGHCNEHCLL },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<SceneCastSkillCsReq>(
            "SceneCastSkillCsReq",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for SceneCastSkillCsReq {
    const NAME: &'static str = "SceneCastSkillCsReq";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                104 => {
                    self.OPGGEDKDIEI = is.read_uint32()?;
                },
                24 => {
                    self.DILFPPEBDNI = is.read_uint32()?;
                },
                18 => {
                    is.read_repeated_packed_uint32_into(&mut self.DPJGIECJDML)?;
                },
                16 => {
                    self.DPJGIECJDML.push(is.read_uint32()?);
                },
                112 => {
                    self.ELOODDMMNIA = is.read_uint32()?;
                },
                88 => {
                    self.DNHIFPGJOCD = is.read_uint32()?;
                },
                48 => {
                    self.MNNEFDIAJOH.push(is.read_enum_or_unknown()?);
                },
                50 => {
                    ::protobuf::rt::read_repeated_packed_enum_or_unknown_into(is, &mut self.MNNEFDIAJOH)?
                },
                58 => {
                    self.OICIBPOHEAL = is.read_string()?;
                },
                98 => {
                    is.read_repeated_packed_uint32_into(&mut self.OPMDMFOFPAB)?;
                },
                96 => {
                    self.OPMDMFOFPAB.push(is.read_uint32()?);
                },
                34 => {
                    self.LMJEHCPGIKI.push(is.read_message()?);
                },
                122 => {
                    self.APOCINBFAAB.push(is.read_message()?);
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EDGHCNEHCLL)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.OPGGEDKDIEI != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.OPGGEDKDIEI);
        }
        if self.DILFPPEBDNI != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.DILFPPEBDNI);
        }
        for value in &self.DPJGIECJDML {
            my_size += ::protobuf::rt::uint32_size(2, *value);
        };
        if self.ELOODDMMNIA != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.ELOODDMMNIA);
        }
        if self.DNHIFPGJOCD != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.DNHIFPGJOCD);
        }
        for value in &self.MNNEFDIAJOH {
            my_size += ::protobuf::rt::int32_size(6, value.value());
        };
        if !self.OICIBPOHEAL.is_empty() {
            my_size += ::protobuf::rt::string_size(7, &self.OICIBPOHEAL);
        }
        for value in &self.OPMDMFOFPAB {
            my_size += ::protobuf::rt::uint32_size(12, *value);
        };
        for value in &self.LMJEHCPGIKI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.APOCINBFAAB {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.EDGHCNEHCLL.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.OPGGEDKDIEI != 0 {
            os.write_uint32(13, self.OPGGEDKDIEI)?;
        }
        if self.DILFPPEBDNI != 0 {
            os.write_uint32(3, self.DILFPPEBDNI)?;
        }
        for v in &self.DPJGIECJDML {
            os.write_uint32(2, *v)?;
        };
        if self.ELOODDMMNIA != 0 {
            os.write_uint32(14, self.ELOODDMMNIA)?;
        }
        if self.DNHIFPGJOCD != 0 {
            os.write_uint32(11, self.DNHIFPGJOCD)?;
        }
        for v in &self.MNNEFDIAJOH {
            os.write_enum(6, ::protobuf::EnumOrUnknown::value(v))?;
        };
        if !self.OICIBPOHEAL.is_empty() {
            os.write_string(7, &self.OICIBPOHEAL)?;
        }
        for v in &self.OPMDMFOFPAB {
            os.write_uint32(12, *v)?;
        };
        for v in &self.LMJEHCPGIKI {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        };
        for v in &self.APOCINBFAAB {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        };
        if let Some(v) = self.EDGHCNEHCLL.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> SceneCastSkillCsReq {
        SceneCastSkillCsReq::new()
    }

    fn clear(&mut self) {
        self.OPGGEDKDIEI = 0;
        self.DILFPPEBDNI = 0;
        self.DPJGIECJDML.clear();
        self.ELOODDMMNIA = 0;
        self.DNHIFPGJOCD = 0;
        self.MNNEFDIAJOH.clear();
        self.OICIBPOHEAL.clear();
        self.OPMDMFOFPAB.clear();
        self.LMJEHCPGIKI.clear();
        self.APOCINBFAAB.clear();
        self.EDGHCNEHCLL.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static SceneCastSkillCsReq {
        static instance: SceneCastSkillCsReq = SceneCastSkillCsReq {
            OPGGEDKDIEI: 0,
            DILFPPEBDNI: 0,
            DPJGIECJDML: ::std::vec::Vec::new(),
            ELOODDMMNIA: 0,
            DNHIFPGJOCD: 0,
            MNNEFDIAJOH: ::std::vec::Vec::new(),
            OICIBPOHEAL: ::std::string::String::new(),
            OPMDMFOFPAB: ::std::vec::Vec::new(),
            LMJEHCPGIKI: ::std::vec::Vec::new(),
            APOCINBFAAB: ::std::vec::Vec::new(),
            EDGHCNEHCLL: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for SceneCastSkillCsReq {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("SceneCastSkillCsReq").unwrap()).clone()
    }
}

impl ::std::fmt::Display for SceneCastSkillCsReq {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for SceneCastSkillCsReq {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x19SceneCastSkillCsReq.proto\x1a\x11JFHDOLCOBNA.proto\x1a\x11LDFPBJIH\
    OPD.proto\x1a\x11LDLCOFEPKOH.proto\x1a\x11NGINONJIJDG.proto\"\xc3\x03\n\
    \x13SceneCastSkillCsReq\x12\x20\n\x0bOPGGEDKDIEI\x18\r\x20\x01(\rR\x0bOP\
    GGEDKDIEI\x12\x20\n\x0bDILFPPEBDNI\x18\x03\x20\x01(\rR\x0bDILFPPEBDNI\
    \x12\x20\n\x0bDPJGIECJDML\x18\x02\x20\x03(\rR\x0bDPJGIECJDML\x12\x20\n\
    \x0bELOODDMMNIA\x18\x0e\x20\x01(\rR\x0bELOODDMMNIA\x12\x20\n\x0bDNHIFPGJ\
    OCD\x18\x0b\x20\x01(\rR\x0bDNHIFPGJOCD\x12.\n\x0bMNNEFDIAJOH\x18\x06\x20\
    \x03(\x0e2\x0c.JFHDOLCOBNAR\x0bMNNEFDIAJOH\x12\x20\n\x0bOICIBPOHEAL\x18\
    \x07\x20\x01(\tR\x0bOICIBPOHEAL\x12\x20\n\x0bOPMDMFOFPAB\x18\x0c\x20\x03\
    (\rR\x0bOPMDMFOFPAB\x12.\n\x0bLMJEHCPGIKI\x18\x04\x20\x03(\x0b2\x0c.NGIN\
    ONJIJDGR\x0bLMJEHCPGIKI\x12.\n\x0bAPOCINBFAAB\x18\x0f\x20\x03(\x0b2\x0c.\
    LDLCOFEPKOHR\x0bAPOCINBFAAB\x12.\n\x0bEDGHCNEHCLL\x18\t\x20\x01(\x0b2\
    \x0c.LDFPBJIHOPDR\x0bEDGHCNEHCLLb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(4);
            deps.push(super::JFHDOLCOBNA::file_descriptor().clone());
            deps.push(super::LDFPBJIHOPD::file_descriptor().clone());
            deps.push(super::LDLCOFEPKOH::file_descriptor().clone());
            deps.push(super::NGINONJIJDG::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(SceneCastSkillCsReq::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
