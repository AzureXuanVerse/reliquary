// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdFantasticStoryActivityType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdFantasticStoryActivityType)
pub enum CmdFantasticStoryActivityType {
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdFantasticStoryActivityTypeNone)
    CmdFantasticStoryActivityTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdFantasticStoryActivityBattleEndScNotify)
    CmdFantasticStoryActivityBattleEndScNotify = 4977,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdGetFantasticStoryActivityDataScRsp)
    CmdGetFantasticStoryActivityDataScRsp = 4971,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdGetFantasticStoryActivityDataCsReq)
    CmdGetFantasticStoryActivityDataCsReq = 4998,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdEnterFantasticStoryActivityStageScRsp)
    CmdEnterFantasticStoryActivityStageScRsp = 4979,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdEnterFantasticStoryActivityStageCsReq)
    CmdEnterFantasticStoryActivityStageCsReq = 4942,
    // @@protoc_insertion_point(enum_value:CmdFantasticStoryActivityType.CmdFinishChapterScNotify)
    CmdFinishChapterScNotify = 4983,
}

impl ::protobuf::Enum for CmdFantasticStoryActivityType {
    const NAME: &'static str = "CmdFantasticStoryActivityType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdFantasticStoryActivityType> {
        match value {
            0 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFantasticStoryActivityTypeNone),
            4977 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFantasticStoryActivityBattleEndScNotify),
            4971 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataScRsp),
            4998 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataCsReq),
            4979 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageScRsp),
            4942 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageCsReq),
            4983 => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFinishChapterScNotify),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdFantasticStoryActivityType> {
        match str {
            "CmdFantasticStoryActivityTypeNone" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFantasticStoryActivityTypeNone),
            "CmdFantasticStoryActivityBattleEndScNotify" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFantasticStoryActivityBattleEndScNotify),
            "CmdGetFantasticStoryActivityDataScRsp" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataScRsp),
            "CmdGetFantasticStoryActivityDataCsReq" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataCsReq),
            "CmdEnterFantasticStoryActivityStageScRsp" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageScRsp),
            "CmdEnterFantasticStoryActivityStageCsReq" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageCsReq),
            "CmdFinishChapterScNotify" => ::std::option::Option::Some(CmdFantasticStoryActivityType::CmdFinishChapterScNotify),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdFantasticStoryActivityType] = &[
        CmdFantasticStoryActivityType::CmdFantasticStoryActivityTypeNone,
        CmdFantasticStoryActivityType::CmdFantasticStoryActivityBattleEndScNotify,
        CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataScRsp,
        CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataCsReq,
        CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageScRsp,
        CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageCsReq,
        CmdFantasticStoryActivityType::CmdFinishChapterScNotify,
    ];
}

impl ::protobuf::EnumFull for CmdFantasticStoryActivityType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdFantasticStoryActivityType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdFantasticStoryActivityType::CmdFantasticStoryActivityTypeNone => 0,
            CmdFantasticStoryActivityType::CmdFantasticStoryActivityBattleEndScNotify => 1,
            CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataScRsp => 2,
            CmdFantasticStoryActivityType::CmdGetFantasticStoryActivityDataCsReq => 3,
            CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageScRsp => 4,
            CmdFantasticStoryActivityType::CmdEnterFantasticStoryActivityStageCsReq => 5,
            CmdFantasticStoryActivityType::CmdFinishChapterScNotify => 6,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdFantasticStoryActivityType {
    fn default() -> Self {
        CmdFantasticStoryActivityType::CmdFantasticStoryActivityTypeNone
    }
}

impl CmdFantasticStoryActivityType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdFantasticStoryActivityType>("CmdFantasticStoryActivityType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n#CmdFantasticStoryActivityType.proto*\xcc\x02\n\x1dCmdFantasticStoryAc\
    tivityType\x12%\n!CmdFantasticStoryActivityTypeNone\x10\0\x12/\n*CmdFant\
    asticStoryActivityBattleEndScNotify\x10\xf1&\x12*\n%CmdGetFantasticStory\
    ActivityDataScRsp\x10\xeb&\x12*\n%CmdGetFantasticStoryActivityDataCsReq\
    \x10\x86'\x12-\n(CmdEnterFantasticStoryActivityStageScRsp\x10\xf3&\x12-\
    \n(CmdEnterFantasticStoryActivityStageCsReq\x10\xce&\x12\x1d\n\x18CmdFin\
    ishChapterScNotify\x10\xf7&b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdFantasticStoryActivityType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
