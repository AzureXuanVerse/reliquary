// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `FMNHHNAMOAG.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:FMNHHNAMOAG)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct FMNHHNAMOAG {
    // message fields
    // @@protoc_insertion_point(field:FMNHHNAMOAG.JPCFKHJMIHH)
    pub JPCFKHJMIHH: ::std::string::String,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.NHMMMNEEJNH)
    pub NHMMMNEEJNH: u64,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.DEONHMIADDA)
    pub DEONHMIADDA: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.PIMDCIPJNDF)
    pub PIMDCIPJNDF: ::std::vec::Vec<super::BJOHNJOJPOO::BJOHNJOJPOO>,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.FFHNBNEMHPD)
    pub FFHNBNEMHPD: ::std::vec::Vec<super::IIJDDMKBAOF::IIJDDMKBAOF>,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.PDPGPCNFEON)
    pub PDPGPCNFEON: ::std::vec::Vec<super::IIJDDMKBAOF::IIJDDMKBAOF>,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.MNAKFNFJLFK)
    pub MNAKFNFJLFK: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.DNPNFBLCNLM)
    pub DNPNFBLCNLM: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.KKMFONNHFOI)
    pub KKMFONNHFOI: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.DJLJPDBBBFJ)
    pub DJLJPDBBBFJ: ::std::vec::Vec<super::IIJDDMKBAOF::IIJDDMKBAOF>,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.MHCFADKCKND)
    pub MHCFADKCKND: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.BLNPPNGNGHE)
    pub BLNPPNGNGHE: bool,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.HDDHMONGJCC)
    pub HDDHMONGJCC: ::std::string::String,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.IAOPPFCJAGC)
    pub IAOPPFCJAGC: u32,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.DHOLGLOIHFD)
    pub DHOLGLOIHFD: u64,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.DIPPONCOFGC)
    pub DIPPONCOFGC: ::std::vec::Vec<super::IIJDDMKBAOF::IIJDDMKBAOF>,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.ILLIKOCDJNG)
    pub ILLIKOCDJNG: u64,
    // @@protoc_insertion_point(field:FMNHHNAMOAG.CGPHFKGLCNK)
    pub CGPHFKGLCNK: ::std::string::String,
    // special fields
    // @@protoc_insertion_point(special_field:FMNHHNAMOAG.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a FMNHHNAMOAG {
    fn default() -> &'a FMNHHNAMOAG {
        <FMNHHNAMOAG as ::protobuf::Message>::default_instance()
    }
}

impl FMNHHNAMOAG {
    pub fn new() -> FMNHHNAMOAG {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JPCFKHJMIHH",
            |m: &FMNHHNAMOAG| { &m.JPCFKHJMIHH },
            |m: &mut FMNHHNAMOAG| { &mut m.JPCFKHJMIHH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NHMMMNEEJNH",
            |m: &FMNHHNAMOAG| { &m.NHMMMNEEJNH },
            |m: &mut FMNHHNAMOAG| { &mut m.NHMMMNEEJNH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DEONHMIADDA",
            |m: &FMNHHNAMOAG| { &m.DEONHMIADDA },
            |m: &mut FMNHHNAMOAG| { &mut m.DEONHMIADDA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PIMDCIPJNDF",
            |m: &FMNHHNAMOAG| { &m.PIMDCIPJNDF },
            |m: &mut FMNHHNAMOAG| { &mut m.PIMDCIPJNDF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FFHNBNEMHPD",
            |m: &FMNHHNAMOAG| { &m.FFHNBNEMHPD },
            |m: &mut FMNHHNAMOAG| { &mut m.FFHNBNEMHPD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PDPGPCNFEON",
            |m: &FMNHHNAMOAG| { &m.PDPGPCNFEON },
            |m: &mut FMNHHNAMOAG| { &mut m.PDPGPCNFEON },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MNAKFNFJLFK",
            |m: &FMNHHNAMOAG| { &m.MNAKFNFJLFK },
            |m: &mut FMNHHNAMOAG| { &mut m.MNAKFNFJLFK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DNPNFBLCNLM",
            |m: &FMNHHNAMOAG| { &m.DNPNFBLCNLM },
            |m: &mut FMNHHNAMOAG| { &mut m.DNPNFBLCNLM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KKMFONNHFOI",
            |m: &FMNHHNAMOAG| { &m.KKMFONNHFOI },
            |m: &mut FMNHHNAMOAG| { &mut m.KKMFONNHFOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "DJLJPDBBBFJ",
            |m: &FMNHHNAMOAG| { &m.DJLJPDBBBFJ },
            |m: &mut FMNHHNAMOAG| { &mut m.DJLJPDBBBFJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MHCFADKCKND",
            |m: &FMNHHNAMOAG| { &m.MHCFADKCKND },
            |m: &mut FMNHHNAMOAG| { &mut m.MHCFADKCKND },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BLNPPNGNGHE",
            |m: &FMNHHNAMOAG| { &m.BLNPPNGNGHE },
            |m: &mut FMNHHNAMOAG| { &mut m.BLNPPNGNGHE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HDDHMONGJCC",
            |m: &FMNHHNAMOAG| { &m.HDDHMONGJCC },
            |m: &mut FMNHHNAMOAG| { &mut m.HDDHMONGJCC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IAOPPFCJAGC",
            |m: &FMNHHNAMOAG| { &m.IAOPPFCJAGC },
            |m: &mut FMNHHNAMOAG| { &mut m.IAOPPFCJAGC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DHOLGLOIHFD",
            |m: &FMNHHNAMOAG| { &m.DHOLGLOIHFD },
            |m: &mut FMNHHNAMOAG| { &mut m.DHOLGLOIHFD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "DIPPONCOFGC",
            |m: &FMNHHNAMOAG| { &m.DIPPONCOFGC },
            |m: &mut FMNHHNAMOAG| { &mut m.DIPPONCOFGC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ILLIKOCDJNG",
            |m: &FMNHHNAMOAG| { &m.ILLIKOCDJNG },
            |m: &mut FMNHHNAMOAG| { &mut m.ILLIKOCDJNG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CGPHFKGLCNK",
            |m: &FMNHHNAMOAG| { &m.CGPHFKGLCNK },
            |m: &mut FMNHHNAMOAG| { &mut m.CGPHFKGLCNK },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<FMNHHNAMOAG>(
            "FMNHHNAMOAG",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for FMNHHNAMOAG {
    const NAME: &'static str = "FMNHHNAMOAG";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                6762 => {
                    self.JPCFKHJMIHH = is.read_string()?;
                },
                16 => {
                    self.NHMMMNEEJNH = is.read_uint64()?;
                },
                120 => {
                    self.DEONHMIADDA = is.read_uint32()?;
                },
                66 => {
                    self.PIMDCIPJNDF.push(is.read_message()?);
                },
                74 => {
                    self.FFHNBNEMHPD.push(is.read_message()?);
                },
                106 => {
                    self.PDPGPCNFEON.push(is.read_message()?);
                },
                96 => {
                    self.MNAKFNFJLFK = is.read_uint32()?;
                },
                8 => {
                    self.DNPNFBLCNLM = is.read_uint32()?;
                },
                40 => {
                    self.KKMFONNHFOI = is.read_uint32()?;
                },
                50 => {
                    self.DJLJPDBBBFJ.push(is.read_message()?);
                },
                56 => {
                    self.MHCFADKCKND = is.read_uint32()?;
                },
                88 => {
                    self.BLNPPNGNGHE = is.read_bool()?;
                },
                13282 => {
                    self.HDDHMONGJCC = is.read_string()?;
                },
                24 => {
                    self.IAOPPFCJAGC = is.read_uint32()?;
                },
                32 => {
                    self.DHOLGLOIHFD = is.read_uint64()?;
                },
                82 => {
                    self.DIPPONCOFGC.push(is.read_message()?);
                },
                112 => {
                    self.ILLIKOCDJNG = is.read_uint64()?;
                },
                5370 => {
                    self.CGPHFKGLCNK = is.read_string()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if !self.JPCFKHJMIHH.is_empty() {
            my_size += ::protobuf::rt::string_size(845, &self.JPCFKHJMIHH);
        }
        if self.NHMMMNEEJNH != 0 {
            my_size += ::protobuf::rt::uint64_size(2, self.NHMMMNEEJNH);
        }
        if self.DEONHMIADDA != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.DEONHMIADDA);
        }
        for value in &self.PIMDCIPJNDF {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.FFHNBNEMHPD {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.PDPGPCNFEON {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.MNAKFNFJLFK != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.MNAKFNFJLFK);
        }
        if self.DNPNFBLCNLM != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.DNPNFBLCNLM);
        }
        if self.KKMFONNHFOI != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.KKMFONNHFOI);
        }
        for value in &self.DJLJPDBBBFJ {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.MHCFADKCKND != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.MHCFADKCKND);
        }
        if self.BLNPPNGNGHE != false {
            my_size += 1 + 1;
        }
        if !self.HDDHMONGJCC.is_empty() {
            my_size += ::protobuf::rt::string_size(1660, &self.HDDHMONGJCC);
        }
        if self.IAOPPFCJAGC != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.IAOPPFCJAGC);
        }
        if self.DHOLGLOIHFD != 0 {
            my_size += ::protobuf::rt::uint64_size(4, self.DHOLGLOIHFD);
        }
        for value in &self.DIPPONCOFGC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.ILLIKOCDJNG != 0 {
            my_size += ::protobuf::rt::uint64_size(14, self.ILLIKOCDJNG);
        }
        if !self.CGPHFKGLCNK.is_empty() {
            my_size += ::protobuf::rt::string_size(671, &self.CGPHFKGLCNK);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if !self.JPCFKHJMIHH.is_empty() {
            os.write_string(845, &self.JPCFKHJMIHH)?;
        }
        if self.NHMMMNEEJNH != 0 {
            os.write_uint64(2, self.NHMMMNEEJNH)?;
        }
        if self.DEONHMIADDA != 0 {
            os.write_uint32(15, self.DEONHMIADDA)?;
        }
        for v in &self.PIMDCIPJNDF {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        };
        for v in &self.FFHNBNEMHPD {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        };
        for v in &self.PDPGPCNFEON {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        };
        if self.MNAKFNFJLFK != 0 {
            os.write_uint32(12, self.MNAKFNFJLFK)?;
        }
        if self.DNPNFBLCNLM != 0 {
            os.write_uint32(1, self.DNPNFBLCNLM)?;
        }
        if self.KKMFONNHFOI != 0 {
            os.write_uint32(5, self.KKMFONNHFOI)?;
        }
        for v in &self.DJLJPDBBBFJ {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        };
        if self.MHCFADKCKND != 0 {
            os.write_uint32(7, self.MHCFADKCKND)?;
        }
        if self.BLNPPNGNGHE != false {
            os.write_bool(11, self.BLNPPNGNGHE)?;
        }
        if !self.HDDHMONGJCC.is_empty() {
            os.write_string(1660, &self.HDDHMONGJCC)?;
        }
        if self.IAOPPFCJAGC != 0 {
            os.write_uint32(3, self.IAOPPFCJAGC)?;
        }
        if self.DHOLGLOIHFD != 0 {
            os.write_uint64(4, self.DHOLGLOIHFD)?;
        }
        for v in &self.DIPPONCOFGC {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        };
        if self.ILLIKOCDJNG != 0 {
            os.write_uint64(14, self.ILLIKOCDJNG)?;
        }
        if !self.CGPHFKGLCNK.is_empty() {
            os.write_string(671, &self.CGPHFKGLCNK)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> FMNHHNAMOAG {
        FMNHHNAMOAG::new()
    }

    fn clear(&mut self) {
        self.JPCFKHJMIHH.clear();
        self.NHMMMNEEJNH = 0;
        self.DEONHMIADDA = 0;
        self.PIMDCIPJNDF.clear();
        self.FFHNBNEMHPD.clear();
        self.PDPGPCNFEON.clear();
        self.MNAKFNFJLFK = 0;
        self.DNPNFBLCNLM = 0;
        self.KKMFONNHFOI = 0;
        self.DJLJPDBBBFJ.clear();
        self.MHCFADKCKND = 0;
        self.BLNPPNGNGHE = false;
        self.HDDHMONGJCC.clear();
        self.IAOPPFCJAGC = 0;
        self.DHOLGLOIHFD = 0;
        self.DIPPONCOFGC.clear();
        self.ILLIKOCDJNG = 0;
        self.CGPHFKGLCNK.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static FMNHHNAMOAG {
        static instance: FMNHHNAMOAG = FMNHHNAMOAG {
            JPCFKHJMIHH: ::std::string::String::new(),
            NHMMMNEEJNH: 0,
            DEONHMIADDA: 0,
            PIMDCIPJNDF: ::std::vec::Vec::new(),
            FFHNBNEMHPD: ::std::vec::Vec::new(),
            PDPGPCNFEON: ::std::vec::Vec::new(),
            MNAKFNFJLFK: 0,
            DNPNFBLCNLM: 0,
            KKMFONNHFOI: 0,
            DJLJPDBBBFJ: ::std::vec::Vec::new(),
            MHCFADKCKND: 0,
            BLNPPNGNGHE: false,
            HDDHMONGJCC: ::std::string::String::new(),
            IAOPPFCJAGC: 0,
            DHOLGLOIHFD: 0,
            DIPPONCOFGC: ::std::vec::Vec::new(),
            ILLIKOCDJNG: 0,
            CGPHFKGLCNK: ::std::string::String::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for FMNHHNAMOAG {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("FMNHHNAMOAG").unwrap()).clone()
    }
}

impl ::std::fmt::Display for FMNHHNAMOAG {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for FMNHHNAMOAG {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11FMNHHNAMOAG.proto\x1a\x11BJOHNJOJPOO.proto\x1a\x11IIJDDMKBAOF.prot\
    o\"\xba\x05\n\x0bFMNHHNAMOAG\x12!\n\x0bJPCFKHJMIHH\x18\xcd\x06\x20\x01(\
    \tR\x0bJPCFKHJMIHH\x12\x20\n\x0bNHMMMNEEJNH\x18\x02\x20\x01(\x04R\x0bNHM\
    MMNEEJNH\x12\x20\n\x0bDEONHMIADDA\x18\x0f\x20\x01(\rR\x0bDEONHMIADDA\x12\
    .\n\x0bPIMDCIPJNDF\x18\x08\x20\x03(\x0b2\x0c.BJOHNJOJPOOR\x0bPIMDCIPJNDF\
    \x12.\n\x0bFFHNBNEMHPD\x18\t\x20\x03(\x0b2\x0c.IIJDDMKBAOFR\x0bFFHNBNEMH\
    PD\x12.\n\x0bPDPGPCNFEON\x18\r\x20\x03(\x0b2\x0c.IIJDDMKBAOFR\x0bPDPGPCN\
    FEON\x12\x20\n\x0bMNAKFNFJLFK\x18\x0c\x20\x01(\rR\x0bMNAKFNFJLFK\x12\x20\
    \n\x0bDNPNFBLCNLM\x18\x01\x20\x01(\rR\x0bDNPNFBLCNLM\x12\x20\n\x0bKKMFON\
    NHFOI\x18\x05\x20\x01(\rR\x0bKKMFONNHFOI\x12.\n\x0bDJLJPDBBBFJ\x18\x06\
    \x20\x03(\x0b2\x0c.IIJDDMKBAOFR\x0bDJLJPDBBBFJ\x12\x20\n\x0bMHCFADKCKND\
    \x18\x07\x20\x01(\rR\x0bMHCFADKCKND\x12\x20\n\x0bBLNPPNGNGHE\x18\x0b\x20\
    \x01(\x08R\x0bBLNPPNGNGHE\x12!\n\x0bHDDHMONGJCC\x18\xfc\x0c\x20\x01(\tR\
    \x0bHDDHMONGJCC\x12\x20\n\x0bIAOPPFCJAGC\x18\x03\x20\x01(\rR\x0bIAOPPFCJ\
    AGC\x12\x20\n\x0bDHOLGLOIHFD\x18\x04\x20\x01(\x04R\x0bDHOLGLOIHFD\x12.\n\
    \x0bDIPPONCOFGC\x18\n\x20\x03(\x0b2\x0c.IIJDDMKBAOFR\x0bDIPPONCOFGC\x12\
    \x20\n\x0bILLIKOCDJNG\x18\x0e\x20\x01(\x04R\x0bILLIKOCDJNG\x12!\n\x0bCGP\
    HFKGLCNK\x18\x9f\x05\x20\x01(\tR\x0bCGPHFKGLCNKb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::BJOHNJOJPOO::file_descriptor().clone());
            deps.push(super::IIJDDMKBAOF::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(FMNHHNAMOAG::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
