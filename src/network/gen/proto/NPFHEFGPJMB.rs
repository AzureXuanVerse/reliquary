// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `NPFHEFGPJMB.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:NPFHEFGPJMB)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct NPFHEFGPJMB {
    // message fields
    // @@protoc_insertion_point(field:NPFHEFGPJMB.JHFEDGIMCDG)
    pub JHFEDGIMCDG: ::protobuf::EnumOrUnknown<super::AvatarType::AvatarType>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.FFKNMAONGIB)
    pub FFKNMAONGIB: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.level)
    pub level: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.rank)
    pub rank: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.ICCIODCOABK)
    pub ICCIODCOABK: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.skilltree_list)
    pub skilltree_list: ::std::vec::Vec<super::AvatarSkillTree::AvatarSkillTree>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.equipment_list)
    pub equipment_list: ::std::vec::Vec<super::LAOBNJCBJEK::LAOBNJCBJEK>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.OHLNDHCKIOM)
    pub OHLNDHCKIOM: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.promotion)
    pub promotion: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.relic_list)
    pub relic_list: ::std::vec::Vec<super::KCGJMLBGBHD::KCGJMLBGBHD>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.CFNJJEJIGOK)
    pub CFNJJEJIGOK: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.JBEDLBFPGBD)
    pub JBEDLBFPGBD: u32,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.NLCJCLFGMIN)
    pub NLCJCLFGMIN: ::protobuf::MessageField<super::EPHIOEIMEPB::EPHIOEIMEPB>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.ACGEHFOBIKI)
    pub ACGEHFOBIKI: ::protobuf::MessageField<super::EPOGFCJNAAP::EPOGFCJNAAP>,
    // @@protoc_insertion_point(field:NPFHEFGPJMB.PGIJNIBEDFO)
    pub PGIJNIBEDFO: u32,
    // special fields
    // @@protoc_insertion_point(special_field:NPFHEFGPJMB.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a NPFHEFGPJMB {
    fn default() -> &'a NPFHEFGPJMB {
        <NPFHEFGPJMB as ::protobuf::Message>::default_instance()
    }
}

impl NPFHEFGPJMB {
    pub fn new() -> NPFHEFGPJMB {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(15);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JHFEDGIMCDG",
            |m: &NPFHEFGPJMB| { &m.JHFEDGIMCDG },
            |m: &mut NPFHEFGPJMB| { &mut m.JHFEDGIMCDG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FFKNMAONGIB",
            |m: &NPFHEFGPJMB| { &m.FFKNMAONGIB },
            |m: &mut NPFHEFGPJMB| { &mut m.FFKNMAONGIB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "level",
            |m: &NPFHEFGPJMB| { &m.level },
            |m: &mut NPFHEFGPJMB| { &mut m.level },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "rank",
            |m: &NPFHEFGPJMB| { &m.rank },
            |m: &mut NPFHEFGPJMB| { &mut m.rank },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ICCIODCOABK",
            |m: &NPFHEFGPJMB| { &m.ICCIODCOABK },
            |m: &mut NPFHEFGPJMB| { &mut m.ICCIODCOABK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "skilltree_list",
            |m: &NPFHEFGPJMB| { &m.skilltree_list },
            |m: &mut NPFHEFGPJMB| { &mut m.skilltree_list },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "equipment_list",
            |m: &NPFHEFGPJMB| { &m.equipment_list },
            |m: &mut NPFHEFGPJMB| { &mut m.equipment_list },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OHLNDHCKIOM",
            |m: &NPFHEFGPJMB| { &m.OHLNDHCKIOM },
            |m: &mut NPFHEFGPJMB| { &mut m.OHLNDHCKIOM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "promotion",
            |m: &NPFHEFGPJMB| { &m.promotion },
            |m: &mut NPFHEFGPJMB| { &mut m.promotion },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "relic_list",
            |m: &NPFHEFGPJMB| { &m.relic_list },
            |m: &mut NPFHEFGPJMB| { &mut m.relic_list },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CFNJJEJIGOK",
            |m: &NPFHEFGPJMB| { &m.CFNJJEJIGOK },
            |m: &mut NPFHEFGPJMB| { &mut m.CFNJJEJIGOK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JBEDLBFPGBD",
            |m: &NPFHEFGPJMB| { &m.JBEDLBFPGBD },
            |m: &mut NPFHEFGPJMB| { &mut m.JBEDLBFPGBD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EPHIOEIMEPB::EPHIOEIMEPB>(
            "NLCJCLFGMIN",
            |m: &NPFHEFGPJMB| { &m.NLCJCLFGMIN },
            |m: &mut NPFHEFGPJMB| { &mut m.NLCJCLFGMIN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EPOGFCJNAAP::EPOGFCJNAAP>(
            "ACGEHFOBIKI",
            |m: &NPFHEFGPJMB| { &m.ACGEHFOBIKI },
            |m: &mut NPFHEFGPJMB| { &mut m.ACGEHFOBIKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PGIJNIBEDFO",
            |m: &NPFHEFGPJMB| { &m.PGIJNIBEDFO },
            |m: &mut NPFHEFGPJMB| { &mut m.PGIJNIBEDFO },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<NPFHEFGPJMB>(
            "NPFHEFGPJMB",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for NPFHEFGPJMB {
    const NAME: &'static str = "NPFHEFGPJMB";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.JHFEDGIMCDG = is.read_enum_or_unknown()?;
                },
                16 => {
                    self.FFKNMAONGIB = is.read_uint32()?;
                },
                24 => {
                    self.level = is.read_uint32()?;
                },
                32 => {
                    self.rank = is.read_uint32()?;
                },
                40 => {
                    self.ICCIODCOABK = is.read_uint32()?;
                },
                50 => {
                    self.skilltree_list.push(is.read_message()?);
                },
                58 => {
                    self.equipment_list.push(is.read_message()?);
                },
                64 => {
                    self.OHLNDHCKIOM = is.read_uint32()?;
                },
                80 => {
                    self.promotion = is.read_uint32()?;
                },
                90 => {
                    self.relic_list.push(is.read_message()?);
                },
                96 => {
                    self.CFNJJEJIGOK = is.read_uint32()?;
                },
                104 => {
                    self.JBEDLBFPGBD = is.read_uint32()?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NLCJCLFGMIN)?;
                },
                130 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.ACGEHFOBIKI)?;
                },
                136 => {
                    self.PGIJNIBEDFO = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.JHFEDGIMCDG != ::protobuf::EnumOrUnknown::new(super::AvatarType::AvatarType::AVATAR_TYPE_NONE) {
            my_size += ::protobuf::rt::int32_size(1, self.JHFEDGIMCDG.value());
        }
        if self.FFKNMAONGIB != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.FFKNMAONGIB);
        }
        if self.level != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.level);
        }
        if self.rank != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.rank);
        }
        if self.ICCIODCOABK != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.ICCIODCOABK);
        }
        for value in &self.skilltree_list {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.equipment_list {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OHLNDHCKIOM != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.OHLNDHCKIOM);
        }
        if self.promotion != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.promotion);
        }
        for value in &self.relic_list {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.CFNJJEJIGOK != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.CFNJJEJIGOK);
        }
        if self.JBEDLBFPGBD != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.JBEDLBFPGBD);
        }
        if let Some(v) = self.NLCJCLFGMIN.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.ACGEHFOBIKI.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.PGIJNIBEDFO != 0 {
            my_size += ::protobuf::rt::uint32_size(17, self.PGIJNIBEDFO);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.JHFEDGIMCDG != ::protobuf::EnumOrUnknown::new(super::AvatarType::AvatarType::AVATAR_TYPE_NONE) {
            os.write_enum(1, ::protobuf::EnumOrUnknown::value(&self.JHFEDGIMCDG))?;
        }
        if self.FFKNMAONGIB != 0 {
            os.write_uint32(2, self.FFKNMAONGIB)?;
        }
        if self.level != 0 {
            os.write_uint32(3, self.level)?;
        }
        if self.rank != 0 {
            os.write_uint32(4, self.rank)?;
        }
        if self.ICCIODCOABK != 0 {
            os.write_uint32(5, self.ICCIODCOABK)?;
        }
        for v in &self.skilltree_list {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        };
        for v in &self.equipment_list {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        };
        if self.OHLNDHCKIOM != 0 {
            os.write_uint32(8, self.OHLNDHCKIOM)?;
        }
        if self.promotion != 0 {
            os.write_uint32(10, self.promotion)?;
        }
        for v in &self.relic_list {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        };
        if self.CFNJJEJIGOK != 0 {
            os.write_uint32(12, self.CFNJJEJIGOK)?;
        }
        if self.JBEDLBFPGBD != 0 {
            os.write_uint32(13, self.JBEDLBFPGBD)?;
        }
        if let Some(v) = self.NLCJCLFGMIN.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if let Some(v) = self.ACGEHFOBIKI.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(16, v, os)?;
        }
        if self.PGIJNIBEDFO != 0 {
            os.write_uint32(17, self.PGIJNIBEDFO)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> NPFHEFGPJMB {
        NPFHEFGPJMB::new()
    }

    fn clear(&mut self) {
        self.JHFEDGIMCDG = ::protobuf::EnumOrUnknown::new(super::AvatarType::AvatarType::AVATAR_TYPE_NONE);
        self.FFKNMAONGIB = 0;
        self.level = 0;
        self.rank = 0;
        self.ICCIODCOABK = 0;
        self.skilltree_list.clear();
        self.equipment_list.clear();
        self.OHLNDHCKIOM = 0;
        self.promotion = 0;
        self.relic_list.clear();
        self.CFNJJEJIGOK = 0;
        self.JBEDLBFPGBD = 0;
        self.NLCJCLFGMIN.clear();
        self.ACGEHFOBIKI.clear();
        self.PGIJNIBEDFO = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static NPFHEFGPJMB {
        static instance: NPFHEFGPJMB = NPFHEFGPJMB {
            JHFEDGIMCDG: ::protobuf::EnumOrUnknown::from_i32(0),
            FFKNMAONGIB: 0,
            level: 0,
            rank: 0,
            ICCIODCOABK: 0,
            skilltree_list: ::std::vec::Vec::new(),
            equipment_list: ::std::vec::Vec::new(),
            OHLNDHCKIOM: 0,
            promotion: 0,
            relic_list: ::std::vec::Vec::new(),
            CFNJJEJIGOK: 0,
            JBEDLBFPGBD: 0,
            NLCJCLFGMIN: ::protobuf::MessageField::none(),
            ACGEHFOBIKI: ::protobuf::MessageField::none(),
            PGIJNIBEDFO: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for NPFHEFGPJMB {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("NPFHEFGPJMB").unwrap()).clone()
    }
}

impl ::std::fmt::Display for NPFHEFGPJMB {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for NPFHEFGPJMB {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11NPFHEFGPJMB.proto\x1a\x15AvatarSkillTree.proto\x1a\x10AvatarType.p\
    roto\x1a\x11EPHIOEIMEPB.proto\x1a\x11EPOGFCJNAAP.proto\x1a\x11KCGJMLBGBH\
    D.proto\x1a\x11LAOBNJCBJEK.proto\"\xcb\x04\n\x0bNPFHEFGPJMB\x12-\n\x0bJH\
    FEDGIMCDG\x18\x01\x20\x01(\x0e2\x0b.AvatarTypeR\x0bJHFEDGIMCDG\x12\x20\n\
    \x0bFFKNMAONGIB\x18\x02\x20\x01(\rR\x0bFFKNMAONGIB\x12\x14\n\x05level\
    \x18\x03\x20\x01(\rR\x05level\x12\x12\n\x04rank\x18\x04\x20\x01(\rR\x04r\
    ank\x12\x20\n\x0bICCIODCOABK\x18\x05\x20\x01(\rR\x0bICCIODCOABK\x127\n\
    \x0eskilltree_list\x18\x06\x20\x03(\x0b2\x10.AvatarSkillTreeR\rskilltree\
    List\x123\n\x0eequipment_list\x18\x07\x20\x03(\x0b2\x0c.LAOBNJCBJEKR\req\
    uipmentList\x12\x20\n\x0bOHLNDHCKIOM\x18\x08\x20\x01(\rR\x0bOHLNDHCKIOM\
    \x12\x1c\n\tpromotion\x18\n\x20\x01(\rR\tpromotion\x12+\n\nrelic_list\
    \x18\x0b\x20\x03(\x0b2\x0c.KCGJMLBGBHDR\trelicList\x12\x20\n\x0bCFNJJEJI\
    GOK\x18\x0c\x20\x01(\rR\x0bCFNJJEJIGOK\x12\x20\n\x0bJBEDLBFPGBD\x18\r\
    \x20\x01(\rR\x0bJBEDLBFPGBD\x12.\n\x0bNLCJCLFGMIN\x18\x0f\x20\x01(\x0b2\
    \x0c.EPHIOEIMEPBR\x0bNLCJCLFGMIN\x12.\n\x0bACGEHFOBIKI\x18\x10\x20\x01(\
    \x0b2\x0c.EPOGFCJNAAPR\x0bACGEHFOBIKI\x12\x20\n\x0bPGIJNIBEDFO\x18\x11\
    \x20\x01(\rR\x0bPGIJNIBEDFOb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(6);
            deps.push(super::AvatarSkillTree::file_descriptor().clone());
            deps.push(super::AvatarType::file_descriptor().clone());
            deps.push(super::EPHIOEIMEPB::file_descriptor().clone());
            deps.push(super::EPOGFCJNAAP::file_descriptor().clone());
            deps.push(super::KCGJMLBGBHD::file_descriptor().clone());
            deps.push(super::LAOBNJCBJEK::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(NPFHEFGPJMB::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
