// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `MBNBJKBNHLG.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:MBNBJKBNHLG)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct MBNBJKBNHLG {
    // message fields
    // @@protoc_insertion_point(field:MBNBJKBNHLG.OAPJDHGLPNO)
    pub OAPJDHGLPNO: u32,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.LJFFFILHFAC)
    pub LJFFFILHFAC: ::std::vec::Vec<super::DisplayAvatarDetailInfo::DisplayAvatarDetailInfo>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.MDGODKOKBKK)
    pub MDGODKOKBKK: ::protobuf::MessageField<super::JINKMDKJADI::JINKMDKJADI>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.IIPGDDFDNBF)
    pub IIPGDDFDNBF: ::std::string::String,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.CFNJJEJIGOK)
    pub CFNJJEJIGOK: u32,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.KDPKMJOKGEB)
    pub KDPKMJOKGEB: ::protobuf::MessageField<super::INLKOMPHCJG::INLKOMPHCJG>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.HBHNPOFEPOD)
    pub HBHNPOFEPOD: u32,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.FFHMJJADIBG)
    pub FFHMJJADIBG: ::std::string::String,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.JLNOEGLAJAA)
    pub JLNOEGLAJAA: bool,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.level)
    pub level: u32,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.DEPEKPIEGJO)
    pub DEPEKPIEGJO: u32,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.PGDMKCOCJGJ)
    pub PGDMKCOCJGJ: ::std::vec::Vec<super::DisplayAvatarDetailInfo::DisplayAvatarDetailInfo>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.NMBOMMJJMMB)
    pub NMBOMMJJMMB: ::protobuf::MessageField<super::FJNMNNFEPGJ::FJNMNNFEPGJ>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.MMMINKGDBAF)
    pub MMMINKGDBAF: ::protobuf::EnumOrUnknown<super::BMDNJEKCOAJ::BMDNJEKCOAJ>,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.PDCILADMJIJ)
    pub PDCILADMJIJ: ::std::string::String,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.AEOHJINGIFK)
    pub AEOHJINGIFK: ::std::string::String,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.LHCINMIBDIO)
    pub LHCINMIBDIO: bool,
    // @@protoc_insertion_point(field:MBNBJKBNHLG.DJAEJINCKFM)
    pub DJAEJINCKFM: u32,
    // special fields
    // @@protoc_insertion_point(special_field:MBNBJKBNHLG.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a MBNBJKBNHLG {
    fn default() -> &'a MBNBJKBNHLG {
        <MBNBJKBNHLG as ::protobuf::Message>::default_instance()
    }
}

impl MBNBJKBNHLG {
    pub fn new() -> MBNBJKBNHLG {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OAPJDHGLPNO",
            |m: &MBNBJKBNHLG| { &m.OAPJDHGLPNO },
            |m: &mut MBNBJKBNHLG| { &mut m.OAPJDHGLPNO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LJFFFILHFAC",
            |m: &MBNBJKBNHLG| { &m.LJFFFILHFAC },
            |m: &mut MBNBJKBNHLG| { &mut m.LJFFFILHFAC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::JINKMDKJADI::JINKMDKJADI>(
            "MDGODKOKBKK",
            |m: &MBNBJKBNHLG| { &m.MDGODKOKBKK },
            |m: &mut MBNBJKBNHLG| { &mut m.MDGODKOKBKK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IIPGDDFDNBF",
            |m: &MBNBJKBNHLG| { &m.IIPGDDFDNBF },
            |m: &mut MBNBJKBNHLG| { &mut m.IIPGDDFDNBF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CFNJJEJIGOK",
            |m: &MBNBJKBNHLG| { &m.CFNJJEJIGOK },
            |m: &mut MBNBJKBNHLG| { &mut m.CFNJJEJIGOK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::INLKOMPHCJG::INLKOMPHCJG>(
            "KDPKMJOKGEB",
            |m: &MBNBJKBNHLG| { &m.KDPKMJOKGEB },
            |m: &mut MBNBJKBNHLG| { &mut m.KDPKMJOKGEB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HBHNPOFEPOD",
            |m: &MBNBJKBNHLG| { &m.HBHNPOFEPOD },
            |m: &mut MBNBJKBNHLG| { &mut m.HBHNPOFEPOD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FFHMJJADIBG",
            |m: &MBNBJKBNHLG| { &m.FFHMJJADIBG },
            |m: &mut MBNBJKBNHLG| { &mut m.FFHMJJADIBG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JLNOEGLAJAA",
            |m: &MBNBJKBNHLG| { &m.JLNOEGLAJAA },
            |m: &mut MBNBJKBNHLG| { &mut m.JLNOEGLAJAA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "level",
            |m: &MBNBJKBNHLG| { &m.level },
            |m: &mut MBNBJKBNHLG| { &mut m.level },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DEPEKPIEGJO",
            |m: &MBNBJKBNHLG| { &m.DEPEKPIEGJO },
            |m: &mut MBNBJKBNHLG| { &mut m.DEPEKPIEGJO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PGDMKCOCJGJ",
            |m: &MBNBJKBNHLG| { &m.PGDMKCOCJGJ },
            |m: &mut MBNBJKBNHLG| { &mut m.PGDMKCOCJGJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FJNMNNFEPGJ::FJNMNNFEPGJ>(
            "NMBOMMJJMMB",
            |m: &MBNBJKBNHLG| { &m.NMBOMMJJMMB },
            |m: &mut MBNBJKBNHLG| { &mut m.NMBOMMJJMMB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MMMINKGDBAF",
            |m: &MBNBJKBNHLG| { &m.MMMINKGDBAF },
            |m: &mut MBNBJKBNHLG| { &mut m.MMMINKGDBAF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PDCILADMJIJ",
            |m: &MBNBJKBNHLG| { &m.PDCILADMJIJ },
            |m: &mut MBNBJKBNHLG| { &mut m.PDCILADMJIJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AEOHJINGIFK",
            |m: &MBNBJKBNHLG| { &m.AEOHJINGIFK },
            |m: &mut MBNBJKBNHLG| { &mut m.AEOHJINGIFK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LHCINMIBDIO",
            |m: &MBNBJKBNHLG| { &m.LHCINMIBDIO },
            |m: &mut MBNBJKBNHLG| { &mut m.LHCINMIBDIO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DJAEJINCKFM",
            |m: &MBNBJKBNHLG| { &m.DJAEJINCKFM },
            |m: &mut MBNBJKBNHLG| { &mut m.DJAEJINCKFM },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<MBNBJKBNHLG>(
            "MBNBJKBNHLG",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for MBNBJKBNHLG {
    const NAME: &'static str = "MBNBJKBNHLG";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                64 => {
                    self.OAPJDHGLPNO = is.read_uint32()?;
                },
                98 => {
                    self.LJFFFILHFAC.push(is.read_message()?);
                },
                4914 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.MDGODKOKBKK)?;
                },
                10 => {
                    self.IIPGDDFDNBF = is.read_string()?;
                },
                88 => {
                    self.CFNJJEJIGOK = is.read_uint32()?;
                },
                2186 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KDPKMJOKGEB)?;
                },
                40 => {
                    self.HBHNPOFEPOD = is.read_uint32()?;
                },
                18 => {
                    self.FFHMJJADIBG = is.read_string()?;
                },
                32 => {
                    self.JLNOEGLAJAA = is.read_bool()?;
                },
                56 => {
                    self.level = is.read_uint32()?;
                },
                24 => {
                    self.DEPEKPIEGJO = is.read_uint32()?;
                },
                12754 => {
                    self.PGDMKCOCJGJ.push(is.read_message()?);
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NMBOMMJJMMB)?;
                },
                72 => {
                    self.MMMINKGDBAF = is.read_enum_or_unknown()?;
                },
                106 => {
                    self.PDCILADMJIJ = is.read_string()?;
                },
                114 => {
                    self.AEOHJINGIFK = is.read_string()?;
                },
                80 => {
                    self.LHCINMIBDIO = is.read_bool()?;
                },
                48 => {
                    self.DJAEJINCKFM = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.OAPJDHGLPNO != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.OAPJDHGLPNO);
        }
        for value in &self.LJFFFILHFAC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.MDGODKOKBKK.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if !self.IIPGDDFDNBF.is_empty() {
            my_size += ::protobuf::rt::string_size(1, &self.IIPGDDFDNBF);
        }
        if self.CFNJJEJIGOK != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.CFNJJEJIGOK);
        }
        if let Some(v) = self.KDPKMJOKGEB.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.HBHNPOFEPOD != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.HBHNPOFEPOD);
        }
        if !self.FFHMJJADIBG.is_empty() {
            my_size += ::protobuf::rt::string_size(2, &self.FFHMJJADIBG);
        }
        if self.JLNOEGLAJAA != false {
            my_size += 1 + 1;
        }
        if self.level != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.level);
        }
        if self.DEPEKPIEGJO != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.DEPEKPIEGJO);
        }
        for value in &self.PGDMKCOCJGJ {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.NMBOMMJJMMB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.MMMINKGDBAF != ::protobuf::EnumOrUnknown::new(super::BMDNJEKCOAJ::BMDNJEKCOAJ::EDITOR) {
            my_size += ::protobuf::rt::int32_size(9, self.MMMINKGDBAF.value());
        }
        if !self.PDCILADMJIJ.is_empty() {
            my_size += ::protobuf::rt::string_size(13, &self.PDCILADMJIJ);
        }
        if !self.AEOHJINGIFK.is_empty() {
            my_size += ::protobuf::rt::string_size(14, &self.AEOHJINGIFK);
        }
        if self.LHCINMIBDIO != false {
            my_size += 1 + 1;
        }
        if self.DJAEJINCKFM != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.DJAEJINCKFM);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.OAPJDHGLPNO != 0 {
            os.write_uint32(8, self.OAPJDHGLPNO)?;
        }
        for v in &self.LJFFFILHFAC {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if let Some(v) = self.MDGODKOKBKK.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(614, v, os)?;
        }
        if !self.IIPGDDFDNBF.is_empty() {
            os.write_string(1, &self.IIPGDDFDNBF)?;
        }
        if self.CFNJJEJIGOK != 0 {
            os.write_uint32(11, self.CFNJJEJIGOK)?;
        }
        if let Some(v) = self.KDPKMJOKGEB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(273, v, os)?;
        }
        if self.HBHNPOFEPOD != 0 {
            os.write_uint32(5, self.HBHNPOFEPOD)?;
        }
        if !self.FFHMJJADIBG.is_empty() {
            os.write_string(2, &self.FFHMJJADIBG)?;
        }
        if self.JLNOEGLAJAA != false {
            os.write_bool(4, self.JLNOEGLAJAA)?;
        }
        if self.level != 0 {
            os.write_uint32(7, self.level)?;
        }
        if self.DEPEKPIEGJO != 0 {
            os.write_uint32(3, self.DEPEKPIEGJO)?;
        }
        for v in &self.PGDMKCOCJGJ {
            ::protobuf::rt::write_message_field_with_cached_size(1594, v, os)?;
        };
        if let Some(v) = self.NMBOMMJJMMB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if self.MMMINKGDBAF != ::protobuf::EnumOrUnknown::new(super::BMDNJEKCOAJ::BMDNJEKCOAJ::EDITOR) {
            os.write_enum(9, ::protobuf::EnumOrUnknown::value(&self.MMMINKGDBAF))?;
        }
        if !self.PDCILADMJIJ.is_empty() {
            os.write_string(13, &self.PDCILADMJIJ)?;
        }
        if !self.AEOHJINGIFK.is_empty() {
            os.write_string(14, &self.AEOHJINGIFK)?;
        }
        if self.LHCINMIBDIO != false {
            os.write_bool(10, self.LHCINMIBDIO)?;
        }
        if self.DJAEJINCKFM != 0 {
            os.write_uint32(6, self.DJAEJINCKFM)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> MBNBJKBNHLG {
        MBNBJKBNHLG::new()
    }

    fn clear(&mut self) {
        self.OAPJDHGLPNO = 0;
        self.LJFFFILHFAC.clear();
        self.MDGODKOKBKK.clear();
        self.IIPGDDFDNBF.clear();
        self.CFNJJEJIGOK = 0;
        self.KDPKMJOKGEB.clear();
        self.HBHNPOFEPOD = 0;
        self.FFHMJJADIBG.clear();
        self.JLNOEGLAJAA = false;
        self.level = 0;
        self.DEPEKPIEGJO = 0;
        self.PGDMKCOCJGJ.clear();
        self.NMBOMMJJMMB.clear();
        self.MMMINKGDBAF = ::protobuf::EnumOrUnknown::new(super::BMDNJEKCOAJ::BMDNJEKCOAJ::EDITOR);
        self.PDCILADMJIJ.clear();
        self.AEOHJINGIFK.clear();
        self.LHCINMIBDIO = false;
        self.DJAEJINCKFM = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static MBNBJKBNHLG {
        static instance: MBNBJKBNHLG = MBNBJKBNHLG {
            OAPJDHGLPNO: 0,
            LJFFFILHFAC: ::std::vec::Vec::new(),
            MDGODKOKBKK: ::protobuf::MessageField::none(),
            IIPGDDFDNBF: ::std::string::String::new(),
            CFNJJEJIGOK: 0,
            KDPKMJOKGEB: ::protobuf::MessageField::none(),
            HBHNPOFEPOD: 0,
            FFHMJJADIBG: ::std::string::String::new(),
            JLNOEGLAJAA: false,
            level: 0,
            DEPEKPIEGJO: 0,
            PGDMKCOCJGJ: ::std::vec::Vec::new(),
            NMBOMMJJMMB: ::protobuf::MessageField::none(),
            MMMINKGDBAF: ::protobuf::EnumOrUnknown::from_i32(0),
            PDCILADMJIJ: ::std::string::String::new(),
            AEOHJINGIFK: ::std::string::String::new(),
            LHCINMIBDIO: false,
            DJAEJINCKFM: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for MBNBJKBNHLG {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("MBNBJKBNHLG").unwrap()).clone()
    }
}

impl ::std::fmt::Display for MBNBJKBNHLG {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for MBNBJKBNHLG {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11MBNBJKBNHLG.proto\x1a\x11BMDNJEKCOAJ.proto\x1a\x1dDisplayAvatarDet\
    ailInfo.proto\x1a\x11FJNMNNFEPGJ.proto\x1a\x11INLKOMPHCJG.proto\x1a\x11J\
    INKMDKJADI.proto\"\xd4\x05\n\x0bMBNBJKBNHLG\x12\x20\n\x0bOAPJDHGLPNO\x18\
    \x08\x20\x01(\rR\x0bOAPJDHGLPNO\x12:\n\x0bLJFFFILHFAC\x18\x0c\x20\x03(\
    \x0b2\x18.DisplayAvatarDetailInfoR\x0bLJFFFILHFAC\x12/\n\x0bMDGODKOKBKK\
    \x18\xe6\x04\x20\x01(\x0b2\x0c.JINKMDKJADIR\x0bMDGODKOKBKK\x12\x20\n\x0b\
    IIPGDDFDNBF\x18\x01\x20\x01(\tR\x0bIIPGDDFDNBF\x12\x20\n\x0bCFNJJEJIGOK\
    \x18\x0b\x20\x01(\rR\x0bCFNJJEJIGOK\x12/\n\x0bKDPKMJOKGEB\x18\x91\x02\
    \x20\x01(\x0b2\x0c.INLKOMPHCJGR\x0bKDPKMJOKGEB\x12\x20\n\x0bHBHNPOFEPOD\
    \x18\x05\x20\x01(\rR\x0bHBHNPOFEPOD\x12\x20\n\x0bFFHMJJADIBG\x18\x02\x20\
    \x01(\tR\x0bFFHMJJADIBG\x12\x20\n\x0bJLNOEGLAJAA\x18\x04\x20\x01(\x08R\
    \x0bJLNOEGLAJAA\x12\x14\n\x05level\x18\x07\x20\x01(\rR\x05level\x12\x20\
    \n\x0bDEPEKPIEGJO\x18\x03\x20\x01(\rR\x0bDEPEKPIEGJO\x12;\n\x0bPGDMKCOCJ\
    GJ\x18\xba\x0c\x20\x03(\x0b2\x18.DisplayAvatarDetailInfoR\x0bPGDMKCOCJGJ\
    \x12.\n\x0bNMBOMMJJMMB\x18\x0f\x20\x01(\x0b2\x0c.FJNMNNFEPGJR\x0bNMBOMMJ\
    JMMB\x12.\n\x0bMMMINKGDBAF\x18\t\x20\x01(\x0e2\x0c.BMDNJEKCOAJR\x0bMMMIN\
    KGDBAF\x12\x20\n\x0bPDCILADMJIJ\x18\r\x20\x01(\tR\x0bPDCILADMJIJ\x12\x20\
    \n\x0bAEOHJINGIFK\x18\x0e\x20\x01(\tR\x0bAEOHJINGIFK\x12\x20\n\x0bLHCINM\
    IBDIO\x18\n\x20\x01(\x08R\x0bLHCINMIBDIO\x12\x20\n\x0bDJAEJINCKFM\x18\
    \x06\x20\x01(\rR\x0bDJAEJINCKFMb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(5);
            deps.push(super::BMDNJEKCOAJ::file_descriptor().clone());
            deps.push(super::DisplayAvatarDetailInfo::file_descriptor().clone());
            deps.push(super::FJNMNNFEPGJ::file_descriptor().clone());
            deps.push(super::INLKOMPHCJG::file_descriptor().clone());
            deps.push(super::JINKMDKJADI::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(MBNBJKBNHLG::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
