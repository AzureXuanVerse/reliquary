// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `AKCIBFPMCIN.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:AKCIBFPMCIN)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct AKCIBFPMCIN {
    // message fields
    // @@protoc_insertion_point(field:AKCIBFPMCIN.GENANPJMLBM)
    pub GENANPJMLBM: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.HFMDIBOEOKN)
    pub HFMDIBOEOKN: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.LGIOKJPJOFN)
    pub LGIOKJPJOFN: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.ODBNBKCDDPC)
    pub ODBNBKCDDPC: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.EMPDGGAALDC)
    pub EMPDGGAALDC: ::protobuf::MessageField<super::BPLFDMICMFM::BPLFDMICMFM>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.KLEIENGLPDL)
    pub KLEIENGLPDL: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.IHCBEKOHBBJ)
    pub IHCBEKOHBBJ: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.KCBOCEAPHFK)
    pub KCBOCEAPHFK: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.NDPNLOIFAHH)
    pub NDPNLOIFAHH: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.ACNAAGPOIME)
    pub ACNAAGPOIME: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.HONFNPJEKBH)
    pub HONFNPJEKBH: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.IDIEPEFFGIC)
    pub IDIEPEFFGIC: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.IJEPENGMPLG)
    pub IJEPENGMPLG: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.GEHICNBDNFP)
    pub GEHICNBDNFP: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.HIPLCNKPAKM)
    pub HIPLCNKPAKM: ::std::vec::Vec<super::FCCLFKEHBIH::FCCLFKEHBIH>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.OCIJJEAHAEM)
    pub OCIJJEAHAEM: ::std::vec::Vec<super::ECFCOOLMBAB::ECFCOOLMBAB>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.EAENHEGCFOO)
    pub EAENHEGCFOO: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.JGABGKLPPBA)
    pub JGABGKLPPBA: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.ODEACJMKBLF)
    pub ODEACJMKBLF: f64,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.GCBMMMDLDKN)
    pub GCBMMMDLDKN: ::protobuf::EnumOrUnknown<super::ADKIINEHBCD::ADKIINEHBCD>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.BLEINMLIFDD)
    pub BLEINMLIFDD: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.BIDMILFDKIK)
    pub BIDMILFDKIK: i32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.MGGDEINKDMH)
    pub MGGDEINKDMH: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.DFJHDKKMPMM)
    pub DFJHDKKMPMM: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.MLCDMBECDJM)
    pub MLCDMBECDJM: ::protobuf::EnumOrUnknown<super::BPPBFGAEPNI::BPPBFGAEPNI>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.FFLNPGHOJDD)
    pub FFLNPGHOJDD: ::std::vec::Vec<super::PHKMLOMCNMN::PHKMLOMCNMN>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.OKGKMLGGMDO)
    pub OKGKMLGGMDO: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.KEPDCEILLJF)
    pub KEPDCEILLJF: ::std::vec::Vec<super::LFMNDNNIBLJ::LFMNDNNIBLJ>,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.JGHNPEBHBDK)
    pub JGHNPEBHBDK: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.LANOIPJHKAC)
    pub LANOIPJHKAC: u32,
    // @@protoc_insertion_point(field:AKCIBFPMCIN.AMLAAOLDKCL)
    pub AMLAAOLDKCL: ::protobuf::EnumOrUnknown<super::LBNOGHIMDMG::LBNOGHIMDMG>,
    // special fields
    // @@protoc_insertion_point(special_field:AKCIBFPMCIN.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a AKCIBFPMCIN {
    fn default() -> &'a AKCIBFPMCIN {
        <AKCIBFPMCIN as ::protobuf::Message>::default_instance()
    }
}

impl AKCIBFPMCIN {
    pub fn new() -> AKCIBFPMCIN {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(31);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GENANPJMLBM",
            |m: &AKCIBFPMCIN| { &m.GENANPJMLBM },
            |m: &mut AKCIBFPMCIN| { &mut m.GENANPJMLBM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HFMDIBOEOKN",
            |m: &AKCIBFPMCIN| { &m.HFMDIBOEOKN },
            |m: &mut AKCIBFPMCIN| { &mut m.HFMDIBOEOKN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LGIOKJPJOFN",
            |m: &AKCIBFPMCIN| { &m.LGIOKJPJOFN },
            |m: &mut AKCIBFPMCIN| { &mut m.LGIOKJPJOFN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ODBNBKCDDPC",
            |m: &AKCIBFPMCIN| { &m.ODBNBKCDDPC },
            |m: &mut AKCIBFPMCIN| { &mut m.ODBNBKCDDPC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BPLFDMICMFM::BPLFDMICMFM>(
            "EMPDGGAALDC",
            |m: &AKCIBFPMCIN| { &m.EMPDGGAALDC },
            |m: &mut AKCIBFPMCIN| { &mut m.EMPDGGAALDC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KLEIENGLPDL",
            |m: &AKCIBFPMCIN| { &m.KLEIENGLPDL },
            |m: &mut AKCIBFPMCIN| { &mut m.KLEIENGLPDL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IHCBEKOHBBJ",
            |m: &AKCIBFPMCIN| { &m.IHCBEKOHBBJ },
            |m: &mut AKCIBFPMCIN| { &mut m.IHCBEKOHBBJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KCBOCEAPHFK",
            |m: &AKCIBFPMCIN| { &m.KCBOCEAPHFK },
            |m: &mut AKCIBFPMCIN| { &mut m.KCBOCEAPHFK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NDPNLOIFAHH",
            |m: &AKCIBFPMCIN| { &m.NDPNLOIFAHH },
            |m: &mut AKCIBFPMCIN| { &mut m.NDPNLOIFAHH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ACNAAGPOIME",
            |m: &AKCIBFPMCIN| { &m.ACNAAGPOIME },
            |m: &mut AKCIBFPMCIN| { &mut m.ACNAAGPOIME },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HONFNPJEKBH",
            |m: &AKCIBFPMCIN| { &m.HONFNPJEKBH },
            |m: &mut AKCIBFPMCIN| { &mut m.HONFNPJEKBH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IDIEPEFFGIC",
            |m: &AKCIBFPMCIN| { &m.IDIEPEFFGIC },
            |m: &mut AKCIBFPMCIN| { &mut m.IDIEPEFFGIC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IJEPENGMPLG",
            |m: &AKCIBFPMCIN| { &m.IJEPENGMPLG },
            |m: &mut AKCIBFPMCIN| { &mut m.IJEPENGMPLG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GEHICNBDNFP",
            |m: &AKCIBFPMCIN| { &m.GEHICNBDNFP },
            |m: &mut AKCIBFPMCIN| { &mut m.GEHICNBDNFP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HIPLCNKPAKM",
            |m: &AKCIBFPMCIN| { &m.HIPLCNKPAKM },
            |m: &mut AKCIBFPMCIN| { &mut m.HIPLCNKPAKM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "OCIJJEAHAEM",
            |m: &AKCIBFPMCIN| { &m.OCIJJEAHAEM },
            |m: &mut AKCIBFPMCIN| { &mut m.OCIJJEAHAEM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EAENHEGCFOO",
            |m: &AKCIBFPMCIN| { &m.EAENHEGCFOO },
            |m: &mut AKCIBFPMCIN| { &mut m.EAENHEGCFOO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JGABGKLPPBA",
            |m: &AKCIBFPMCIN| { &m.JGABGKLPPBA },
            |m: &mut AKCIBFPMCIN| { &mut m.JGABGKLPPBA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ODEACJMKBLF",
            |m: &AKCIBFPMCIN| { &m.ODEACJMKBLF },
            |m: &mut AKCIBFPMCIN| { &mut m.ODEACJMKBLF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GCBMMMDLDKN",
            |m: &AKCIBFPMCIN| { &m.GCBMMMDLDKN },
            |m: &mut AKCIBFPMCIN| { &mut m.GCBMMMDLDKN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BLEINMLIFDD",
            |m: &AKCIBFPMCIN| { &m.BLEINMLIFDD },
            |m: &mut AKCIBFPMCIN| { &mut m.BLEINMLIFDD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BIDMILFDKIK",
            |m: &AKCIBFPMCIN| { &m.BIDMILFDKIK },
            |m: &mut AKCIBFPMCIN| { &mut m.BIDMILFDKIK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MGGDEINKDMH",
            |m: &AKCIBFPMCIN| { &m.MGGDEINKDMH },
            |m: &mut AKCIBFPMCIN| { &mut m.MGGDEINKDMH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DFJHDKKMPMM",
            |m: &AKCIBFPMCIN| { &m.DFJHDKKMPMM },
            |m: &mut AKCIBFPMCIN| { &mut m.DFJHDKKMPMM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MLCDMBECDJM",
            |m: &AKCIBFPMCIN| { &m.MLCDMBECDJM },
            |m: &mut AKCIBFPMCIN| { &mut m.MLCDMBECDJM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FFLNPGHOJDD",
            |m: &AKCIBFPMCIN| { &m.FFLNPGHOJDD },
            |m: &mut AKCIBFPMCIN| { &mut m.FFLNPGHOJDD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OKGKMLGGMDO",
            |m: &AKCIBFPMCIN| { &m.OKGKMLGGMDO },
            |m: &mut AKCIBFPMCIN| { &mut m.OKGKMLGGMDO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KEPDCEILLJF",
            |m: &AKCIBFPMCIN| { &m.KEPDCEILLJF },
            |m: &mut AKCIBFPMCIN| { &mut m.KEPDCEILLJF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JGHNPEBHBDK",
            |m: &AKCIBFPMCIN| { &m.JGHNPEBHBDK },
            |m: &mut AKCIBFPMCIN| { &mut m.JGHNPEBHBDK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LANOIPJHKAC",
            |m: &AKCIBFPMCIN| { &m.LANOIPJHKAC },
            |m: &mut AKCIBFPMCIN| { &mut m.LANOIPJHKAC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AMLAAOLDKCL",
            |m: &AKCIBFPMCIN| { &m.AMLAAOLDKCL },
            |m: &mut AKCIBFPMCIN| { &mut m.AMLAAOLDKCL },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<AKCIBFPMCIN>(
            "AKCIBFPMCIN",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for AKCIBFPMCIN {
    const NAME: &'static str = "AKCIBFPMCIN";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.GENANPJMLBM = is.read_uint32()?;
                },
                16 => {
                    self.HFMDIBOEOKN = is.read_uint32()?;
                },
                24 => {
                    self.LGIOKJPJOFN = is.read_uint32()?;
                },
                32 => {
                    self.ODBNBKCDDPC = is.read_uint32()?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EMPDGGAALDC)?;
                },
                48 => {
                    self.KLEIENGLPDL = is.read_uint32()?;
                },
                57 => {
                    self.IHCBEKOHBBJ = is.read_double()?;
                },
                65 => {
                    self.KCBOCEAPHFK = is.read_double()?;
                },
                73 => {
                    self.NDPNLOIFAHH = is.read_double()?;
                },
                81 => {
                    self.ACNAAGPOIME = is.read_double()?;
                },
                89 => {
                    self.HONFNPJEKBH = is.read_double()?;
                },
                96 => {
                    self.IDIEPEFFGIC = is.read_uint32()?;
                },
                104 => {
                    self.IJEPENGMPLG = is.read_uint32()?;
                },
                112 => {
                    self.GEHICNBDNFP = is.read_uint32()?;
                },
                122 => {
                    self.HIPLCNKPAKM.push(is.read_message()?);
                },
                130 => {
                    self.OCIJJEAHAEM.push(is.read_message()?);
                },
                136 => {
                    self.EAENHEGCFOO = is.read_uint32()?;
                },
                145 => {
                    self.JGABGKLPPBA = is.read_double()?;
                },
                153 => {
                    self.ODEACJMKBLF = is.read_double()?;
                },
                160 => {
                    self.GCBMMMDLDKN = is.read_enum_or_unknown()?;
                },
                168 => {
                    self.BLEINMLIFDD = is.read_uint32()?;
                },
                176 => {
                    self.BIDMILFDKIK = is.read_int32()?;
                },
                184 => {
                    self.MGGDEINKDMH = is.read_uint32()?;
                },
                192 => {
                    self.DFJHDKKMPMM = is.read_uint32()?;
                },
                200 => {
                    self.MLCDMBECDJM = is.read_enum_or_unknown()?;
                },
                210 => {
                    self.FFLNPGHOJDD.push(is.read_message()?);
                },
                216 => {
                    self.OKGKMLGGMDO = is.read_uint32()?;
                },
                226 => {
                    self.KEPDCEILLJF.push(is.read_message()?);
                },
                232 => {
                    self.JGHNPEBHBDK = is.read_uint32()?;
                },
                240 => {
                    self.LANOIPJHKAC = is.read_uint32()?;
                },
                248 => {
                    self.AMLAAOLDKCL = is.read_enum_or_unknown()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.GENANPJMLBM != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.GENANPJMLBM);
        }
        if self.HFMDIBOEOKN != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.HFMDIBOEOKN);
        }
        if self.LGIOKJPJOFN != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.LGIOKJPJOFN);
        }
        if self.ODBNBKCDDPC != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.ODBNBKCDDPC);
        }
        if let Some(v) = self.EMPDGGAALDC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.KLEIENGLPDL != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.KLEIENGLPDL);
        }
        if self.IHCBEKOHBBJ != 0. {
            my_size += 1 + 8;
        }
        if self.KCBOCEAPHFK != 0. {
            my_size += 1 + 8;
        }
        if self.NDPNLOIFAHH != 0. {
            my_size += 1 + 8;
        }
        if self.ACNAAGPOIME != 0. {
            my_size += 1 + 8;
        }
        if self.HONFNPJEKBH != 0. {
            my_size += 1 + 8;
        }
        if self.IDIEPEFFGIC != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.IDIEPEFFGIC);
        }
        if self.IJEPENGMPLG != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.IJEPENGMPLG);
        }
        if self.GEHICNBDNFP != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.GEHICNBDNFP);
        }
        for value in &self.HIPLCNKPAKM {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.OCIJJEAHAEM {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.EAENHEGCFOO != 0 {
            my_size += ::protobuf::rt::uint32_size(17, self.EAENHEGCFOO);
        }
        if self.JGABGKLPPBA != 0. {
            my_size += 2 + 8;
        }
        if self.ODEACJMKBLF != 0. {
            my_size += 2 + 8;
        }
        if self.GCBMMMDLDKN != ::protobuf::EnumOrUnknown::new(super::ADKIINEHBCD::ADKIINEHBCD::UNKNOWN) {
            my_size += ::protobuf::rt::int32_size(20, self.GCBMMMDLDKN.value());
        }
        if self.BLEINMLIFDD != 0 {
            my_size += ::protobuf::rt::uint32_size(21, self.BLEINMLIFDD);
        }
        if self.BIDMILFDKIK != 0 {
            my_size += ::protobuf::rt::int32_size(22, self.BIDMILFDKIK);
        }
        if self.MGGDEINKDMH != 0 {
            my_size += ::protobuf::rt::uint32_size(23, self.MGGDEINKDMH);
        }
        if self.DFJHDKKMPMM != 0 {
            my_size += ::protobuf::rt::uint32_size(24, self.DFJHDKKMPMM);
        }
        if self.MLCDMBECDJM != ::protobuf::EnumOrUnknown::new(super::BPPBFGAEPNI::BPPBFGAEPNI::TAG_NONE) {
            my_size += ::protobuf::rt::int32_size(25, self.MLCDMBECDJM.value());
        }
        for value in &self.FFLNPGHOJDD {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OKGKMLGGMDO != 0 {
            my_size += ::protobuf::rt::uint32_size(27, self.OKGKMLGGMDO);
        }
        for value in &self.KEPDCEILLJF {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.JGHNPEBHBDK != 0 {
            my_size += ::protobuf::rt::uint32_size(29, self.JGHNPEBHBDK);
        }
        if self.LANOIPJHKAC != 0 {
            my_size += ::protobuf::rt::uint32_size(30, self.LANOIPJHKAC);
        }
        if self.AMLAAOLDKCL != ::protobuf::EnumOrUnknown::new(super::LBNOGHIMDMG::LBNOGHIMDMG::NORMAL_CREATE) {
            my_size += ::protobuf::rt::int32_size(31, self.AMLAAOLDKCL.value());
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.GENANPJMLBM != 0 {
            os.write_uint32(1, self.GENANPJMLBM)?;
        }
        if self.HFMDIBOEOKN != 0 {
            os.write_uint32(2, self.HFMDIBOEOKN)?;
        }
        if self.LGIOKJPJOFN != 0 {
            os.write_uint32(3, self.LGIOKJPJOFN)?;
        }
        if self.ODBNBKCDDPC != 0 {
            os.write_uint32(4, self.ODBNBKCDDPC)?;
        }
        if let Some(v) = self.EMPDGGAALDC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if self.KLEIENGLPDL != 0 {
            os.write_uint32(6, self.KLEIENGLPDL)?;
        }
        if self.IHCBEKOHBBJ != 0. {
            os.write_double(7, self.IHCBEKOHBBJ)?;
        }
        if self.KCBOCEAPHFK != 0. {
            os.write_double(8, self.KCBOCEAPHFK)?;
        }
        if self.NDPNLOIFAHH != 0. {
            os.write_double(9, self.NDPNLOIFAHH)?;
        }
        if self.ACNAAGPOIME != 0. {
            os.write_double(10, self.ACNAAGPOIME)?;
        }
        if self.HONFNPJEKBH != 0. {
            os.write_double(11, self.HONFNPJEKBH)?;
        }
        if self.IDIEPEFFGIC != 0 {
            os.write_uint32(12, self.IDIEPEFFGIC)?;
        }
        if self.IJEPENGMPLG != 0 {
            os.write_uint32(13, self.IJEPENGMPLG)?;
        }
        if self.GEHICNBDNFP != 0 {
            os.write_uint32(14, self.GEHICNBDNFP)?;
        }
        for v in &self.HIPLCNKPAKM {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        };
        for v in &self.OCIJJEAHAEM {
            ::protobuf::rt::write_message_field_with_cached_size(16, v, os)?;
        };
        if self.EAENHEGCFOO != 0 {
            os.write_uint32(17, self.EAENHEGCFOO)?;
        }
        if self.JGABGKLPPBA != 0. {
            os.write_double(18, self.JGABGKLPPBA)?;
        }
        if self.ODEACJMKBLF != 0. {
            os.write_double(19, self.ODEACJMKBLF)?;
        }
        if self.GCBMMMDLDKN != ::protobuf::EnumOrUnknown::new(super::ADKIINEHBCD::ADKIINEHBCD::UNKNOWN) {
            os.write_enum(20, ::protobuf::EnumOrUnknown::value(&self.GCBMMMDLDKN))?;
        }
        if self.BLEINMLIFDD != 0 {
            os.write_uint32(21, self.BLEINMLIFDD)?;
        }
        if self.BIDMILFDKIK != 0 {
            os.write_int32(22, self.BIDMILFDKIK)?;
        }
        if self.MGGDEINKDMH != 0 {
            os.write_uint32(23, self.MGGDEINKDMH)?;
        }
        if self.DFJHDKKMPMM != 0 {
            os.write_uint32(24, self.DFJHDKKMPMM)?;
        }
        if self.MLCDMBECDJM != ::protobuf::EnumOrUnknown::new(super::BPPBFGAEPNI::BPPBFGAEPNI::TAG_NONE) {
            os.write_enum(25, ::protobuf::EnumOrUnknown::value(&self.MLCDMBECDJM))?;
        }
        for v in &self.FFLNPGHOJDD {
            ::protobuf::rt::write_message_field_with_cached_size(26, v, os)?;
        };
        if self.OKGKMLGGMDO != 0 {
            os.write_uint32(27, self.OKGKMLGGMDO)?;
        }
        for v in &self.KEPDCEILLJF {
            ::protobuf::rt::write_message_field_with_cached_size(28, v, os)?;
        };
        if self.JGHNPEBHBDK != 0 {
            os.write_uint32(29, self.JGHNPEBHBDK)?;
        }
        if self.LANOIPJHKAC != 0 {
            os.write_uint32(30, self.LANOIPJHKAC)?;
        }
        if self.AMLAAOLDKCL != ::protobuf::EnumOrUnknown::new(super::LBNOGHIMDMG::LBNOGHIMDMG::NORMAL_CREATE) {
            os.write_enum(31, ::protobuf::EnumOrUnknown::value(&self.AMLAAOLDKCL))?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> AKCIBFPMCIN {
        AKCIBFPMCIN::new()
    }

    fn clear(&mut self) {
        self.GENANPJMLBM = 0;
        self.HFMDIBOEOKN = 0;
        self.LGIOKJPJOFN = 0;
        self.ODBNBKCDDPC = 0;
        self.EMPDGGAALDC.clear();
        self.KLEIENGLPDL = 0;
        self.IHCBEKOHBBJ = 0.;
        self.KCBOCEAPHFK = 0.;
        self.NDPNLOIFAHH = 0.;
        self.ACNAAGPOIME = 0.;
        self.HONFNPJEKBH = 0.;
        self.IDIEPEFFGIC = 0;
        self.IJEPENGMPLG = 0;
        self.GEHICNBDNFP = 0;
        self.HIPLCNKPAKM.clear();
        self.OCIJJEAHAEM.clear();
        self.EAENHEGCFOO = 0;
        self.JGABGKLPPBA = 0.;
        self.ODEACJMKBLF = 0.;
        self.GCBMMMDLDKN = ::protobuf::EnumOrUnknown::new(super::ADKIINEHBCD::ADKIINEHBCD::UNKNOWN);
        self.BLEINMLIFDD = 0;
        self.BIDMILFDKIK = 0;
        self.MGGDEINKDMH = 0;
        self.DFJHDKKMPMM = 0;
        self.MLCDMBECDJM = ::protobuf::EnumOrUnknown::new(super::BPPBFGAEPNI::BPPBFGAEPNI::TAG_NONE);
        self.FFLNPGHOJDD.clear();
        self.OKGKMLGGMDO = 0;
        self.KEPDCEILLJF.clear();
        self.JGHNPEBHBDK = 0;
        self.LANOIPJHKAC = 0;
        self.AMLAAOLDKCL = ::protobuf::EnumOrUnknown::new(super::LBNOGHIMDMG::LBNOGHIMDMG::NORMAL_CREATE);
        self.special_fields.clear();
    }

    fn default_instance() -> &'static AKCIBFPMCIN {
        static instance: AKCIBFPMCIN = AKCIBFPMCIN {
            GENANPJMLBM: 0,
            HFMDIBOEOKN: 0,
            LGIOKJPJOFN: 0,
            ODBNBKCDDPC: 0,
            EMPDGGAALDC: ::protobuf::MessageField::none(),
            KLEIENGLPDL: 0,
            IHCBEKOHBBJ: 0.,
            KCBOCEAPHFK: 0.,
            NDPNLOIFAHH: 0.,
            ACNAAGPOIME: 0.,
            HONFNPJEKBH: 0.,
            IDIEPEFFGIC: 0,
            IJEPENGMPLG: 0,
            GEHICNBDNFP: 0,
            HIPLCNKPAKM: ::std::vec::Vec::new(),
            OCIJJEAHAEM: ::std::vec::Vec::new(),
            EAENHEGCFOO: 0,
            JGABGKLPPBA: 0.,
            ODEACJMKBLF: 0.,
            GCBMMMDLDKN: ::protobuf::EnumOrUnknown::from_i32(0),
            BLEINMLIFDD: 0,
            BIDMILFDKIK: 0,
            MGGDEINKDMH: 0,
            DFJHDKKMPMM: 0,
            MLCDMBECDJM: ::protobuf::EnumOrUnknown::from_i32(0),
            FFLNPGHOJDD: ::std::vec::Vec::new(),
            OKGKMLGGMDO: 0,
            KEPDCEILLJF: ::std::vec::Vec::new(),
            JGHNPEBHBDK: 0,
            LANOIPJHKAC: 0,
            AMLAAOLDKCL: ::protobuf::EnumOrUnknown::from_i32(0),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for AKCIBFPMCIN {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("AKCIBFPMCIN").unwrap()).clone()
    }
}

impl ::std::fmt::Display for AKCIBFPMCIN {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for AKCIBFPMCIN {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11AKCIBFPMCIN.proto\x1a\x11ADKIINEHBCD.proto\x1a\x11BPLFDMICMFM.prot\
    o\x1a\x11BPPBFGAEPNI.proto\x1a\x11ECFCOOLMBAB.proto\x1a\x11FCCLFKEHBIH.p\
    roto\x1a\x11LBNOGHIMDMG.proto\x1a\x11LFMNDNNIBLJ.proto\x1a\x11PHKMLOMCNM\
    N.proto\"\x9b\t\n\x0bAKCIBFPMCIN\x12\x20\n\x0bGENANPJMLBM\x18\x01\x20\
    \x01(\rR\x0bGENANPJMLBM\x12\x20\n\x0bHFMDIBOEOKN\x18\x02\x20\x01(\rR\x0b\
    HFMDIBOEOKN\x12\x20\n\x0bLGIOKJPJOFN\x18\x03\x20\x01(\rR\x0bLGIOKJPJOFN\
    \x12\x20\n\x0bODBNBKCDDPC\x18\x04\x20\x01(\rR\x0bODBNBKCDDPC\x12.\n\x0bE\
    MPDGGAALDC\x18\x05\x20\x01(\x0b2\x0c.BPLFDMICMFMR\x0bEMPDGGAALDC\x12\x20\
    \n\x0bKLEIENGLPDL\x18\x06\x20\x01(\rR\x0bKLEIENGLPDL\x12\x20\n\x0bIHCBEK\
    OHBBJ\x18\x07\x20\x01(\x01R\x0bIHCBEKOHBBJ\x12\x20\n\x0bKCBOCEAPHFK\x18\
    \x08\x20\x01(\x01R\x0bKCBOCEAPHFK\x12\x20\n\x0bNDPNLOIFAHH\x18\t\x20\x01\
    (\x01R\x0bNDPNLOIFAHH\x12\x20\n\x0bACNAAGPOIME\x18\n\x20\x01(\x01R\x0bAC\
    NAAGPOIME\x12\x20\n\x0bHONFNPJEKBH\x18\x0b\x20\x01(\x01R\x0bHONFNPJEKBH\
    \x12\x20\n\x0bIDIEPEFFGIC\x18\x0c\x20\x01(\rR\x0bIDIEPEFFGIC\x12\x20\n\
    \x0bIJEPENGMPLG\x18\r\x20\x01(\rR\x0bIJEPENGMPLG\x12\x20\n\x0bGEHICNBDNF\
    P\x18\x0e\x20\x01(\rR\x0bGEHICNBDNFP\x12.\n\x0bHIPLCNKPAKM\x18\x0f\x20\
    \x03(\x0b2\x0c.FCCLFKEHBIHR\x0bHIPLCNKPAKM\x12.\n\x0bOCIJJEAHAEM\x18\x10\
    \x20\x03(\x0b2\x0c.ECFCOOLMBABR\x0bOCIJJEAHAEM\x12\x20\n\x0bEAENHEGCFOO\
    \x18\x11\x20\x01(\rR\x0bEAENHEGCFOO\x12\x20\n\x0bJGABGKLPPBA\x18\x12\x20\
    \x01(\x01R\x0bJGABGKLPPBA\x12\x20\n\x0bODEACJMKBLF\x18\x13\x20\x01(\x01R\
    \x0bODEACJMKBLF\x12.\n\x0bGCBMMMDLDKN\x18\x14\x20\x01(\x0e2\x0c.ADKIINEH\
    BCDR\x0bGCBMMMDLDKN\x12\x20\n\x0bBLEINMLIFDD\x18\x15\x20\x01(\rR\x0bBLEI\
    NMLIFDD\x12\x20\n\x0bBIDMILFDKIK\x18\x16\x20\x01(\x05R\x0bBIDMILFDKIK\
    \x12\x20\n\x0bMGGDEINKDMH\x18\x17\x20\x01(\rR\x0bMGGDEINKDMH\x12\x20\n\
    \x0bDFJHDKKMPMM\x18\x18\x20\x01(\rR\x0bDFJHDKKMPMM\x12.\n\x0bMLCDMBECDJM\
    \x18\x19\x20\x01(\x0e2\x0c.BPPBFGAEPNIR\x0bMLCDMBECDJM\x12.\n\x0bFFLNPGH\
    OJDD\x18\x1a\x20\x03(\x0b2\x0c.PHKMLOMCNMNR\x0bFFLNPGHOJDD\x12\x20\n\x0b\
    OKGKMLGGMDO\x18\x1b\x20\x01(\rR\x0bOKGKMLGGMDO\x12.\n\x0bKEPDCEILLJF\x18\
    \x1c\x20\x03(\x0b2\x0c.LFMNDNNIBLJR\x0bKEPDCEILLJF\x12\x20\n\x0bJGHNPEBH\
    BDK\x18\x1d\x20\x01(\rR\x0bJGHNPEBHBDK\x12\x20\n\x0bLANOIPJHKAC\x18\x1e\
    \x20\x01(\rR\x0bLANOIPJHKAC\x12.\n\x0bAMLAAOLDKCL\x18\x1f\x20\x01(\x0e2\
    \x0c.LBNOGHIMDMGR\x0bAMLAAOLDKCLb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(8);
            deps.push(super::ADKIINEHBCD::file_descriptor().clone());
            deps.push(super::BPLFDMICMFM::file_descriptor().clone());
            deps.push(super::BPPBFGAEPNI::file_descriptor().clone());
            deps.push(super::ECFCOOLMBAB::file_descriptor().clone());
            deps.push(super::FCCLFKEHBIH::file_descriptor().clone());
            deps.push(super::LBNOGHIMDMG::file_descriptor().clone());
            deps.push(super::LFMNDNNIBLJ::file_descriptor().clone());
            deps.push(super::PHKMLOMCNMN::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(AKCIBFPMCIN::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
