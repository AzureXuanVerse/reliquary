// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `BLIJKDCOJJN.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:BLIJKDCOJJN)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct BLIJKDCOJJN {
    // message fields
    // @@protoc_insertion_point(field:BLIJKDCOJJN.OEIAJJPOACE)
    pub OEIAJJPOACE: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.CAIECHBOLMJ)
    pub CAIECHBOLMJ: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.KAGEGBLHJDJ)
    pub KAGEGBLHJDJ: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.GOOIEHKAGLC)
    pub GOOIEHKAGLC: ::protobuf::MessageField<super::LLKOHFCICJB::LLKOHFCICJB>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.BDFAFCJHFMA)
    pub BDFAFCJHFMA: ::std::vec::Vec<super::LAIBNMBIMJC::LAIBNMBIMJC>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.AMNEFOGNOMM)
    pub AMNEFOGNOMM: ::std::vec::Vec<u8>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.KFBFKKFDGPA)
    pub KFBFKKFDGPA: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.GMPFHBBGGNL)
    pub GMPFHBBGGNL: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.GFOMLCJFBDK)
    pub GFOMLCJFBDK: bool,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.KNKAKBIJAPN)
    pub KNKAKBIJAPN: ::protobuf::EnumOrUnknown<super::LBIJNKKHHEJ::LBIJNKKHHEJ>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.ONINGCJEKGJ)
    pub ONINGCJEKGJ: ::protobuf::EnumOrUnknown<super::BattleModuleType::BattleModuleType>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.PGNCDFGJLAA)
    pub PGNCDFGJLAA: ::std::vec::Vec<super::PJDIBBHNNIO::PJDIBBHNNIO>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.IPHBFHCEDGJ)
    pub IPHBFHCEDGJ: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.BOPFAEFMPFE)
    pub BOPFAEFMPFE: ::protobuf::MessageField<super::AJNOMHNKADA::AJNOMHNKADA>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.BGEOKCBGCHH)
    pub BGEOKCBGCHH: ::std::vec::Vec<u8>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.ILPBLHDFLKL)
    pub ILPBLHDFLKL: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.KALINKEDDBE)
    pub KALINKEDDBE: u32,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.CHJFNPJLJEG)
    pub CHJFNPJLJEG: ::protobuf::MessageField<super::ENNGGPFCFDA::ENNGGPFCFDA>,
    // @@protoc_insertion_point(field:BLIJKDCOJJN.AGNLKFLBCFF)
    pub AGNLKFLBCFF: ::protobuf::MessageField<super::FDGLMHJOJOJ::FDGLMHJOJOJ>,
    // special fields
    // @@protoc_insertion_point(special_field:BLIJKDCOJJN.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a BLIJKDCOJJN {
    fn default() -> &'a BLIJKDCOJJN {
        <BLIJKDCOJJN as ::protobuf::Message>::default_instance()
    }
}

impl BLIJKDCOJJN {
    pub fn new() -> BLIJKDCOJJN {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(19);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OEIAJJPOACE",
            |m: &BLIJKDCOJJN| { &m.OEIAJJPOACE },
            |m: &mut BLIJKDCOJJN| { &mut m.OEIAJJPOACE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CAIECHBOLMJ",
            |m: &BLIJKDCOJJN| { &m.CAIECHBOLMJ },
            |m: &mut BLIJKDCOJJN| { &mut m.CAIECHBOLMJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KAGEGBLHJDJ",
            |m: &BLIJKDCOJJN| { &m.KAGEGBLHJDJ },
            |m: &mut BLIJKDCOJJN| { &mut m.KAGEGBLHJDJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::LLKOHFCICJB::LLKOHFCICJB>(
            "GOOIEHKAGLC",
            |m: &BLIJKDCOJJN| { &m.GOOIEHKAGLC },
            |m: &mut BLIJKDCOJJN| { &mut m.GOOIEHKAGLC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "BDFAFCJHFMA",
            |m: &BLIJKDCOJJN| { &m.BDFAFCJHFMA },
            |m: &mut BLIJKDCOJJN| { &mut m.BDFAFCJHFMA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AMNEFOGNOMM",
            |m: &BLIJKDCOJJN| { &m.AMNEFOGNOMM },
            |m: &mut BLIJKDCOJJN| { &mut m.AMNEFOGNOMM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KFBFKKFDGPA",
            |m: &BLIJKDCOJJN| { &m.KFBFKKFDGPA },
            |m: &mut BLIJKDCOJJN| { &mut m.KFBFKKFDGPA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "GMPFHBBGGNL",
            |m: &BLIJKDCOJJN| { &m.GMPFHBBGGNL },
            |m: &mut BLIJKDCOJJN| { &mut m.GMPFHBBGGNL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GFOMLCJFBDK",
            |m: &BLIJKDCOJJN| { &m.GFOMLCJFBDK },
            |m: &mut BLIJKDCOJJN| { &mut m.GFOMLCJFBDK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KNKAKBIJAPN",
            |m: &BLIJKDCOJJN| { &m.KNKAKBIJAPN },
            |m: &mut BLIJKDCOJJN| { &mut m.KNKAKBIJAPN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ONINGCJEKGJ",
            |m: &BLIJKDCOJJN| { &m.ONINGCJEKGJ },
            |m: &mut BLIJKDCOJJN| { &mut m.ONINGCJEKGJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PGNCDFGJLAA",
            |m: &BLIJKDCOJJN| { &m.PGNCDFGJLAA },
            |m: &mut BLIJKDCOJJN| { &mut m.PGNCDFGJLAA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IPHBFHCEDGJ",
            |m: &BLIJKDCOJJN| { &m.IPHBFHCEDGJ },
            |m: &mut BLIJKDCOJJN| { &mut m.IPHBFHCEDGJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AJNOMHNKADA::AJNOMHNKADA>(
            "BOPFAEFMPFE",
            |m: &BLIJKDCOJJN| { &m.BOPFAEFMPFE },
            |m: &mut BLIJKDCOJJN| { &mut m.BOPFAEFMPFE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BGEOKCBGCHH",
            |m: &BLIJKDCOJJN| { &m.BGEOKCBGCHH },
            |m: &mut BLIJKDCOJJN| { &mut m.BGEOKCBGCHH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ILPBLHDFLKL",
            |m: &BLIJKDCOJJN| { &m.ILPBLHDFLKL },
            |m: &mut BLIJKDCOJJN| { &mut m.ILPBLHDFLKL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KALINKEDDBE",
            |m: &BLIJKDCOJJN| { &m.KALINKEDDBE },
            |m: &mut BLIJKDCOJJN| { &mut m.KALINKEDDBE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ENNGGPFCFDA::ENNGGPFCFDA>(
            "CHJFNPJLJEG",
            |m: &BLIJKDCOJJN| { &m.CHJFNPJLJEG },
            |m: &mut BLIJKDCOJJN| { &mut m.CHJFNPJLJEG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FDGLMHJOJOJ::FDGLMHJOJOJ>(
            "AGNLKFLBCFF",
            |m: &BLIJKDCOJJN| { &m.AGNLKFLBCFF },
            |m: &mut BLIJKDCOJJN| { &mut m.AGNLKFLBCFF },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<BLIJKDCOJJN>(
            "BLIJKDCOJJN",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for BLIJKDCOJJN {
    const NAME: &'static str = "BLIJKDCOJJN";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.OEIAJJPOACE = is.read_uint32()?;
                },
                16 => {
                    self.CAIECHBOLMJ = is.read_uint32()?;
                },
                24 => {
                    self.KAGEGBLHJDJ = is.read_uint32()?;
                },
                34 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.GOOIEHKAGLC)?;
                },
                42 => {
                    self.BDFAFCJHFMA.push(is.read_message()?);
                },
                50 => {
                    self.AMNEFOGNOMM = is.read_bytes()?;
                },
                56 => {
                    self.KFBFKKFDGPA = is.read_uint32()?;
                },
                66 => {
                    is.read_repeated_packed_uint32_into(&mut self.GMPFHBBGGNL)?;
                },
                64 => {
                    self.GMPFHBBGGNL.push(is.read_uint32()?);
                },
                72 => {
                    self.GFOMLCJFBDK = is.read_bool()?;
                },
                80 => {
                    self.KNKAKBIJAPN = is.read_enum_or_unknown()?;
                },
                88 => {
                    self.ONINGCJEKGJ = is.read_enum_or_unknown()?;
                },
                98 => {
                    self.PGNCDFGJLAA.push(is.read_message()?);
                },
                112 => {
                    self.IPHBFHCEDGJ = is.read_uint32()?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.BOPFAEFMPFE)?;
                },
                130 => {
                    self.BGEOKCBGCHH = is.read_bytes()?;
                },
                136 => {
                    self.ILPBLHDFLKL = is.read_uint32()?;
                },
                144 => {
                    self.KALINKEDDBE = is.read_uint32()?;
                },
                154 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CHJFNPJLJEG)?;
                },
                802 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AGNLKFLBCFF)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.OEIAJJPOACE != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.OEIAJJPOACE);
        }
        if self.CAIECHBOLMJ != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.CAIECHBOLMJ);
        }
        if self.KAGEGBLHJDJ != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.KAGEGBLHJDJ);
        }
        if let Some(v) = self.GOOIEHKAGLC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.BDFAFCJHFMA {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.AMNEFOGNOMM.is_empty() {
            my_size += ::protobuf::rt::bytes_size(6, &self.AMNEFOGNOMM);
        }
        if self.KFBFKKFDGPA != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.KFBFKKFDGPA);
        }
        for value in &self.GMPFHBBGGNL {
            my_size += ::protobuf::rt::uint32_size(8, *value);
        };
        if self.GFOMLCJFBDK != false {
            my_size += 1 + 1;
        }
        if self.KNKAKBIJAPN != ::protobuf::EnumOrUnknown::new(super::LBIJNKKHHEJ::LBIJNKKHHEJ::BATTLE_CHECK_STRATEGY_IDENTICAL) {
            my_size += ::protobuf::rt::int32_size(10, self.KNKAKBIJAPN.value());
        }
        if self.ONINGCJEKGJ != ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE) {
            my_size += ::protobuf::rt::int32_size(11, self.ONINGCJEKGJ.value());
        }
        for value in &self.PGNCDFGJLAA {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.IPHBFHCEDGJ != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.IPHBFHCEDGJ);
        }
        if let Some(v) = self.BOPFAEFMPFE.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if !self.BGEOKCBGCHH.is_empty() {
            my_size += ::protobuf::rt::bytes_size(16, &self.BGEOKCBGCHH);
        }
        if self.ILPBLHDFLKL != 0 {
            my_size += ::protobuf::rt::uint32_size(17, self.ILPBLHDFLKL);
        }
        if self.KALINKEDDBE != 0 {
            my_size += ::protobuf::rt::uint32_size(18, self.KALINKEDDBE);
        }
        if let Some(v) = self.CHJFNPJLJEG.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.AGNLKFLBCFF.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.OEIAJJPOACE != 0 {
            os.write_uint32(1, self.OEIAJJPOACE)?;
        }
        if self.CAIECHBOLMJ != 0 {
            os.write_uint32(2, self.CAIECHBOLMJ)?;
        }
        if self.KAGEGBLHJDJ != 0 {
            os.write_uint32(3, self.KAGEGBLHJDJ)?;
        }
        if let Some(v) = self.GOOIEHKAGLC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        }
        for v in &self.BDFAFCJHFMA {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        };
        if !self.AMNEFOGNOMM.is_empty() {
            os.write_bytes(6, &self.AMNEFOGNOMM)?;
        }
        if self.KFBFKKFDGPA != 0 {
            os.write_uint32(7, self.KFBFKKFDGPA)?;
        }
        for v in &self.GMPFHBBGGNL {
            os.write_uint32(8, *v)?;
        };
        if self.GFOMLCJFBDK != false {
            os.write_bool(9, self.GFOMLCJFBDK)?;
        }
        if self.KNKAKBIJAPN != ::protobuf::EnumOrUnknown::new(super::LBIJNKKHHEJ::LBIJNKKHHEJ::BATTLE_CHECK_STRATEGY_IDENTICAL) {
            os.write_enum(10, ::protobuf::EnumOrUnknown::value(&self.KNKAKBIJAPN))?;
        }
        if self.ONINGCJEKGJ != ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE) {
            os.write_enum(11, ::protobuf::EnumOrUnknown::value(&self.ONINGCJEKGJ))?;
        }
        for v in &self.PGNCDFGJLAA {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.IPHBFHCEDGJ != 0 {
            os.write_uint32(14, self.IPHBFHCEDGJ)?;
        }
        if let Some(v) = self.BOPFAEFMPFE.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if !self.BGEOKCBGCHH.is_empty() {
            os.write_bytes(16, &self.BGEOKCBGCHH)?;
        }
        if self.ILPBLHDFLKL != 0 {
            os.write_uint32(17, self.ILPBLHDFLKL)?;
        }
        if self.KALINKEDDBE != 0 {
            os.write_uint32(18, self.KALINKEDDBE)?;
        }
        if let Some(v) = self.CHJFNPJLJEG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(19, v, os)?;
        }
        if let Some(v) = self.AGNLKFLBCFF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(100, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> BLIJKDCOJJN {
        BLIJKDCOJJN::new()
    }

    fn clear(&mut self) {
        self.OEIAJJPOACE = 0;
        self.CAIECHBOLMJ = 0;
        self.KAGEGBLHJDJ = 0;
        self.GOOIEHKAGLC.clear();
        self.BDFAFCJHFMA.clear();
        self.AMNEFOGNOMM.clear();
        self.KFBFKKFDGPA = 0;
        self.GMPFHBBGGNL.clear();
        self.GFOMLCJFBDK = false;
        self.KNKAKBIJAPN = ::protobuf::EnumOrUnknown::new(super::LBIJNKKHHEJ::LBIJNKKHHEJ::BATTLE_CHECK_STRATEGY_IDENTICAL);
        self.ONINGCJEKGJ = ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE);
        self.PGNCDFGJLAA.clear();
        self.IPHBFHCEDGJ = 0;
        self.BOPFAEFMPFE.clear();
        self.BGEOKCBGCHH.clear();
        self.ILPBLHDFLKL = 0;
        self.KALINKEDDBE = 0;
        self.CHJFNPJLJEG.clear();
        self.AGNLKFLBCFF.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static BLIJKDCOJJN {
        static instance: BLIJKDCOJJN = BLIJKDCOJJN {
            OEIAJJPOACE: 0,
            CAIECHBOLMJ: 0,
            KAGEGBLHJDJ: 0,
            GOOIEHKAGLC: ::protobuf::MessageField::none(),
            BDFAFCJHFMA: ::std::vec::Vec::new(),
            AMNEFOGNOMM: ::std::vec::Vec::new(),
            KFBFKKFDGPA: 0,
            GMPFHBBGGNL: ::std::vec::Vec::new(),
            GFOMLCJFBDK: false,
            KNKAKBIJAPN: ::protobuf::EnumOrUnknown::from_i32(0),
            ONINGCJEKGJ: ::protobuf::EnumOrUnknown::from_i32(0),
            PGNCDFGJLAA: ::std::vec::Vec::new(),
            IPHBFHCEDGJ: 0,
            BOPFAEFMPFE: ::protobuf::MessageField::none(),
            BGEOKCBGCHH: ::std::vec::Vec::new(),
            ILPBLHDFLKL: 0,
            KALINKEDDBE: 0,
            CHJFNPJLJEG: ::protobuf::MessageField::none(),
            AGNLKFLBCFF: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for BLIJKDCOJJN {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("BLIJKDCOJJN").unwrap()).clone()
    }
}

impl ::std::fmt::Display for BLIJKDCOJJN {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for BLIJKDCOJJN {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11BLIJKDCOJJN.proto\x1a\x11AJNOMHNKADA.proto\x1a\x16BattleModuleType\
    .proto\x1a\x11ENNGGPFCFDA.proto\x1a\x11FDGLMHJOJOJ.proto\x1a\x11LAIBNMBI\
    MJC.proto\x1a\x11LBIJNKKHHEJ.proto\x1a\x11LLKOHFCICJB.proto\x1a\x11PJDIB\
    BHNNIO.proto\"\x88\x06\n\x0bBLIJKDCOJJN\x12\x20\n\x0bOEIAJJPOACE\x18\x01\
    \x20\x01(\rR\x0bOEIAJJPOACE\x12\x20\n\x0bCAIECHBOLMJ\x18\x02\x20\x01(\rR\
    \x0bCAIECHBOLMJ\x12\x20\n\x0bKAGEGBLHJDJ\x18\x03\x20\x01(\rR\x0bKAGEGBLH\
    JDJ\x12.\n\x0bGOOIEHKAGLC\x18\x04\x20\x01(\x0b2\x0c.LLKOHFCICJBR\x0bGOOI\
    EHKAGLC\x12.\n\x0bBDFAFCJHFMA\x18\x05\x20\x03(\x0b2\x0c.LAIBNMBIMJCR\x0b\
    BDFAFCJHFMA\x12\x20\n\x0bAMNEFOGNOMM\x18\x06\x20\x01(\x0cR\x0bAMNEFOGNOM\
    M\x12\x20\n\x0bKFBFKKFDGPA\x18\x07\x20\x01(\rR\x0bKFBFKKFDGPA\x12\x20\n\
    \x0bGMPFHBBGGNL\x18\x08\x20\x03(\rR\x0bGMPFHBBGGNL\x12\x20\n\x0bGFOMLCJF\
    BDK\x18\t\x20\x01(\x08R\x0bGFOMLCJFBDK\x12.\n\x0bKNKAKBIJAPN\x18\n\x20\
    \x01(\x0e2\x0c.LBIJNKKHHEJR\x0bKNKAKBIJAPN\x123\n\x0bONINGCJEKGJ\x18\x0b\
    \x20\x01(\x0e2\x11.BattleModuleTypeR\x0bONINGCJEKGJ\x12.\n\x0bPGNCDFGJLA\
    A\x18\x0c\x20\x03(\x0b2\x0c.PJDIBBHNNIOR\x0bPGNCDFGJLAA\x12\x20\n\x0bIPH\
    BFHCEDGJ\x18\x0e\x20\x01(\rR\x0bIPHBFHCEDGJ\x12.\n\x0bBOPFAEFMPFE\x18\
    \x0f\x20\x01(\x0b2\x0c.AJNOMHNKADAR\x0bBOPFAEFMPFE\x12\x20\n\x0bBGEOKCBG\
    CHH\x18\x10\x20\x01(\x0cR\x0bBGEOKCBGCHH\x12\x20\n\x0bILPBLHDFLKL\x18\
    \x11\x20\x01(\rR\x0bILPBLHDFLKL\x12\x20\n\x0bKALINKEDDBE\x18\x12\x20\x01\
    (\rR\x0bKALINKEDDBE\x12.\n\x0bCHJFNPJLJEG\x18\x13\x20\x01(\x0b2\x0c.ENNG\
    GPFCFDAR\x0bCHJFNPJLJEG\x12.\n\x0bAGNLKFLBCFF\x18d\x20\x01(\x0b2\x0c.FDG\
    LMHJOJOJR\x0bAGNLKFLBCFFb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(8);
            deps.push(super::AJNOMHNKADA::file_descriptor().clone());
            deps.push(super::BattleModuleType::file_descriptor().clone());
            deps.push(super::ENNGGPFCFDA::file_descriptor().clone());
            deps.push(super::FDGLMHJOJOJ::file_descriptor().clone());
            deps.push(super::LAIBNMBIMJC::file_descriptor().clone());
            deps.push(super::LBIJNKKHHEJ::file_descriptor().clone());
            deps.push(super::LLKOHFCICJB::file_descriptor().clone());
            deps.push(super::PJDIBBHNNIO::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(BLIJKDCOJJN::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
