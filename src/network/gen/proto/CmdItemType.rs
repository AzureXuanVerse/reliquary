// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdItemType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdItemType)
pub enum CmdItemType {
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdItemTypeNone)
    CmdItemTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExpUpEquipmentCsReq)
    CmdExpUpEquipmentCsReq = 547,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdAddRelicFilterPlanCsReq)
    CmdAddRelicFilterPlanCsReq = 578,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdRankUpEquipmentCsReq)
    CmdRankUpEquipmentCsReq = 580,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdSyncTurnFoodNotify)
    CmdSyncTurnFoodNotify = 591,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdAddEquipmentScNotify)
    CmdAddEquipmentScNotify = 599,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdSetTurnFoodSwitchScRsp)
    CmdSetTurnFoodSwitchScRsp = 588,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdPromoteEquipmentScRsp)
    CmdPromoteEquipmentScRsp = 546,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetRelicFilterPlanScRsp)
    CmdGetRelicFilterPlanScRsp = 556,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdMarkRelicFilterPlanCsReq)
    CmdMarkRelicFilterPlanCsReq = 596,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeSelectedRelicCsReq)
    CmdComposeSelectedRelicCsReq = 573,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetRecyleTimeCsReq)
    CmdGetRecyleTimeCsReq = 509,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDestroyItemCsReq)
    CmdDestroyItemCsReq = 510,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetRelicFilterPlanCsReq)
    CmdGetRelicFilterPlanCsReq = 566,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetRecyleTimeScRsp)
    CmdGetRecyleTimeScRsp = 593,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExchangeHcoinScRsp)
    CmdExchangeHcoinScRsp = 551,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdUseItemScRsp)
    CmdUseItemScRsp = 537,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdRelicFilterPlanClearNameScNotify)
    CmdRelicFilterPlanClearNameScNotify = 571,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdSellItemCsReq)
    CmdSellItemCsReq = 561,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDeleteRelicFilterPlanCsReq)
    CmdDeleteRelicFilterPlanCsReq = 560,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdAddRelicFilterPlanScRsp)
    CmdAddRelicFilterPlanScRsp = 572,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdRechargeSuccNotify)
    CmdRechargeSuccNotify = 529,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdLockEquipmentScRsp)
    CmdLockEquipmentScRsp = 553,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetMarkItemListCsReq)
    CmdGetMarkItemListCsReq = 536,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGeneralVirtualItemDataNotify)
    CmdGeneralVirtualItemDataNotify = 543,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdMarkItemCsReq)
    CmdMarkItemCsReq = 526,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdMarkRelicFilterPlanScRsp)
    CmdMarkRelicFilterPlanScRsp = 531,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdModifyRelicFilterPlanCsReq)
    CmdModifyRelicFilterPlanCsReq = 524,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeLimitNumUpdateNotify)
    CmdComposeLimitNumUpdateNotify = 594,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetBagCsReq)
    CmdGetBagCsReq = 559,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdCancelMarkItemNotify)
    CmdCancelMarkItemNotify = 577,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdLockRelicScRsp)
    CmdLockRelicScRsp = 519,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetBagScRsp)
    CmdGetBagScRsp = 520,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDiscardRelicScRsp)
    CmdDiscardRelicScRsp = 514,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDiscardRelicCsReq)
    CmdDiscardRelicCsReq = 563,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeLimitNumCompleteNotify)
    CmdComposeLimitNumCompleteNotify = 564,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdRankUpEquipmentScRsp)
    CmdRankUpEquipmentScRsp = 516,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdSetTurnFoodSwitchCsReq)
    CmdSetTurnFoodSwitchCsReq = 504,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdMarkItemScRsp)
    CmdMarkItemScRsp = 513,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeItemScRsp)
    CmdComposeItemScRsp = 575,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdModifyRelicFilterPlanScRsp)
    CmdModifyRelicFilterPlanScRsp = 512,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDestroyItemScRsp)
    CmdDestroyItemScRsp = 570,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExpUpRelicScRsp)
    CmdExpUpRelicScRsp = 590,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdLockRelicCsReq)
    CmdLockRelicCsReq = 579,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeItemCsReq)
    CmdComposeItemCsReq = 530,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdPromoteEquipmentCsReq)
    CmdPromoteEquipmentCsReq = 503,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdGetMarkItemListScRsp)
    CmdGetMarkItemListScRsp = 565,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdUseItemCsReq)
    CmdUseItemCsReq = 534,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdDeleteRelicFilterPlanScRsp)
    CmdDeleteRelicFilterPlanScRsp = 532,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdComposeSelectedRelicScRsp)
    CmdComposeSelectedRelicScRsp = 583,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExpUpRelicCsReq)
    CmdExpUpRelicCsReq = 548,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExpUpEquipmentScRsp)
    CmdExpUpEquipmentScRsp = 574,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdLockEquipmentCsReq)
    CmdLockEquipmentCsReq = 539,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdSellItemScRsp)
    CmdSellItemScRsp = 525,
    // @@protoc_insertion_point(enum_value:CmdItemType.CmdExchangeHcoinCsReq)
    CmdExchangeHcoinCsReq = 533,
}

impl ::protobuf::Enum for CmdItemType {
    const NAME: &'static str = "CmdItemType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdItemType> {
        match value {
            0 => ::std::option::Option::Some(CmdItemType::CmdItemTypeNone),
            547 => ::std::option::Option::Some(CmdItemType::CmdExpUpEquipmentCsReq),
            578 => ::std::option::Option::Some(CmdItemType::CmdAddRelicFilterPlanCsReq),
            580 => ::std::option::Option::Some(CmdItemType::CmdRankUpEquipmentCsReq),
            591 => ::std::option::Option::Some(CmdItemType::CmdSyncTurnFoodNotify),
            599 => ::std::option::Option::Some(CmdItemType::CmdAddEquipmentScNotify),
            588 => ::std::option::Option::Some(CmdItemType::CmdSetTurnFoodSwitchScRsp),
            546 => ::std::option::Option::Some(CmdItemType::CmdPromoteEquipmentScRsp),
            556 => ::std::option::Option::Some(CmdItemType::CmdGetRelicFilterPlanScRsp),
            596 => ::std::option::Option::Some(CmdItemType::CmdMarkRelicFilterPlanCsReq),
            573 => ::std::option::Option::Some(CmdItemType::CmdComposeSelectedRelicCsReq),
            509 => ::std::option::Option::Some(CmdItemType::CmdGetRecyleTimeCsReq),
            510 => ::std::option::Option::Some(CmdItemType::CmdDestroyItemCsReq),
            566 => ::std::option::Option::Some(CmdItemType::CmdGetRelicFilterPlanCsReq),
            593 => ::std::option::Option::Some(CmdItemType::CmdGetRecyleTimeScRsp),
            551 => ::std::option::Option::Some(CmdItemType::CmdExchangeHcoinScRsp),
            537 => ::std::option::Option::Some(CmdItemType::CmdUseItemScRsp),
            571 => ::std::option::Option::Some(CmdItemType::CmdRelicFilterPlanClearNameScNotify),
            561 => ::std::option::Option::Some(CmdItemType::CmdSellItemCsReq),
            560 => ::std::option::Option::Some(CmdItemType::CmdDeleteRelicFilterPlanCsReq),
            572 => ::std::option::Option::Some(CmdItemType::CmdAddRelicFilterPlanScRsp),
            529 => ::std::option::Option::Some(CmdItemType::CmdRechargeSuccNotify),
            553 => ::std::option::Option::Some(CmdItemType::CmdLockEquipmentScRsp),
            536 => ::std::option::Option::Some(CmdItemType::CmdGetMarkItemListCsReq),
            543 => ::std::option::Option::Some(CmdItemType::CmdGeneralVirtualItemDataNotify),
            526 => ::std::option::Option::Some(CmdItemType::CmdMarkItemCsReq),
            531 => ::std::option::Option::Some(CmdItemType::CmdMarkRelicFilterPlanScRsp),
            524 => ::std::option::Option::Some(CmdItemType::CmdModifyRelicFilterPlanCsReq),
            594 => ::std::option::Option::Some(CmdItemType::CmdComposeLimitNumUpdateNotify),
            559 => ::std::option::Option::Some(CmdItemType::CmdGetBagCsReq),
            577 => ::std::option::Option::Some(CmdItemType::CmdCancelMarkItemNotify),
            519 => ::std::option::Option::Some(CmdItemType::CmdLockRelicScRsp),
            520 => ::std::option::Option::Some(CmdItemType::CmdGetBagScRsp),
            514 => ::std::option::Option::Some(CmdItemType::CmdDiscardRelicScRsp),
            563 => ::std::option::Option::Some(CmdItemType::CmdDiscardRelicCsReq),
            564 => ::std::option::Option::Some(CmdItemType::CmdComposeLimitNumCompleteNotify),
            516 => ::std::option::Option::Some(CmdItemType::CmdRankUpEquipmentScRsp),
            504 => ::std::option::Option::Some(CmdItemType::CmdSetTurnFoodSwitchCsReq),
            513 => ::std::option::Option::Some(CmdItemType::CmdMarkItemScRsp),
            575 => ::std::option::Option::Some(CmdItemType::CmdComposeItemScRsp),
            512 => ::std::option::Option::Some(CmdItemType::CmdModifyRelicFilterPlanScRsp),
            570 => ::std::option::Option::Some(CmdItemType::CmdDestroyItemScRsp),
            590 => ::std::option::Option::Some(CmdItemType::CmdExpUpRelicScRsp),
            579 => ::std::option::Option::Some(CmdItemType::CmdLockRelicCsReq),
            530 => ::std::option::Option::Some(CmdItemType::CmdComposeItemCsReq),
            503 => ::std::option::Option::Some(CmdItemType::CmdPromoteEquipmentCsReq),
            565 => ::std::option::Option::Some(CmdItemType::CmdGetMarkItemListScRsp),
            534 => ::std::option::Option::Some(CmdItemType::CmdUseItemCsReq),
            532 => ::std::option::Option::Some(CmdItemType::CmdDeleteRelicFilterPlanScRsp),
            583 => ::std::option::Option::Some(CmdItemType::CmdComposeSelectedRelicScRsp),
            548 => ::std::option::Option::Some(CmdItemType::CmdExpUpRelicCsReq),
            574 => ::std::option::Option::Some(CmdItemType::CmdExpUpEquipmentScRsp),
            539 => ::std::option::Option::Some(CmdItemType::CmdLockEquipmentCsReq),
            525 => ::std::option::Option::Some(CmdItemType::CmdSellItemScRsp),
            533 => ::std::option::Option::Some(CmdItemType::CmdExchangeHcoinCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdItemType> {
        match str {
            "CmdItemTypeNone" => ::std::option::Option::Some(CmdItemType::CmdItemTypeNone),
            "CmdExpUpEquipmentCsReq" => ::std::option::Option::Some(CmdItemType::CmdExpUpEquipmentCsReq),
            "CmdAddRelicFilterPlanCsReq" => ::std::option::Option::Some(CmdItemType::CmdAddRelicFilterPlanCsReq),
            "CmdRankUpEquipmentCsReq" => ::std::option::Option::Some(CmdItemType::CmdRankUpEquipmentCsReq),
            "CmdSyncTurnFoodNotify" => ::std::option::Option::Some(CmdItemType::CmdSyncTurnFoodNotify),
            "CmdAddEquipmentScNotify" => ::std::option::Option::Some(CmdItemType::CmdAddEquipmentScNotify),
            "CmdSetTurnFoodSwitchScRsp" => ::std::option::Option::Some(CmdItemType::CmdSetTurnFoodSwitchScRsp),
            "CmdPromoteEquipmentScRsp" => ::std::option::Option::Some(CmdItemType::CmdPromoteEquipmentScRsp),
            "CmdGetRelicFilterPlanScRsp" => ::std::option::Option::Some(CmdItemType::CmdGetRelicFilterPlanScRsp),
            "CmdMarkRelicFilterPlanCsReq" => ::std::option::Option::Some(CmdItemType::CmdMarkRelicFilterPlanCsReq),
            "CmdComposeSelectedRelicCsReq" => ::std::option::Option::Some(CmdItemType::CmdComposeSelectedRelicCsReq),
            "CmdGetRecyleTimeCsReq" => ::std::option::Option::Some(CmdItemType::CmdGetRecyleTimeCsReq),
            "CmdDestroyItemCsReq" => ::std::option::Option::Some(CmdItemType::CmdDestroyItemCsReq),
            "CmdGetRelicFilterPlanCsReq" => ::std::option::Option::Some(CmdItemType::CmdGetRelicFilterPlanCsReq),
            "CmdGetRecyleTimeScRsp" => ::std::option::Option::Some(CmdItemType::CmdGetRecyleTimeScRsp),
            "CmdExchangeHcoinScRsp" => ::std::option::Option::Some(CmdItemType::CmdExchangeHcoinScRsp),
            "CmdUseItemScRsp" => ::std::option::Option::Some(CmdItemType::CmdUseItemScRsp),
            "CmdRelicFilterPlanClearNameScNotify" => ::std::option::Option::Some(CmdItemType::CmdRelicFilterPlanClearNameScNotify),
            "CmdSellItemCsReq" => ::std::option::Option::Some(CmdItemType::CmdSellItemCsReq),
            "CmdDeleteRelicFilterPlanCsReq" => ::std::option::Option::Some(CmdItemType::CmdDeleteRelicFilterPlanCsReq),
            "CmdAddRelicFilterPlanScRsp" => ::std::option::Option::Some(CmdItemType::CmdAddRelicFilterPlanScRsp),
            "CmdRechargeSuccNotify" => ::std::option::Option::Some(CmdItemType::CmdRechargeSuccNotify),
            "CmdLockEquipmentScRsp" => ::std::option::Option::Some(CmdItemType::CmdLockEquipmentScRsp),
            "CmdGetMarkItemListCsReq" => ::std::option::Option::Some(CmdItemType::CmdGetMarkItemListCsReq),
            "CmdGeneralVirtualItemDataNotify" => ::std::option::Option::Some(CmdItemType::CmdGeneralVirtualItemDataNotify),
            "CmdMarkItemCsReq" => ::std::option::Option::Some(CmdItemType::CmdMarkItemCsReq),
            "CmdMarkRelicFilterPlanScRsp" => ::std::option::Option::Some(CmdItemType::CmdMarkRelicFilterPlanScRsp),
            "CmdModifyRelicFilterPlanCsReq" => ::std::option::Option::Some(CmdItemType::CmdModifyRelicFilterPlanCsReq),
            "CmdComposeLimitNumUpdateNotify" => ::std::option::Option::Some(CmdItemType::CmdComposeLimitNumUpdateNotify),
            "CmdGetBagCsReq" => ::std::option::Option::Some(CmdItemType::CmdGetBagCsReq),
            "CmdCancelMarkItemNotify" => ::std::option::Option::Some(CmdItemType::CmdCancelMarkItemNotify),
            "CmdLockRelicScRsp" => ::std::option::Option::Some(CmdItemType::CmdLockRelicScRsp),
            "CmdGetBagScRsp" => ::std::option::Option::Some(CmdItemType::CmdGetBagScRsp),
            "CmdDiscardRelicScRsp" => ::std::option::Option::Some(CmdItemType::CmdDiscardRelicScRsp),
            "CmdDiscardRelicCsReq" => ::std::option::Option::Some(CmdItemType::CmdDiscardRelicCsReq),
            "CmdComposeLimitNumCompleteNotify" => ::std::option::Option::Some(CmdItemType::CmdComposeLimitNumCompleteNotify),
            "CmdRankUpEquipmentScRsp" => ::std::option::Option::Some(CmdItemType::CmdRankUpEquipmentScRsp),
            "CmdSetTurnFoodSwitchCsReq" => ::std::option::Option::Some(CmdItemType::CmdSetTurnFoodSwitchCsReq),
            "CmdMarkItemScRsp" => ::std::option::Option::Some(CmdItemType::CmdMarkItemScRsp),
            "CmdComposeItemScRsp" => ::std::option::Option::Some(CmdItemType::CmdComposeItemScRsp),
            "CmdModifyRelicFilterPlanScRsp" => ::std::option::Option::Some(CmdItemType::CmdModifyRelicFilterPlanScRsp),
            "CmdDestroyItemScRsp" => ::std::option::Option::Some(CmdItemType::CmdDestroyItemScRsp),
            "CmdExpUpRelicScRsp" => ::std::option::Option::Some(CmdItemType::CmdExpUpRelicScRsp),
            "CmdLockRelicCsReq" => ::std::option::Option::Some(CmdItemType::CmdLockRelicCsReq),
            "CmdComposeItemCsReq" => ::std::option::Option::Some(CmdItemType::CmdComposeItemCsReq),
            "CmdPromoteEquipmentCsReq" => ::std::option::Option::Some(CmdItemType::CmdPromoteEquipmentCsReq),
            "CmdGetMarkItemListScRsp" => ::std::option::Option::Some(CmdItemType::CmdGetMarkItemListScRsp),
            "CmdUseItemCsReq" => ::std::option::Option::Some(CmdItemType::CmdUseItemCsReq),
            "CmdDeleteRelicFilterPlanScRsp" => ::std::option::Option::Some(CmdItemType::CmdDeleteRelicFilterPlanScRsp),
            "CmdComposeSelectedRelicScRsp" => ::std::option::Option::Some(CmdItemType::CmdComposeSelectedRelicScRsp),
            "CmdExpUpRelicCsReq" => ::std::option::Option::Some(CmdItemType::CmdExpUpRelicCsReq),
            "CmdExpUpEquipmentScRsp" => ::std::option::Option::Some(CmdItemType::CmdExpUpEquipmentScRsp),
            "CmdLockEquipmentCsReq" => ::std::option::Option::Some(CmdItemType::CmdLockEquipmentCsReq),
            "CmdSellItemScRsp" => ::std::option::Option::Some(CmdItemType::CmdSellItemScRsp),
            "CmdExchangeHcoinCsReq" => ::std::option::Option::Some(CmdItemType::CmdExchangeHcoinCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdItemType] = &[
        CmdItemType::CmdItemTypeNone,
        CmdItemType::CmdExpUpEquipmentCsReq,
        CmdItemType::CmdAddRelicFilterPlanCsReq,
        CmdItemType::CmdRankUpEquipmentCsReq,
        CmdItemType::CmdSyncTurnFoodNotify,
        CmdItemType::CmdAddEquipmentScNotify,
        CmdItemType::CmdSetTurnFoodSwitchScRsp,
        CmdItemType::CmdPromoteEquipmentScRsp,
        CmdItemType::CmdGetRelicFilterPlanScRsp,
        CmdItemType::CmdMarkRelicFilterPlanCsReq,
        CmdItemType::CmdComposeSelectedRelicCsReq,
        CmdItemType::CmdGetRecyleTimeCsReq,
        CmdItemType::CmdDestroyItemCsReq,
        CmdItemType::CmdGetRelicFilterPlanCsReq,
        CmdItemType::CmdGetRecyleTimeScRsp,
        CmdItemType::CmdExchangeHcoinScRsp,
        CmdItemType::CmdUseItemScRsp,
        CmdItemType::CmdRelicFilterPlanClearNameScNotify,
        CmdItemType::CmdSellItemCsReq,
        CmdItemType::CmdDeleteRelicFilterPlanCsReq,
        CmdItemType::CmdAddRelicFilterPlanScRsp,
        CmdItemType::CmdRechargeSuccNotify,
        CmdItemType::CmdLockEquipmentScRsp,
        CmdItemType::CmdGetMarkItemListCsReq,
        CmdItemType::CmdGeneralVirtualItemDataNotify,
        CmdItemType::CmdMarkItemCsReq,
        CmdItemType::CmdMarkRelicFilterPlanScRsp,
        CmdItemType::CmdModifyRelicFilterPlanCsReq,
        CmdItemType::CmdComposeLimitNumUpdateNotify,
        CmdItemType::CmdGetBagCsReq,
        CmdItemType::CmdCancelMarkItemNotify,
        CmdItemType::CmdLockRelicScRsp,
        CmdItemType::CmdGetBagScRsp,
        CmdItemType::CmdDiscardRelicScRsp,
        CmdItemType::CmdDiscardRelicCsReq,
        CmdItemType::CmdComposeLimitNumCompleteNotify,
        CmdItemType::CmdRankUpEquipmentScRsp,
        CmdItemType::CmdSetTurnFoodSwitchCsReq,
        CmdItemType::CmdMarkItemScRsp,
        CmdItemType::CmdComposeItemScRsp,
        CmdItemType::CmdModifyRelicFilterPlanScRsp,
        CmdItemType::CmdDestroyItemScRsp,
        CmdItemType::CmdExpUpRelicScRsp,
        CmdItemType::CmdLockRelicCsReq,
        CmdItemType::CmdComposeItemCsReq,
        CmdItemType::CmdPromoteEquipmentCsReq,
        CmdItemType::CmdGetMarkItemListScRsp,
        CmdItemType::CmdUseItemCsReq,
        CmdItemType::CmdDeleteRelicFilterPlanScRsp,
        CmdItemType::CmdComposeSelectedRelicScRsp,
        CmdItemType::CmdExpUpRelicCsReq,
        CmdItemType::CmdExpUpEquipmentScRsp,
        CmdItemType::CmdLockEquipmentCsReq,
        CmdItemType::CmdSellItemScRsp,
        CmdItemType::CmdExchangeHcoinCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdItemType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdItemType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdItemType::CmdItemTypeNone => 0,
            CmdItemType::CmdExpUpEquipmentCsReq => 1,
            CmdItemType::CmdAddRelicFilterPlanCsReq => 2,
            CmdItemType::CmdRankUpEquipmentCsReq => 3,
            CmdItemType::CmdSyncTurnFoodNotify => 4,
            CmdItemType::CmdAddEquipmentScNotify => 5,
            CmdItemType::CmdSetTurnFoodSwitchScRsp => 6,
            CmdItemType::CmdPromoteEquipmentScRsp => 7,
            CmdItemType::CmdGetRelicFilterPlanScRsp => 8,
            CmdItemType::CmdMarkRelicFilterPlanCsReq => 9,
            CmdItemType::CmdComposeSelectedRelicCsReq => 10,
            CmdItemType::CmdGetRecyleTimeCsReq => 11,
            CmdItemType::CmdDestroyItemCsReq => 12,
            CmdItemType::CmdGetRelicFilterPlanCsReq => 13,
            CmdItemType::CmdGetRecyleTimeScRsp => 14,
            CmdItemType::CmdExchangeHcoinScRsp => 15,
            CmdItemType::CmdUseItemScRsp => 16,
            CmdItemType::CmdRelicFilterPlanClearNameScNotify => 17,
            CmdItemType::CmdSellItemCsReq => 18,
            CmdItemType::CmdDeleteRelicFilterPlanCsReq => 19,
            CmdItemType::CmdAddRelicFilterPlanScRsp => 20,
            CmdItemType::CmdRechargeSuccNotify => 21,
            CmdItemType::CmdLockEquipmentScRsp => 22,
            CmdItemType::CmdGetMarkItemListCsReq => 23,
            CmdItemType::CmdGeneralVirtualItemDataNotify => 24,
            CmdItemType::CmdMarkItemCsReq => 25,
            CmdItemType::CmdMarkRelicFilterPlanScRsp => 26,
            CmdItemType::CmdModifyRelicFilterPlanCsReq => 27,
            CmdItemType::CmdComposeLimitNumUpdateNotify => 28,
            CmdItemType::CmdGetBagCsReq => 29,
            CmdItemType::CmdCancelMarkItemNotify => 30,
            CmdItemType::CmdLockRelicScRsp => 31,
            CmdItemType::CmdGetBagScRsp => 32,
            CmdItemType::CmdDiscardRelicScRsp => 33,
            CmdItemType::CmdDiscardRelicCsReq => 34,
            CmdItemType::CmdComposeLimitNumCompleteNotify => 35,
            CmdItemType::CmdRankUpEquipmentScRsp => 36,
            CmdItemType::CmdSetTurnFoodSwitchCsReq => 37,
            CmdItemType::CmdMarkItemScRsp => 38,
            CmdItemType::CmdComposeItemScRsp => 39,
            CmdItemType::CmdModifyRelicFilterPlanScRsp => 40,
            CmdItemType::CmdDestroyItemScRsp => 41,
            CmdItemType::CmdExpUpRelicScRsp => 42,
            CmdItemType::CmdLockRelicCsReq => 43,
            CmdItemType::CmdComposeItemCsReq => 44,
            CmdItemType::CmdPromoteEquipmentCsReq => 45,
            CmdItemType::CmdGetMarkItemListScRsp => 46,
            CmdItemType::CmdUseItemCsReq => 47,
            CmdItemType::CmdDeleteRelicFilterPlanScRsp => 48,
            CmdItemType::CmdComposeSelectedRelicScRsp => 49,
            CmdItemType::CmdExpUpRelicCsReq => 50,
            CmdItemType::CmdExpUpEquipmentScRsp => 51,
            CmdItemType::CmdLockEquipmentCsReq => 52,
            CmdItemType::CmdSellItemScRsp => 53,
            CmdItemType::CmdExchangeHcoinCsReq => 54,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdItemType {
    fn default() -> Self {
        CmdItemType::CmdItemTypeNone
    }
}

impl CmdItemType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdItemType>("CmdItemType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11CmdItemType.proto*\xda\x0c\n\x0bCmdItemType\x12\x13\n\x0fCmdItemTy\
    peNone\x10\0\x12\x1b\n\x16CmdExpUpEquipmentCsReq\x10\xa3\x04\x12\x1f\n\
    \x1aCmdAddRelicFilterPlanCsReq\x10\xc2\x04\x12\x1c\n\x17CmdRankUpEquipme\
    ntCsReq\x10\xc4\x04\x12\x1a\n\x15CmdSyncTurnFoodNotify\x10\xcf\x04\x12\
    \x1c\n\x17CmdAddEquipmentScNotify\x10\xd7\x04\x12\x1e\n\x19CmdSetTurnFoo\
    dSwitchScRsp\x10\xcc\x04\x12\x1d\n\x18CmdPromoteEquipmentScRsp\x10\xa2\
    \x04\x12\x1f\n\x1aCmdGetRelicFilterPlanScRsp\x10\xac\x04\x12\x20\n\x1bCm\
    dMarkRelicFilterPlanCsReq\x10\xd4\x04\x12!\n\x1cCmdComposeSelectedRelicC\
    sReq\x10\xbd\x04\x12\x1a\n\x15CmdGetRecyleTimeCsReq\x10\xfd\x03\x12\x18\
    \n\x13CmdDestroyItemCsReq\x10\xfe\x03\x12\x1f\n\x1aCmdGetRelicFilterPlan\
    CsReq\x10\xb6\x04\x12\x1a\n\x15CmdGetRecyleTimeScRsp\x10\xd1\x04\x12\x1a\
    \n\x15CmdExchangeHcoinScRsp\x10\xa7\x04\x12\x14\n\x0fCmdUseItemScRsp\x10\
    \x99\x04\x12(\n#CmdRelicFilterPlanClearNameScNotify\x10\xbb\x04\x12\x15\
    \n\x10CmdSellItemCsReq\x10\xb1\x04\x12\"\n\x1dCmdDeleteRelicFilterPlanCs\
    Req\x10\xb0\x04\x12\x1f\n\x1aCmdAddRelicFilterPlanScRsp\x10\xbc\x04\x12\
    \x1a\n\x15CmdRechargeSuccNotify\x10\x91\x04\x12\x1a\n\x15CmdLockEquipmen\
    tScRsp\x10\xa9\x04\x12\x1c\n\x17CmdGetMarkItemListCsReq\x10\x98\x04\x12$\
    \n\x1fCmdGeneralVirtualItemDataNotify\x10\x9f\x04\x12\x15\n\x10CmdMarkIt\
    emCsReq\x10\x8e\x04\x12\x20\n\x1bCmdMarkRelicFilterPlanScRsp\x10\x93\x04\
    \x12\"\n\x1dCmdModifyRelicFilterPlanCsReq\x10\x8c\x04\x12#\n\x1eCmdCompo\
    seLimitNumUpdateNotify\x10\xd2\x04\x12\x13\n\x0eCmdGetBagCsReq\x10\xaf\
    \x04\x12\x1c\n\x17CmdCancelMarkItemNotify\x10\xc1\x04\x12\x16\n\x11CmdLo\
    ckRelicScRsp\x10\x87\x04\x12\x13\n\x0eCmdGetBagScRsp\x10\x88\x04\x12\x19\
    \n\x14CmdDiscardRelicScRsp\x10\x82\x04\x12\x19\n\x14CmdDiscardRelicCsReq\
    \x10\xb3\x04\x12%\n\x20CmdComposeLimitNumCompleteNotify\x10\xb4\x04\x12\
    \x1c\n\x17CmdRankUpEquipmentScRsp\x10\x84\x04\x12\x1e\n\x19CmdSetTurnFoo\
    dSwitchCsReq\x10\xf8\x03\x12\x15\n\x10CmdMarkItemScRsp\x10\x81\x04\x12\
    \x18\n\x13CmdComposeItemScRsp\x10\xbf\x04\x12\"\n\x1dCmdModifyRelicFilte\
    rPlanScRsp\x10\x80\x04\x12\x18\n\x13CmdDestroyItemScRsp\x10\xba\x04\x12\
    \x17\n\x12CmdExpUpRelicScRsp\x10\xce\x04\x12\x16\n\x11CmdLockRelicCsReq\
    \x10\xc3\x04\x12\x18\n\x13CmdComposeItemCsReq\x10\x92\x04\x12\x1d\n\x18C\
    mdPromoteEquipmentCsReq\x10\xf7\x03\x12\x1c\n\x17CmdGetMarkItemListScRsp\
    \x10\xb5\x04\x12\x14\n\x0fCmdUseItemCsReq\x10\x96\x04\x12\"\n\x1dCmdDele\
    teRelicFilterPlanScRsp\x10\x94\x04\x12!\n\x1cCmdComposeSelectedRelicScRs\
    p\x10\xc7\x04\x12\x17\n\x12CmdExpUpRelicCsReq\x10\xa4\x04\x12\x1b\n\x16C\
    mdExpUpEquipmentScRsp\x10\xbe\x04\x12\x1a\n\x15CmdLockEquipmentCsReq\x10\
    \x9b\x04\x12\x15\n\x10CmdSellItemScRsp\x10\x8d\x04\x12\x1a\n\x15CmdExcha\
    ngeHcoinCsReq\x10\x95\x04b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdItemType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
