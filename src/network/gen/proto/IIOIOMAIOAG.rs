// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `IIOIOMAIOAG.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:IIOIOMAIOAG)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct IIOIOMAIOAG {
    // message fields
    // @@protoc_insertion_point(field:IIOIOMAIOAG.HGMDJHLBIGO)
    pub HGMDJHLBIGO: ::std::vec::Vec<super::AKLFLFOPLFK::AKLFLFOPLFK>,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.HIADGILPOAM)
    pub HIADGILPOAM: u32,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.EOBJCDFPEAO)
    pub EOBJCDFPEAO: ::std::vec::Vec<super::DDOLOAHPEGO::DDOLOAHPEGO>,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.ALAEBJJIGPI)
    pub ALAEBJJIGPI: ::std::vec::Vec<super::CKFCKACNHBL::CKFCKACNHBL>,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.EBNFOELMJML)
    pub EBNFOELMJML: u32,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.ENFLAIMGBAN)
    pub ENFLAIMGBAN: u32,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.MJFKFEICALA)
    pub MJFKFEICALA: u32,
    // @@protoc_insertion_point(field:IIOIOMAIOAG.AAIJABGNADA)
    pub AAIJABGNADA: u32,
    // special fields
    // @@protoc_insertion_point(special_field:IIOIOMAIOAG.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a IIOIOMAIOAG {
    fn default() -> &'a IIOIOMAIOAG {
        <IIOIOMAIOAG as ::protobuf::Message>::default_instance()
    }
}

impl IIOIOMAIOAG {
    pub fn new() -> IIOIOMAIOAG {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(8);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HGMDJHLBIGO",
            |m: &IIOIOMAIOAG| { &m.HGMDJHLBIGO },
            |m: &mut IIOIOMAIOAG| { &mut m.HGMDJHLBIGO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HIADGILPOAM",
            |m: &IIOIOMAIOAG| { &m.HIADGILPOAM },
            |m: &mut IIOIOMAIOAG| { &mut m.HIADGILPOAM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "EOBJCDFPEAO",
            |m: &IIOIOMAIOAG| { &m.EOBJCDFPEAO },
            |m: &mut IIOIOMAIOAG| { &mut m.EOBJCDFPEAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "ALAEBJJIGPI",
            |m: &IIOIOMAIOAG| { &m.ALAEBJJIGPI },
            |m: &mut IIOIOMAIOAG| { &mut m.ALAEBJJIGPI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EBNFOELMJML",
            |m: &IIOIOMAIOAG| { &m.EBNFOELMJML },
            |m: &mut IIOIOMAIOAG| { &mut m.EBNFOELMJML },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ENFLAIMGBAN",
            |m: &IIOIOMAIOAG| { &m.ENFLAIMGBAN },
            |m: &mut IIOIOMAIOAG| { &mut m.ENFLAIMGBAN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MJFKFEICALA",
            |m: &IIOIOMAIOAG| { &m.MJFKFEICALA },
            |m: &mut IIOIOMAIOAG| { &mut m.MJFKFEICALA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AAIJABGNADA",
            |m: &IIOIOMAIOAG| { &m.AAIJABGNADA },
            |m: &mut IIOIOMAIOAG| { &mut m.AAIJABGNADA },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<IIOIOMAIOAG>(
            "IIOIOMAIOAG",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for IIOIOMAIOAG {
    const NAME: &'static str = "IIOIOMAIOAG";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                18 => {
                    self.HGMDJHLBIGO.push(is.read_message()?);
                },
                96 => {
                    self.HIADGILPOAM = is.read_uint32()?;
                },
                58 => {
                    self.EOBJCDFPEAO.push(is.read_message()?);
                },
                34 => {
                    self.ALAEBJJIGPI.push(is.read_message()?);
                },
                40 => {
                    self.EBNFOELMJML = is.read_uint32()?;
                },
                72 => {
                    self.ENFLAIMGBAN = is.read_uint32()?;
                },
                8 => {
                    self.MJFKFEICALA = is.read_uint32()?;
                },
                120 => {
                    self.AAIJABGNADA = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.HGMDJHLBIGO {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.HIADGILPOAM != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.HIADGILPOAM);
        }
        for value in &self.EOBJCDFPEAO {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.ALAEBJJIGPI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.EBNFOELMJML != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.EBNFOELMJML);
        }
        if self.ENFLAIMGBAN != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.ENFLAIMGBAN);
        }
        if self.MJFKFEICALA != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.MJFKFEICALA);
        }
        if self.AAIJABGNADA != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.AAIJABGNADA);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.HGMDJHLBIGO {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        };
        if self.HIADGILPOAM != 0 {
            os.write_uint32(12, self.HIADGILPOAM)?;
        }
        for v in &self.EOBJCDFPEAO {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        };
        for v in &self.ALAEBJJIGPI {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        };
        if self.EBNFOELMJML != 0 {
            os.write_uint32(5, self.EBNFOELMJML)?;
        }
        if self.ENFLAIMGBAN != 0 {
            os.write_uint32(9, self.ENFLAIMGBAN)?;
        }
        if self.MJFKFEICALA != 0 {
            os.write_uint32(1, self.MJFKFEICALA)?;
        }
        if self.AAIJABGNADA != 0 {
            os.write_uint32(15, self.AAIJABGNADA)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> IIOIOMAIOAG {
        IIOIOMAIOAG::new()
    }

    fn clear(&mut self) {
        self.HGMDJHLBIGO.clear();
        self.HIADGILPOAM = 0;
        self.EOBJCDFPEAO.clear();
        self.ALAEBJJIGPI.clear();
        self.EBNFOELMJML = 0;
        self.ENFLAIMGBAN = 0;
        self.MJFKFEICALA = 0;
        self.AAIJABGNADA = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static IIOIOMAIOAG {
        static instance: IIOIOMAIOAG = IIOIOMAIOAG {
            HGMDJHLBIGO: ::std::vec::Vec::new(),
            HIADGILPOAM: 0,
            EOBJCDFPEAO: ::std::vec::Vec::new(),
            ALAEBJJIGPI: ::std::vec::Vec::new(),
            EBNFOELMJML: 0,
            ENFLAIMGBAN: 0,
            MJFKFEICALA: 0,
            AAIJABGNADA: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for IIOIOMAIOAG {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("IIOIOMAIOAG").unwrap()).clone()
    }
}

impl ::std::fmt::Display for IIOIOMAIOAG {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for IIOIOMAIOAG {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11IIOIOMAIOAG.proto\x1a\x11AKLFLFOPLFK.proto\x1a\x11CKFCKACNHBL.prot\
    o\x1a\x11DDOLOAHPEGO.proto\"\xc7\x02\n\x0bIIOIOMAIOAG\x12.\n\x0bHGMDJHLB\
    IGO\x18\x02\x20\x03(\x0b2\x0c.AKLFLFOPLFKR\x0bHGMDJHLBIGO\x12\x20\n\x0bH\
    IADGILPOAM\x18\x0c\x20\x01(\rR\x0bHIADGILPOAM\x12.\n\x0bEOBJCDFPEAO\x18\
    \x07\x20\x03(\x0b2\x0c.DDOLOAHPEGOR\x0bEOBJCDFPEAO\x12.\n\x0bALAEBJJIGPI\
    \x18\x04\x20\x03(\x0b2\x0c.CKFCKACNHBLR\x0bALAEBJJIGPI\x12\x20\n\x0bEBNF\
    OELMJML\x18\x05\x20\x01(\rR\x0bEBNFOELMJML\x12\x20\n\x0bENFLAIMGBAN\x18\
    \t\x20\x01(\rR\x0bENFLAIMGBAN\x12\x20\n\x0bMJFKFEICALA\x18\x01\x20\x01(\
    \rR\x0bMJFKFEICALA\x12\x20\n\x0bAAIJABGNADA\x18\x0f\x20\x01(\rR\x0bAAIJA\
    BGNADAb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(3);
            deps.push(super::AKLFLFOPLFK::file_descriptor().clone());
            deps.push(super::CKFCKACNHBL::file_descriptor().clone());
            deps.push(super::DDOLOAHPEGO::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(IIOIOMAIOAG::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
