// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `FBKMEBGDOJO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:FBKMEBGDOJO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct FBKMEBGDOJO {
    // message fields
    // @@protoc_insertion_point(field:FBKMEBGDOJO.OGOJJHPOAGG)
    pub OGOJJHPOAGG: u32,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.OFAGGKBMPJN)
    pub OFAGGKBMPJN: u32,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.OJBAILGKLBM)
    pub OJBAILGKLBM: ::protobuf::EnumOrUnknown<super::EIENIJLIHDE::EIENIJLIHDE>,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.GHPJICFMJCD)
    pub GHPJICFMJCD: u32,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.LKGOAPJDNBJ)
    pub LKGOAPJDNBJ: ::protobuf::MessageField<super::GFOBHOCGJPJ::GFOBHOCGJPJ>,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.EPPAAMHNKBG)
    pub EPPAAMHNKBG: ::std::vec::Vec<super::CDEEDOKOFPK::CDEEDOKOFPK>,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.KKFKECEMFEB)
    pub KKFKECEMFEB: ::protobuf::EnumOrUnknown<super::ExtraLineupType::ExtraLineupType>,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.GPKEAKPHIPA)
    pub GPKEAKPHIPA: u32,
    // @@protoc_insertion_point(field:FBKMEBGDOJO.PILNCPHBMJB)
    pub PILNCPHBMJB: u32,
    // special fields
    // @@protoc_insertion_point(special_field:FBKMEBGDOJO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a FBKMEBGDOJO {
    fn default() -> &'a FBKMEBGDOJO {
        <FBKMEBGDOJO as ::protobuf::Message>::default_instance()
    }
}

impl FBKMEBGDOJO {
    pub fn new() -> FBKMEBGDOJO {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(9);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OGOJJHPOAGG",
            |m: &FBKMEBGDOJO| { &m.OGOJJHPOAGG },
            |m: &mut FBKMEBGDOJO| { &mut m.OGOJJHPOAGG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OFAGGKBMPJN",
            |m: &FBKMEBGDOJO| { &m.OFAGGKBMPJN },
            |m: &mut FBKMEBGDOJO| { &mut m.OFAGGKBMPJN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OJBAILGKLBM",
            |m: &FBKMEBGDOJO| { &m.OJBAILGKLBM },
            |m: &mut FBKMEBGDOJO| { &mut m.OJBAILGKLBM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GHPJICFMJCD",
            |m: &FBKMEBGDOJO| { &m.GHPJICFMJCD },
            |m: &mut FBKMEBGDOJO| { &mut m.GHPJICFMJCD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GFOBHOCGJPJ::GFOBHOCGJPJ>(
            "LKGOAPJDNBJ",
            |m: &FBKMEBGDOJO| { &m.LKGOAPJDNBJ },
            |m: &mut FBKMEBGDOJO| { &mut m.LKGOAPJDNBJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "EPPAAMHNKBG",
            |m: &FBKMEBGDOJO| { &m.EPPAAMHNKBG },
            |m: &mut FBKMEBGDOJO| { &mut m.EPPAAMHNKBG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KKFKECEMFEB",
            |m: &FBKMEBGDOJO| { &m.KKFKECEMFEB },
            |m: &mut FBKMEBGDOJO| { &mut m.KKFKECEMFEB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GPKEAKPHIPA",
            |m: &FBKMEBGDOJO| { &m.GPKEAKPHIPA },
            |m: &mut FBKMEBGDOJO| { &mut m.GPKEAKPHIPA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PILNCPHBMJB",
            |m: &FBKMEBGDOJO| { &m.PILNCPHBMJB },
            |m: &mut FBKMEBGDOJO| { &mut m.PILNCPHBMJB },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<FBKMEBGDOJO>(
            "FBKMEBGDOJO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for FBKMEBGDOJO {
    const NAME: &'static str = "FBKMEBGDOJO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                48 => {
                    self.OGOJJHPOAGG = is.read_uint32()?;
                },
                104 => {
                    self.OFAGGKBMPJN = is.read_uint32()?;
                },
                120 => {
                    self.OJBAILGKLBM = is.read_enum_or_unknown()?;
                },
                8 => {
                    self.GHPJICFMJCD = is.read_uint32()?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LKGOAPJDNBJ)?;
                },
                98 => {
                    self.EPPAAMHNKBG.push(is.read_message()?);
                },
                32 => {
                    self.KKFKECEMFEB = is.read_enum_or_unknown()?;
                },
                16 => {
                    self.GPKEAKPHIPA = is.read_uint32()?;
                },
                72 => {
                    self.PILNCPHBMJB = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.OGOJJHPOAGG != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.OGOJJHPOAGG);
        }
        if self.OFAGGKBMPJN != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.OFAGGKBMPJN);
        }
        if self.OJBAILGKLBM != ::protobuf::EnumOrUnknown::new(super::EIENIJLIHDE::EIENIJLIHDE::CHALLENGE_UNKNOWN) {
            my_size += ::protobuf::rt::int32_size(15, self.OJBAILGKLBM.value());
        }
        if self.GHPJICFMJCD != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.GHPJICFMJCD);
        }
        if let Some(v) = self.LKGOAPJDNBJ.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.EPPAAMHNKBG {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.KKFKECEMFEB != ::protobuf::EnumOrUnknown::new(super::ExtraLineupType::ExtraLineupType::LINEUP_NONE) {
            my_size += ::protobuf::rt::int32_size(4, self.KKFKECEMFEB.value());
        }
        if self.GPKEAKPHIPA != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.GPKEAKPHIPA);
        }
        if self.PILNCPHBMJB != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.PILNCPHBMJB);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.OGOJJHPOAGG != 0 {
            os.write_uint32(6, self.OGOJJHPOAGG)?;
        }
        if self.OFAGGKBMPJN != 0 {
            os.write_uint32(13, self.OFAGGKBMPJN)?;
        }
        if self.OJBAILGKLBM != ::protobuf::EnumOrUnknown::new(super::EIENIJLIHDE::EIENIJLIHDE::CHALLENGE_UNKNOWN) {
            os.write_enum(15, ::protobuf::EnumOrUnknown::value(&self.OJBAILGKLBM))?;
        }
        if self.GHPJICFMJCD != 0 {
            os.write_uint32(1, self.GHPJICFMJCD)?;
        }
        if let Some(v) = self.LKGOAPJDNBJ.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        for v in &self.EPPAAMHNKBG {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.KKFKECEMFEB != ::protobuf::EnumOrUnknown::new(super::ExtraLineupType::ExtraLineupType::LINEUP_NONE) {
            os.write_enum(4, ::protobuf::EnumOrUnknown::value(&self.KKFKECEMFEB))?;
        }
        if self.GPKEAKPHIPA != 0 {
            os.write_uint32(2, self.GPKEAKPHIPA)?;
        }
        if self.PILNCPHBMJB != 0 {
            os.write_uint32(9, self.PILNCPHBMJB)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> FBKMEBGDOJO {
        FBKMEBGDOJO::new()
    }

    fn clear(&mut self) {
        self.OGOJJHPOAGG = 0;
        self.OFAGGKBMPJN = 0;
        self.OJBAILGKLBM = ::protobuf::EnumOrUnknown::new(super::EIENIJLIHDE::EIENIJLIHDE::CHALLENGE_UNKNOWN);
        self.GHPJICFMJCD = 0;
        self.LKGOAPJDNBJ.clear();
        self.EPPAAMHNKBG.clear();
        self.KKFKECEMFEB = ::protobuf::EnumOrUnknown::new(super::ExtraLineupType::ExtraLineupType::LINEUP_NONE);
        self.GPKEAKPHIPA = 0;
        self.PILNCPHBMJB = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static FBKMEBGDOJO {
        static instance: FBKMEBGDOJO = FBKMEBGDOJO {
            OGOJJHPOAGG: 0,
            OFAGGKBMPJN: 0,
            OJBAILGKLBM: ::protobuf::EnumOrUnknown::from_i32(0),
            GHPJICFMJCD: 0,
            LKGOAPJDNBJ: ::protobuf::MessageField::none(),
            EPPAAMHNKBG: ::std::vec::Vec::new(),
            KKFKECEMFEB: ::protobuf::EnumOrUnknown::from_i32(0),
            GPKEAKPHIPA: 0,
            PILNCPHBMJB: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for FBKMEBGDOJO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("FBKMEBGDOJO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for FBKMEBGDOJO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for FBKMEBGDOJO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11FBKMEBGDOJO.proto\x1a\x11CDEEDOKOFPK.proto\x1a\x11EIENIJLIHDE.prot\
    o\x1a\x15ExtraLineupType.proto\x1a\x11GFOBHOCGJPJ.proto\"\xfb\x02\n\x0bF\
    BKMEBGDOJO\x12\x20\n\x0bOGOJJHPOAGG\x18\x06\x20\x01(\rR\x0bOGOJJHPOAGG\
    \x12\x20\n\x0bOFAGGKBMPJN\x18\r\x20\x01(\rR\x0bOFAGGKBMPJN\x12.\n\x0bOJB\
    AILGKLBM\x18\x0f\x20\x01(\x0e2\x0c.EIENIJLIHDER\x0bOJBAILGKLBM\x12\x20\n\
    \x0bGHPJICFMJCD\x18\x01\x20\x01(\rR\x0bGHPJICFMJCD\x12.\n\x0bLKGOAPJDNBJ\
    \x18\x07\x20\x01(\x0b2\x0c.GFOBHOCGJPJR\x0bLKGOAPJDNBJ\x12.\n\x0bEPPAAMH\
    NKBG\x18\x0c\x20\x03(\x0b2\x0c.CDEEDOKOFPKR\x0bEPPAAMHNKBG\x122\n\x0bKKF\
    KECEMFEB\x18\x04\x20\x01(\x0e2\x10.ExtraLineupTypeR\x0bKKFKECEMFEB\x12\
    \x20\n\x0bGPKEAKPHIPA\x18\x02\x20\x01(\rR\x0bGPKEAKPHIPA\x12\x20\n\x0bPI\
    LNCPHBMJB\x18\t\x20\x01(\rR\x0bPILNCPHBMJBb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(4);
            deps.push(super::CDEEDOKOFPK::file_descriptor().clone());
            deps.push(super::EIENIJLIHDE::file_descriptor().clone());
            deps.push(super::ExtraLineupType::file_descriptor().clone());
            deps.push(super::GFOBHOCGJPJ::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(FBKMEBGDOJO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
