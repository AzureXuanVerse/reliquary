// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `BOENKOAFFPJ.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:BOENKOAFFPJ)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct BOENKOAFFPJ {
    // message fields
    // @@protoc_insertion_point(field:BOENKOAFFPJ.PAHMIEIIAAI)
    pub PAHMIEIIAAI: ::std::vec::Vec<super::AssistSimpleInfo::AssistSimpleInfo>,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.OPMFPACCAIO)
    pub OPMFPACCAIO: ::protobuf::EnumOrUnknown<super::LPOLDCGKNGA::LPOLDCGKNGA>,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.EIFICNPAOIO)
    pub EIFICNPAOIO: u32,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.NEJJEFEOJOJ)
    pub NEJJEFEOJOJ: ::protobuf::EnumOrUnknown<super::BPOEMOLJCCE::BPOEMOLJCCE>,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.MNDMHKPHCDA)
    pub MNDMHKPHCDA: ::std::string::String,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.BDLMCBLJJCM)
    pub BDLMCBLJJCM: bool,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.level)
    pub level: u32,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.DBPCMPCLOCI)
    pub DBPCMPCLOCI: ::std::string::String,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.NOFLJPFMNAK)
    pub NOFLJPFMNAK: i64,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.uid)
    pub uid: u32,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.FLFKCIHCENF)
    pub FLFKCIHCENF: ::std::string::String,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.LOBIFHOJDMF)
    pub LOBIFHOJDMF: u32,
    // @@protoc_insertion_point(field:BOENKOAFFPJ.HFHGPLMEFGJ)
    pub HFHGPLMEFGJ: ::std::string::String,
    // special fields
    // @@protoc_insertion_point(special_field:BOENKOAFFPJ.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a BOENKOAFFPJ {
    fn default() -> &'a BOENKOAFFPJ {
        <BOENKOAFFPJ as ::protobuf::Message>::default_instance()
    }
}

impl BOENKOAFFPJ {
    pub fn new() -> BOENKOAFFPJ {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(13);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PAHMIEIIAAI",
            |m: &BOENKOAFFPJ| { &m.PAHMIEIIAAI },
            |m: &mut BOENKOAFFPJ| { &mut m.PAHMIEIIAAI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OPMFPACCAIO",
            |m: &BOENKOAFFPJ| { &m.OPMFPACCAIO },
            |m: &mut BOENKOAFFPJ| { &mut m.OPMFPACCAIO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EIFICNPAOIO",
            |m: &BOENKOAFFPJ| { &m.EIFICNPAOIO },
            |m: &mut BOENKOAFFPJ| { &mut m.EIFICNPAOIO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NEJJEFEOJOJ",
            |m: &BOENKOAFFPJ| { &m.NEJJEFEOJOJ },
            |m: &mut BOENKOAFFPJ| { &mut m.NEJJEFEOJOJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MNDMHKPHCDA",
            |m: &BOENKOAFFPJ| { &m.MNDMHKPHCDA },
            |m: &mut BOENKOAFFPJ| { &mut m.MNDMHKPHCDA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BDLMCBLJJCM",
            |m: &BOENKOAFFPJ| { &m.BDLMCBLJJCM },
            |m: &mut BOENKOAFFPJ| { &mut m.BDLMCBLJJCM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "level",
            |m: &BOENKOAFFPJ| { &m.level },
            |m: &mut BOENKOAFFPJ| { &mut m.level },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DBPCMPCLOCI",
            |m: &BOENKOAFFPJ| { &m.DBPCMPCLOCI },
            |m: &mut BOENKOAFFPJ| { &mut m.DBPCMPCLOCI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NOFLJPFMNAK",
            |m: &BOENKOAFFPJ| { &m.NOFLJPFMNAK },
            |m: &mut BOENKOAFFPJ| { &mut m.NOFLJPFMNAK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "uid",
            |m: &BOENKOAFFPJ| { &m.uid },
            |m: &mut BOENKOAFFPJ| { &mut m.uid },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FLFKCIHCENF",
            |m: &BOENKOAFFPJ| { &m.FLFKCIHCENF },
            |m: &mut BOENKOAFFPJ| { &mut m.FLFKCIHCENF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LOBIFHOJDMF",
            |m: &BOENKOAFFPJ| { &m.LOBIFHOJDMF },
            |m: &mut BOENKOAFFPJ| { &mut m.LOBIFHOJDMF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HFHGPLMEFGJ",
            |m: &BOENKOAFFPJ| { &m.HFHGPLMEFGJ },
            |m: &mut BOENKOAFFPJ| { &mut m.HFHGPLMEFGJ },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<BOENKOAFFPJ>(
            "BOENKOAFFPJ",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for BOENKOAFFPJ {
    const NAME: &'static str = "BOENKOAFFPJ";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                10 => {
                    self.PAHMIEIIAAI.push(is.read_message()?);
                },
                24 => {
                    self.OPMFPACCAIO = is.read_enum_or_unknown()?;
                },
                16 => {
                    self.EIFICNPAOIO = is.read_uint32()?;
                },
                32 => {
                    self.NEJJEFEOJOJ = is.read_enum_or_unknown()?;
                },
                58 => {
                    self.MNDMHKPHCDA = is.read_string()?;
                },
                104 => {
                    self.BDLMCBLJJCM = is.read_bool()?;
                },
                80 => {
                    self.level = is.read_uint32()?;
                },
                50 => {
                    self.DBPCMPCLOCI = is.read_string()?;
                },
                96 => {
                    self.NOFLJPFMNAK = is.read_int64()?;
                },
                112 => {
                    self.uid = is.read_uint32()?;
                },
                42 => {
                    self.FLFKCIHCENF = is.read_string()?;
                },
                64 => {
                    self.LOBIFHOJDMF = is.read_uint32()?;
                },
                90 => {
                    self.HFHGPLMEFGJ = is.read_string()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.PAHMIEIIAAI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OPMFPACCAIO != ::protobuf::EnumOrUnknown::new(super::LPOLDCGKNGA::LPOLDCGKNGA::FRIEND_ONLINE_STATUS_OFFLINE) {
            my_size += ::protobuf::rt::int32_size(3, self.OPMFPACCAIO.value());
        }
        if self.EIFICNPAOIO != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.EIFICNPAOIO);
        }
        if self.NEJJEFEOJOJ != ::protobuf::EnumOrUnknown::new(super::BPOEMOLJCCE::BPOEMOLJCCE::EDITOR) {
            my_size += ::protobuf::rt::int32_size(4, self.NEJJEFEOJOJ.value());
        }
        if !self.MNDMHKPHCDA.is_empty() {
            my_size += ::protobuf::rt::string_size(7, &self.MNDMHKPHCDA);
        }
        if self.BDLMCBLJJCM != false {
            my_size += 1 + 1;
        }
        if self.level != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.level);
        }
        if !self.DBPCMPCLOCI.is_empty() {
            my_size += ::protobuf::rt::string_size(6, &self.DBPCMPCLOCI);
        }
        if self.NOFLJPFMNAK != 0 {
            my_size += ::protobuf::rt::int64_size(12, self.NOFLJPFMNAK);
        }
        if self.uid != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.uid);
        }
        if !self.FLFKCIHCENF.is_empty() {
            my_size += ::protobuf::rt::string_size(5, &self.FLFKCIHCENF);
        }
        if self.LOBIFHOJDMF != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.LOBIFHOJDMF);
        }
        if !self.HFHGPLMEFGJ.is_empty() {
            my_size += ::protobuf::rt::string_size(11, &self.HFHGPLMEFGJ);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.PAHMIEIIAAI {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        };
        if self.OPMFPACCAIO != ::protobuf::EnumOrUnknown::new(super::LPOLDCGKNGA::LPOLDCGKNGA::FRIEND_ONLINE_STATUS_OFFLINE) {
            os.write_enum(3, ::protobuf::EnumOrUnknown::value(&self.OPMFPACCAIO))?;
        }
        if self.EIFICNPAOIO != 0 {
            os.write_uint32(2, self.EIFICNPAOIO)?;
        }
        if self.NEJJEFEOJOJ != ::protobuf::EnumOrUnknown::new(super::BPOEMOLJCCE::BPOEMOLJCCE::EDITOR) {
            os.write_enum(4, ::protobuf::EnumOrUnknown::value(&self.NEJJEFEOJOJ))?;
        }
        if !self.MNDMHKPHCDA.is_empty() {
            os.write_string(7, &self.MNDMHKPHCDA)?;
        }
        if self.BDLMCBLJJCM != false {
            os.write_bool(13, self.BDLMCBLJJCM)?;
        }
        if self.level != 0 {
            os.write_uint32(10, self.level)?;
        }
        if !self.DBPCMPCLOCI.is_empty() {
            os.write_string(6, &self.DBPCMPCLOCI)?;
        }
        if self.NOFLJPFMNAK != 0 {
            os.write_int64(12, self.NOFLJPFMNAK)?;
        }
        if self.uid != 0 {
            os.write_uint32(14, self.uid)?;
        }
        if !self.FLFKCIHCENF.is_empty() {
            os.write_string(5, &self.FLFKCIHCENF)?;
        }
        if self.LOBIFHOJDMF != 0 {
            os.write_uint32(8, self.LOBIFHOJDMF)?;
        }
        if !self.HFHGPLMEFGJ.is_empty() {
            os.write_string(11, &self.HFHGPLMEFGJ)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> BOENKOAFFPJ {
        BOENKOAFFPJ::new()
    }

    fn clear(&mut self) {
        self.PAHMIEIIAAI.clear();
        self.OPMFPACCAIO = ::protobuf::EnumOrUnknown::new(super::LPOLDCGKNGA::LPOLDCGKNGA::FRIEND_ONLINE_STATUS_OFFLINE);
        self.EIFICNPAOIO = 0;
        self.NEJJEFEOJOJ = ::protobuf::EnumOrUnknown::new(super::BPOEMOLJCCE::BPOEMOLJCCE::EDITOR);
        self.MNDMHKPHCDA.clear();
        self.BDLMCBLJJCM = false;
        self.level = 0;
        self.DBPCMPCLOCI.clear();
        self.NOFLJPFMNAK = 0;
        self.uid = 0;
        self.FLFKCIHCENF.clear();
        self.LOBIFHOJDMF = 0;
        self.HFHGPLMEFGJ.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static BOENKOAFFPJ {
        static instance: BOENKOAFFPJ = BOENKOAFFPJ {
            PAHMIEIIAAI: ::std::vec::Vec::new(),
            OPMFPACCAIO: ::protobuf::EnumOrUnknown::from_i32(0),
            EIFICNPAOIO: 0,
            NEJJEFEOJOJ: ::protobuf::EnumOrUnknown::from_i32(0),
            MNDMHKPHCDA: ::std::string::String::new(),
            BDLMCBLJJCM: false,
            level: 0,
            DBPCMPCLOCI: ::std::string::String::new(),
            NOFLJPFMNAK: 0,
            uid: 0,
            FLFKCIHCENF: ::std::string::String::new(),
            LOBIFHOJDMF: 0,
            HFHGPLMEFGJ: ::std::string::String::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for BOENKOAFFPJ {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("BOENKOAFFPJ").unwrap()).clone()
    }
}

impl ::std::fmt::Display for BOENKOAFFPJ {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for BOENKOAFFPJ {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11BOENKOAFFPJ.proto\x1a\x16AssistSimpleInfo.proto\x1a\x11BPOEMOLJCCE\
    .proto\x1a\x11LPOLDCGKNGA.proto\"\xda\x03\n\x0bBOENKOAFFPJ\x123\n\x0bPAH\
    MIEIIAAI\x18\x01\x20\x03(\x0b2\x11.AssistSimpleInfoR\x0bPAHMIEIIAAI\x12.\
    \n\x0bOPMFPACCAIO\x18\x03\x20\x01(\x0e2\x0c.LPOLDCGKNGAR\x0bOPMFPACCAIO\
    \x12\x20\n\x0bEIFICNPAOIO\x18\x02\x20\x01(\rR\x0bEIFICNPAOIO\x12.\n\x0bN\
    EJJEFEOJOJ\x18\x04\x20\x01(\x0e2\x0c.BPOEMOLJCCER\x0bNEJJEFEOJOJ\x12\x20\
    \n\x0bMNDMHKPHCDA\x18\x07\x20\x01(\tR\x0bMNDMHKPHCDA\x12\x20\n\x0bBDLMCB\
    LJJCM\x18\r\x20\x01(\x08R\x0bBDLMCBLJJCM\x12\x14\n\x05level\x18\n\x20\
    \x01(\rR\x05level\x12\x20\n\x0bDBPCMPCLOCI\x18\x06\x20\x01(\tR\x0bDBPCMP\
    CLOCI\x12\x20\n\x0bNOFLJPFMNAK\x18\x0c\x20\x01(\x03R\x0bNOFLJPFMNAK\x12\
    \x10\n\x03uid\x18\x0e\x20\x01(\rR\x03uid\x12\x20\n\x0bFLFKCIHCENF\x18\
    \x05\x20\x01(\tR\x0bFLFKCIHCENF\x12\x20\n\x0bLOBIFHOJDMF\x18\x08\x20\x01\
    (\rR\x0bLOBIFHOJDMF\x12\x20\n\x0bHFHGPLMEFGJ\x18\x0b\x20\x01(\tR\x0bHFHG\
    PLMEFGJb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(3);
            deps.push(super::AssistSimpleInfo::file_descriptor().clone());
            deps.push(super::BPOEMOLJCCE::file_descriptor().clone());
            deps.push(super::LPOLDCGKNGA::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(BOENKOAFFPJ::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
