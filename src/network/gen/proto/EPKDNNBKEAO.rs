// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `EPKDNNBKEAO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:EPKDNNBKEAO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct EPKDNNBKEAO {
    // message fields
    // @@protoc_insertion_point(field:EPKDNNBKEAO.NHPGEOMCILN)
    pub NHPGEOMCILN: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.PPAEDKGDKDA)
    pub PPAEDKGDKDA: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.GNJIPBNHPHN)
    pub GNJIPBNHPHN: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.BKOGBKGNGGG)
    pub BKOGBKGNGGG: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.GMIHIIPECPA)
    pub GMIHIIPECPA: ::protobuf::MessageField<super::JJNDNJINJGH::JJNDNJINJGH>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.CCBAPDGIIIF)
    pub CCBAPDGIIIF: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.MKLPNKMKHND)
    pub MKLPNKMKHND: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.IOFAJFHFDKI)
    pub IOFAJFHFDKI: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.NEIFGPFAIPH)
    pub NEIFGPFAIPH: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.PJNENIKMPOI)
    pub PJNENIKMPOI: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.NPJJPHMOEIC)
    pub NPJJPHMOEIC: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.JIGKOPPBLCA)
    pub JIGKOPPBLCA: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.LKFNJAKABLB)
    pub LKFNJAKABLB: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.NCPMBJNEOFH)
    pub NCPMBJNEOFH: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.ABDENBLKHCE)
    pub ABDENBLKHCE: ::std::vec::Vec<super::HNPOMHNOJDP::HNPOMHNOJDP>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.FEAIANLIKLJ)
    pub FEAIANLIKLJ: ::std::vec::Vec<super::LCLCENKCILA::LCLCENKCILA>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.GJLLPNKHLGD)
    pub GJLLPNKHLGD: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.FEBHBLFMIOD)
    pub FEBHBLFMIOD: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.HFHFIKFJGOM)
    pub HFHFIKFJGOM: f64,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.CHPCDCNFJBF)
    pub CHPCDCNFJBF: ::protobuf::EnumOrUnknown<super::GKGFOBPMFPM::GKGFOBPMFPM>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.LFGKKOHHIGE)
    pub LFGKKOHHIGE: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.GKIBDAKHBOE)
    pub GKIBDAKHBOE: i32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.DLOCFNANKAI)
    pub DLOCFNANKAI: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.BLGKIOGOEID)
    pub BLGKIOGOEID: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.NNIIOEMFHCD)
    pub NNIIOEMFHCD: ::protobuf::EnumOrUnknown<super::LGJEDFGBAAP::LGJEDFGBAAP>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.ODDEPLIMDDD)
    pub ODDEPLIMDDD: ::std::vec::Vec<super::PJHNHAKOHMJ::PJHNHAKOHMJ>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.HLIOJKMADLM)
    pub HLIOJKMADLM: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.JOJCIMNCGMP)
    pub JOJCIMNCGMP: ::std::vec::Vec<super::EKPJFHOMDEJ::EKPJFHOMDEJ>,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.DJJNPCHOKLC)
    pub DJJNPCHOKLC: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.GBFLIHNNPED)
    pub GBFLIHNNPED: u32,
    // @@protoc_insertion_point(field:EPKDNNBKEAO.LKPOCLABGEE)
    pub LKPOCLABGEE: ::protobuf::EnumOrUnknown<super::DEGGBDOGEGG::DEGGBDOGEGG>,
    // special fields
    // @@protoc_insertion_point(special_field:EPKDNNBKEAO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a EPKDNNBKEAO {
    fn default() -> &'a EPKDNNBKEAO {
        <EPKDNNBKEAO as ::protobuf::Message>::default_instance()
    }
}

impl EPKDNNBKEAO {
    pub fn new() -> EPKDNNBKEAO {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(31);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NHPGEOMCILN",
            |m: &EPKDNNBKEAO| { &m.NHPGEOMCILN },
            |m: &mut EPKDNNBKEAO| { &mut m.NHPGEOMCILN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PPAEDKGDKDA",
            |m: &EPKDNNBKEAO| { &m.PPAEDKGDKDA },
            |m: &mut EPKDNNBKEAO| { &mut m.PPAEDKGDKDA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GNJIPBNHPHN",
            |m: &EPKDNNBKEAO| { &m.GNJIPBNHPHN },
            |m: &mut EPKDNNBKEAO| { &mut m.GNJIPBNHPHN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BKOGBKGNGGG",
            |m: &EPKDNNBKEAO| { &m.BKOGBKGNGGG },
            |m: &mut EPKDNNBKEAO| { &mut m.BKOGBKGNGGG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::JJNDNJINJGH::JJNDNJINJGH>(
            "GMIHIIPECPA",
            |m: &EPKDNNBKEAO| { &m.GMIHIIPECPA },
            |m: &mut EPKDNNBKEAO| { &mut m.GMIHIIPECPA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CCBAPDGIIIF",
            |m: &EPKDNNBKEAO| { &m.CCBAPDGIIIF },
            |m: &mut EPKDNNBKEAO| { &mut m.CCBAPDGIIIF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MKLPNKMKHND",
            |m: &EPKDNNBKEAO| { &m.MKLPNKMKHND },
            |m: &mut EPKDNNBKEAO| { &mut m.MKLPNKMKHND },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IOFAJFHFDKI",
            |m: &EPKDNNBKEAO| { &m.IOFAJFHFDKI },
            |m: &mut EPKDNNBKEAO| { &mut m.IOFAJFHFDKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NEIFGPFAIPH",
            |m: &EPKDNNBKEAO| { &m.NEIFGPFAIPH },
            |m: &mut EPKDNNBKEAO| { &mut m.NEIFGPFAIPH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PJNENIKMPOI",
            |m: &EPKDNNBKEAO| { &m.PJNENIKMPOI },
            |m: &mut EPKDNNBKEAO| { &mut m.PJNENIKMPOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NPJJPHMOEIC",
            |m: &EPKDNNBKEAO| { &m.NPJJPHMOEIC },
            |m: &mut EPKDNNBKEAO| { &mut m.NPJJPHMOEIC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIGKOPPBLCA",
            |m: &EPKDNNBKEAO| { &m.JIGKOPPBLCA },
            |m: &mut EPKDNNBKEAO| { &mut m.JIGKOPPBLCA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LKFNJAKABLB",
            |m: &EPKDNNBKEAO| { &m.LKFNJAKABLB },
            |m: &mut EPKDNNBKEAO| { &mut m.LKFNJAKABLB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NCPMBJNEOFH",
            |m: &EPKDNNBKEAO| { &m.NCPMBJNEOFH },
            |m: &mut EPKDNNBKEAO| { &mut m.NCPMBJNEOFH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "ABDENBLKHCE",
            |m: &EPKDNNBKEAO| { &m.ABDENBLKHCE },
            |m: &mut EPKDNNBKEAO| { &mut m.ABDENBLKHCE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FEAIANLIKLJ",
            |m: &EPKDNNBKEAO| { &m.FEAIANLIKLJ },
            |m: &mut EPKDNNBKEAO| { &mut m.FEAIANLIKLJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GJLLPNKHLGD",
            |m: &EPKDNNBKEAO| { &m.GJLLPNKHLGD },
            |m: &mut EPKDNNBKEAO| { &mut m.GJLLPNKHLGD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FEBHBLFMIOD",
            |m: &EPKDNNBKEAO| { &m.FEBHBLFMIOD },
            |m: &mut EPKDNNBKEAO| { &mut m.FEBHBLFMIOD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HFHFIKFJGOM",
            |m: &EPKDNNBKEAO| { &m.HFHFIKFJGOM },
            |m: &mut EPKDNNBKEAO| { &mut m.HFHFIKFJGOM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CHPCDCNFJBF",
            |m: &EPKDNNBKEAO| { &m.CHPCDCNFJBF },
            |m: &mut EPKDNNBKEAO| { &mut m.CHPCDCNFJBF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LFGKKOHHIGE",
            |m: &EPKDNNBKEAO| { &m.LFGKKOHHIGE },
            |m: &mut EPKDNNBKEAO| { &mut m.LFGKKOHHIGE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GKIBDAKHBOE",
            |m: &EPKDNNBKEAO| { &m.GKIBDAKHBOE },
            |m: &mut EPKDNNBKEAO| { &mut m.GKIBDAKHBOE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DLOCFNANKAI",
            |m: &EPKDNNBKEAO| { &m.DLOCFNANKAI },
            |m: &mut EPKDNNBKEAO| { &mut m.DLOCFNANKAI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BLGKIOGOEID",
            |m: &EPKDNNBKEAO| { &m.BLGKIOGOEID },
            |m: &mut EPKDNNBKEAO| { &mut m.BLGKIOGOEID },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NNIIOEMFHCD",
            |m: &EPKDNNBKEAO| { &m.NNIIOEMFHCD },
            |m: &mut EPKDNNBKEAO| { &mut m.NNIIOEMFHCD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "ODDEPLIMDDD",
            |m: &EPKDNNBKEAO| { &m.ODDEPLIMDDD },
            |m: &mut EPKDNNBKEAO| { &mut m.ODDEPLIMDDD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HLIOJKMADLM",
            |m: &EPKDNNBKEAO| { &m.HLIOJKMADLM },
            |m: &mut EPKDNNBKEAO| { &mut m.HLIOJKMADLM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "JOJCIMNCGMP",
            |m: &EPKDNNBKEAO| { &m.JOJCIMNCGMP },
            |m: &mut EPKDNNBKEAO| { &mut m.JOJCIMNCGMP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DJJNPCHOKLC",
            |m: &EPKDNNBKEAO| { &m.DJJNPCHOKLC },
            |m: &mut EPKDNNBKEAO| { &mut m.DJJNPCHOKLC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GBFLIHNNPED",
            |m: &EPKDNNBKEAO| { &m.GBFLIHNNPED },
            |m: &mut EPKDNNBKEAO| { &mut m.GBFLIHNNPED },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LKPOCLABGEE",
            |m: &EPKDNNBKEAO| { &m.LKPOCLABGEE },
            |m: &mut EPKDNNBKEAO| { &mut m.LKPOCLABGEE },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<EPKDNNBKEAO>(
            "EPKDNNBKEAO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for EPKDNNBKEAO {
    const NAME: &'static str = "EPKDNNBKEAO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.NHPGEOMCILN = is.read_uint32()?;
                },
                16 => {
                    self.PPAEDKGDKDA = is.read_uint32()?;
                },
                24 => {
                    self.GNJIPBNHPHN = is.read_uint32()?;
                },
                32 => {
                    self.BKOGBKGNGGG = is.read_uint32()?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.GMIHIIPECPA)?;
                },
                48 => {
                    self.CCBAPDGIIIF = is.read_uint32()?;
                },
                57 => {
                    self.MKLPNKMKHND = is.read_double()?;
                },
                65 => {
                    self.IOFAJFHFDKI = is.read_double()?;
                },
                73 => {
                    self.NEIFGPFAIPH = is.read_double()?;
                },
                81 => {
                    self.PJNENIKMPOI = is.read_double()?;
                },
                89 => {
                    self.NPJJPHMOEIC = is.read_double()?;
                },
                96 => {
                    self.JIGKOPPBLCA = is.read_uint32()?;
                },
                104 => {
                    self.LKFNJAKABLB = is.read_uint32()?;
                },
                112 => {
                    self.NCPMBJNEOFH = is.read_uint32()?;
                },
                122 => {
                    self.ABDENBLKHCE.push(is.read_message()?);
                },
                130 => {
                    self.FEAIANLIKLJ.push(is.read_message()?);
                },
                136 => {
                    self.GJLLPNKHLGD = is.read_uint32()?;
                },
                145 => {
                    self.FEBHBLFMIOD = is.read_double()?;
                },
                153 => {
                    self.HFHFIKFJGOM = is.read_double()?;
                },
                160 => {
                    self.CHPCDCNFJBF = is.read_enum_or_unknown()?;
                },
                168 => {
                    self.LFGKKOHHIGE = is.read_uint32()?;
                },
                176 => {
                    self.GKIBDAKHBOE = is.read_int32()?;
                },
                184 => {
                    self.DLOCFNANKAI = is.read_uint32()?;
                },
                192 => {
                    self.BLGKIOGOEID = is.read_uint32()?;
                },
                200 => {
                    self.NNIIOEMFHCD = is.read_enum_or_unknown()?;
                },
                210 => {
                    self.ODDEPLIMDDD.push(is.read_message()?);
                },
                216 => {
                    self.HLIOJKMADLM = is.read_uint32()?;
                },
                226 => {
                    self.JOJCIMNCGMP.push(is.read_message()?);
                },
                232 => {
                    self.DJJNPCHOKLC = is.read_uint32()?;
                },
                240 => {
                    self.GBFLIHNNPED = is.read_uint32()?;
                },
                248 => {
                    self.LKPOCLABGEE = is.read_enum_or_unknown()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.NHPGEOMCILN != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.NHPGEOMCILN);
        }
        if self.PPAEDKGDKDA != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.PPAEDKGDKDA);
        }
        if self.GNJIPBNHPHN != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.GNJIPBNHPHN);
        }
        if self.BKOGBKGNGGG != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.BKOGBKGNGGG);
        }
        if let Some(v) = self.GMIHIIPECPA.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.CCBAPDGIIIF != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.CCBAPDGIIIF);
        }
        if self.MKLPNKMKHND != 0. {
            my_size += 1 + 8;
        }
        if self.IOFAJFHFDKI != 0. {
            my_size += 1 + 8;
        }
        if self.NEIFGPFAIPH != 0. {
            my_size += 1 + 8;
        }
        if self.PJNENIKMPOI != 0. {
            my_size += 1 + 8;
        }
        if self.NPJJPHMOEIC != 0. {
            my_size += 1 + 8;
        }
        if self.JIGKOPPBLCA != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.JIGKOPPBLCA);
        }
        if self.LKFNJAKABLB != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.LKFNJAKABLB);
        }
        if self.NCPMBJNEOFH != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.NCPMBJNEOFH);
        }
        for value in &self.ABDENBLKHCE {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.FEAIANLIKLJ {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.GJLLPNKHLGD != 0 {
            my_size += ::protobuf::rt::uint32_size(17, self.GJLLPNKHLGD);
        }
        if self.FEBHBLFMIOD != 0. {
            my_size += 2 + 8;
        }
        if self.HFHFIKFJGOM != 0. {
            my_size += 2 + 8;
        }
        if self.CHPCDCNFJBF != ::protobuf::EnumOrUnknown::new(super::GKGFOBPMFPM::GKGFOBPMFPM::UNKNOWN) {
            my_size += ::protobuf::rt::int32_size(20, self.CHPCDCNFJBF.value());
        }
        if self.LFGKKOHHIGE != 0 {
            my_size += ::protobuf::rt::uint32_size(21, self.LFGKKOHHIGE);
        }
        if self.GKIBDAKHBOE != 0 {
            my_size += ::protobuf::rt::int32_size(22, self.GKIBDAKHBOE);
        }
        if self.DLOCFNANKAI != 0 {
            my_size += ::protobuf::rt::uint32_size(23, self.DLOCFNANKAI);
        }
        if self.BLGKIOGOEID != 0 {
            my_size += ::protobuf::rt::uint32_size(24, self.BLGKIOGOEID);
        }
        if self.NNIIOEMFHCD != ::protobuf::EnumOrUnknown::new(super::LGJEDFGBAAP::LGJEDFGBAAP::TAG_NONE) {
            my_size += ::protobuf::rt::int32_size(25, self.NNIIOEMFHCD.value());
        }
        for value in &self.ODDEPLIMDDD {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.HLIOJKMADLM != 0 {
            my_size += ::protobuf::rt::uint32_size(27, self.HLIOJKMADLM);
        }
        for value in &self.JOJCIMNCGMP {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.DJJNPCHOKLC != 0 {
            my_size += ::protobuf::rt::uint32_size(29, self.DJJNPCHOKLC);
        }
        if self.GBFLIHNNPED != 0 {
            my_size += ::protobuf::rt::uint32_size(30, self.GBFLIHNNPED);
        }
        if self.LKPOCLABGEE != ::protobuf::EnumOrUnknown::new(super::DEGGBDOGEGG::DEGGBDOGEGG::NORMAL_CREATE) {
            my_size += ::protobuf::rt::int32_size(31, self.LKPOCLABGEE.value());
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.NHPGEOMCILN != 0 {
            os.write_uint32(1, self.NHPGEOMCILN)?;
        }
        if self.PPAEDKGDKDA != 0 {
            os.write_uint32(2, self.PPAEDKGDKDA)?;
        }
        if self.GNJIPBNHPHN != 0 {
            os.write_uint32(3, self.GNJIPBNHPHN)?;
        }
        if self.BKOGBKGNGGG != 0 {
            os.write_uint32(4, self.BKOGBKGNGGG)?;
        }
        if let Some(v) = self.GMIHIIPECPA.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if self.CCBAPDGIIIF != 0 {
            os.write_uint32(6, self.CCBAPDGIIIF)?;
        }
        if self.MKLPNKMKHND != 0. {
            os.write_double(7, self.MKLPNKMKHND)?;
        }
        if self.IOFAJFHFDKI != 0. {
            os.write_double(8, self.IOFAJFHFDKI)?;
        }
        if self.NEIFGPFAIPH != 0. {
            os.write_double(9, self.NEIFGPFAIPH)?;
        }
        if self.PJNENIKMPOI != 0. {
            os.write_double(10, self.PJNENIKMPOI)?;
        }
        if self.NPJJPHMOEIC != 0. {
            os.write_double(11, self.NPJJPHMOEIC)?;
        }
        if self.JIGKOPPBLCA != 0 {
            os.write_uint32(12, self.JIGKOPPBLCA)?;
        }
        if self.LKFNJAKABLB != 0 {
            os.write_uint32(13, self.LKFNJAKABLB)?;
        }
        if self.NCPMBJNEOFH != 0 {
            os.write_uint32(14, self.NCPMBJNEOFH)?;
        }
        for v in &self.ABDENBLKHCE {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        };
        for v in &self.FEAIANLIKLJ {
            ::protobuf::rt::write_message_field_with_cached_size(16, v, os)?;
        };
        if self.GJLLPNKHLGD != 0 {
            os.write_uint32(17, self.GJLLPNKHLGD)?;
        }
        if self.FEBHBLFMIOD != 0. {
            os.write_double(18, self.FEBHBLFMIOD)?;
        }
        if self.HFHFIKFJGOM != 0. {
            os.write_double(19, self.HFHFIKFJGOM)?;
        }
        if self.CHPCDCNFJBF != ::protobuf::EnumOrUnknown::new(super::GKGFOBPMFPM::GKGFOBPMFPM::UNKNOWN) {
            os.write_enum(20, ::protobuf::EnumOrUnknown::value(&self.CHPCDCNFJBF))?;
        }
        if self.LFGKKOHHIGE != 0 {
            os.write_uint32(21, self.LFGKKOHHIGE)?;
        }
        if self.GKIBDAKHBOE != 0 {
            os.write_int32(22, self.GKIBDAKHBOE)?;
        }
        if self.DLOCFNANKAI != 0 {
            os.write_uint32(23, self.DLOCFNANKAI)?;
        }
        if self.BLGKIOGOEID != 0 {
            os.write_uint32(24, self.BLGKIOGOEID)?;
        }
        if self.NNIIOEMFHCD != ::protobuf::EnumOrUnknown::new(super::LGJEDFGBAAP::LGJEDFGBAAP::TAG_NONE) {
            os.write_enum(25, ::protobuf::EnumOrUnknown::value(&self.NNIIOEMFHCD))?;
        }
        for v in &self.ODDEPLIMDDD {
            ::protobuf::rt::write_message_field_with_cached_size(26, v, os)?;
        };
        if self.HLIOJKMADLM != 0 {
            os.write_uint32(27, self.HLIOJKMADLM)?;
        }
        for v in &self.JOJCIMNCGMP {
            ::protobuf::rt::write_message_field_with_cached_size(28, v, os)?;
        };
        if self.DJJNPCHOKLC != 0 {
            os.write_uint32(29, self.DJJNPCHOKLC)?;
        }
        if self.GBFLIHNNPED != 0 {
            os.write_uint32(30, self.GBFLIHNNPED)?;
        }
        if self.LKPOCLABGEE != ::protobuf::EnumOrUnknown::new(super::DEGGBDOGEGG::DEGGBDOGEGG::NORMAL_CREATE) {
            os.write_enum(31, ::protobuf::EnumOrUnknown::value(&self.LKPOCLABGEE))?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> EPKDNNBKEAO {
        EPKDNNBKEAO::new()
    }

    fn clear(&mut self) {
        self.NHPGEOMCILN = 0;
        self.PPAEDKGDKDA = 0;
        self.GNJIPBNHPHN = 0;
        self.BKOGBKGNGGG = 0;
        self.GMIHIIPECPA.clear();
        self.CCBAPDGIIIF = 0;
        self.MKLPNKMKHND = 0.;
        self.IOFAJFHFDKI = 0.;
        self.NEIFGPFAIPH = 0.;
        self.PJNENIKMPOI = 0.;
        self.NPJJPHMOEIC = 0.;
        self.JIGKOPPBLCA = 0;
        self.LKFNJAKABLB = 0;
        self.NCPMBJNEOFH = 0;
        self.ABDENBLKHCE.clear();
        self.FEAIANLIKLJ.clear();
        self.GJLLPNKHLGD = 0;
        self.FEBHBLFMIOD = 0.;
        self.HFHFIKFJGOM = 0.;
        self.CHPCDCNFJBF = ::protobuf::EnumOrUnknown::new(super::GKGFOBPMFPM::GKGFOBPMFPM::UNKNOWN);
        self.LFGKKOHHIGE = 0;
        self.GKIBDAKHBOE = 0;
        self.DLOCFNANKAI = 0;
        self.BLGKIOGOEID = 0;
        self.NNIIOEMFHCD = ::protobuf::EnumOrUnknown::new(super::LGJEDFGBAAP::LGJEDFGBAAP::TAG_NONE);
        self.ODDEPLIMDDD.clear();
        self.HLIOJKMADLM = 0;
        self.JOJCIMNCGMP.clear();
        self.DJJNPCHOKLC = 0;
        self.GBFLIHNNPED = 0;
        self.LKPOCLABGEE = ::protobuf::EnumOrUnknown::new(super::DEGGBDOGEGG::DEGGBDOGEGG::NORMAL_CREATE);
        self.special_fields.clear();
    }

    fn default_instance() -> &'static EPKDNNBKEAO {
        static instance: EPKDNNBKEAO = EPKDNNBKEAO {
            NHPGEOMCILN: 0,
            PPAEDKGDKDA: 0,
            GNJIPBNHPHN: 0,
            BKOGBKGNGGG: 0,
            GMIHIIPECPA: ::protobuf::MessageField::none(),
            CCBAPDGIIIF: 0,
            MKLPNKMKHND: 0.,
            IOFAJFHFDKI: 0.,
            NEIFGPFAIPH: 0.,
            PJNENIKMPOI: 0.,
            NPJJPHMOEIC: 0.,
            JIGKOPPBLCA: 0,
            LKFNJAKABLB: 0,
            NCPMBJNEOFH: 0,
            ABDENBLKHCE: ::std::vec::Vec::new(),
            FEAIANLIKLJ: ::std::vec::Vec::new(),
            GJLLPNKHLGD: 0,
            FEBHBLFMIOD: 0.,
            HFHFIKFJGOM: 0.,
            CHPCDCNFJBF: ::protobuf::EnumOrUnknown::from_i32(0),
            LFGKKOHHIGE: 0,
            GKIBDAKHBOE: 0,
            DLOCFNANKAI: 0,
            BLGKIOGOEID: 0,
            NNIIOEMFHCD: ::protobuf::EnumOrUnknown::from_i32(0),
            ODDEPLIMDDD: ::std::vec::Vec::new(),
            HLIOJKMADLM: 0,
            JOJCIMNCGMP: ::std::vec::Vec::new(),
            DJJNPCHOKLC: 0,
            GBFLIHNNPED: 0,
            LKPOCLABGEE: ::protobuf::EnumOrUnknown::from_i32(0),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for EPKDNNBKEAO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("EPKDNNBKEAO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for EPKDNNBKEAO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for EPKDNNBKEAO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11EPKDNNBKEAO.proto\x1a\x11DEGGBDOGEGG.proto\x1a\x11EKPJFHOMDEJ.prot\
    o\x1a\x11GKGFOBPMFPM.proto\x1a\x11HNPOMHNOJDP.proto\x1a\x11JJNDNJINJGH.p\
    roto\x1a\x11LCLCENKCILA.proto\x1a\x11LGJEDFGBAAP.proto\x1a\x11PJHNHAKOHM\
    J.proto\"\x9b\t\n\x0bEPKDNNBKEAO\x12\x20\n\x0bNHPGEOMCILN\x18\x01\x20\
    \x01(\rR\x0bNHPGEOMCILN\x12\x20\n\x0bPPAEDKGDKDA\x18\x02\x20\x01(\rR\x0b\
    PPAEDKGDKDA\x12\x20\n\x0bGNJIPBNHPHN\x18\x03\x20\x01(\rR\x0bGNJIPBNHPHN\
    \x12\x20\n\x0bBKOGBKGNGGG\x18\x04\x20\x01(\rR\x0bBKOGBKGNGGG\x12.\n\x0bG\
    MIHIIPECPA\x18\x05\x20\x01(\x0b2\x0c.JJNDNJINJGHR\x0bGMIHIIPECPA\x12\x20\
    \n\x0bCCBAPDGIIIF\x18\x06\x20\x01(\rR\x0bCCBAPDGIIIF\x12\x20\n\x0bMKLPNK\
    MKHND\x18\x07\x20\x01(\x01R\x0bMKLPNKMKHND\x12\x20\n\x0bIOFAJFHFDKI\x18\
    \x08\x20\x01(\x01R\x0bIOFAJFHFDKI\x12\x20\n\x0bNEIFGPFAIPH\x18\t\x20\x01\
    (\x01R\x0bNEIFGPFAIPH\x12\x20\n\x0bPJNENIKMPOI\x18\n\x20\x01(\x01R\x0bPJ\
    NENIKMPOI\x12\x20\n\x0bNPJJPHMOEIC\x18\x0b\x20\x01(\x01R\x0bNPJJPHMOEIC\
    \x12\x20\n\x0bJIGKOPPBLCA\x18\x0c\x20\x01(\rR\x0bJIGKOPPBLCA\x12\x20\n\
    \x0bLKFNJAKABLB\x18\r\x20\x01(\rR\x0bLKFNJAKABLB\x12\x20\n\x0bNCPMBJNEOF\
    H\x18\x0e\x20\x01(\rR\x0bNCPMBJNEOFH\x12.\n\x0bABDENBLKHCE\x18\x0f\x20\
    \x03(\x0b2\x0c.HNPOMHNOJDPR\x0bABDENBLKHCE\x12.\n\x0bFEAIANLIKLJ\x18\x10\
    \x20\x03(\x0b2\x0c.LCLCENKCILAR\x0bFEAIANLIKLJ\x12\x20\n\x0bGJLLPNKHLGD\
    \x18\x11\x20\x01(\rR\x0bGJLLPNKHLGD\x12\x20\n\x0bFEBHBLFMIOD\x18\x12\x20\
    \x01(\x01R\x0bFEBHBLFMIOD\x12\x20\n\x0bHFHFIKFJGOM\x18\x13\x20\x01(\x01R\
    \x0bHFHFIKFJGOM\x12.\n\x0bCHPCDCNFJBF\x18\x14\x20\x01(\x0e2\x0c.GKGFOBPM\
    FPMR\x0bCHPCDCNFJBF\x12\x20\n\x0bLFGKKOHHIGE\x18\x15\x20\x01(\rR\x0bLFGK\
    KOHHIGE\x12\x20\n\x0bGKIBDAKHBOE\x18\x16\x20\x01(\x05R\x0bGKIBDAKHBOE\
    \x12\x20\n\x0bDLOCFNANKAI\x18\x17\x20\x01(\rR\x0bDLOCFNANKAI\x12\x20\n\
    \x0bBLGKIOGOEID\x18\x18\x20\x01(\rR\x0bBLGKIOGOEID\x12.\n\x0bNNIIOEMFHCD\
    \x18\x19\x20\x01(\x0e2\x0c.LGJEDFGBAAPR\x0bNNIIOEMFHCD\x12.\n\x0bODDEPLI\
    MDDD\x18\x1a\x20\x03(\x0b2\x0c.PJHNHAKOHMJR\x0bODDEPLIMDDD\x12\x20\n\x0b\
    HLIOJKMADLM\x18\x1b\x20\x01(\rR\x0bHLIOJKMADLM\x12.\n\x0bJOJCIMNCGMP\x18\
    \x1c\x20\x03(\x0b2\x0c.EKPJFHOMDEJR\x0bJOJCIMNCGMP\x12\x20\n\x0bDJJNPCHO\
    KLC\x18\x1d\x20\x01(\rR\x0bDJJNPCHOKLC\x12\x20\n\x0bGBFLIHNNPED\x18\x1e\
    \x20\x01(\rR\x0bGBFLIHNNPED\x12.\n\x0bLKPOCLABGEE\x18\x1f\x20\x01(\x0e2\
    \x0c.DEGGBDOGEGGR\x0bLKPOCLABGEEb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(8);
            deps.push(super::DEGGBDOGEGG::file_descriptor().clone());
            deps.push(super::EKPJFHOMDEJ::file_descriptor().clone());
            deps.push(super::GKGFOBPMFPM::file_descriptor().clone());
            deps.push(super::HNPOMHNOJDP::file_descriptor().clone());
            deps.push(super::JJNDNJINJGH::file_descriptor().clone());
            deps.push(super::LCLCENKCILA::file_descriptor().clone());
            deps.push(super::LGJEDFGBAAP::file_descriptor().clone());
            deps.push(super::PJHNHAKOHMJ::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(EPKDNNBKEAO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
