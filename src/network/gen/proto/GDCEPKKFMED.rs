// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `GDCEPKKFMED.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:GDCEPKKFMED)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct GDCEPKKFMED {
    // message fields
    // @@protoc_insertion_point(field:GDCEPKKFMED.PFKFGBKPBAJ)
    pub PFKFGBKPBAJ: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.LBNOMOIJKGA)
    pub LBNOMOIJKGA: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.JIGKOPPBLCA)
    pub JIGKOPPBLCA: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.IIBAHAEAEEB)
    pub IIBAHAEAEEB: ::protobuf::MessageField<super::GPFMOLBINHI::GPFMOLBINHI>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.PKBFAGGNGLE)
    pub PKBFAGGNGLE: ::std::vec::Vec<super::MLLIHAFDLNI::MLLIHAFDLNI>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.IOAHDINJFDM)
    pub IOAHDINJFDM: ::std::vec::Vec<u8>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.LGHOPMLCAKA)
    pub LGHOPMLCAKA: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.ONPDNGIDPML)
    pub ONPDNGIDPML: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.GDIKNOBMEAM)
    pub GDIKNOBMEAM: bool,
    // @@protoc_insertion_point(field:GDCEPKKFMED.NDIDIOGOMOI)
    pub NDIDIOGOMOI: ::protobuf::EnumOrUnknown<super::GGOONFDPNGE::GGOONFDPNGE>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.MGOANDHKKBL)
    pub MGOANDHKKBL: ::protobuf::EnumOrUnknown<super::BattleModuleType::BattleModuleType>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.DFIOAPDAJAI)
    pub DFIOAPDAJAI: ::std::vec::Vec<super::PPPOCCACKFK::PPPOCCACKFK>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.FJGJIIHPCPN)
    pub FJGJIIHPCPN: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.JFOPEOKMJDM)
    pub JFOPEOKMJDM: ::protobuf::MessageField<super::BOHENMMFCAI::BOHENMMFCAI>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.ICPPMBDBEMB)
    pub ICPPMBDBEMB: ::std::vec::Vec<u8>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.GOHCIBDGPEL)
    pub GOHCIBDGPEL: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.MAKIGFEMKNM)
    pub MAKIGFEMKNM: u32,
    // @@protoc_insertion_point(field:GDCEPKKFMED.OFCBEEHLIIL)
    pub OFCBEEHLIIL: ::protobuf::MessageField<super::JPNEEBPMHID::JPNEEBPMHID>,
    // @@protoc_insertion_point(field:GDCEPKKFMED.MAEIPFDFDCO)
    pub MAEIPFDFDCO: ::protobuf::MessageField<super::GNKEPMFPBAJ::GNKEPMFPBAJ>,
    // special fields
    // @@protoc_insertion_point(special_field:GDCEPKKFMED.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a GDCEPKKFMED {
    fn default() -> &'a GDCEPKKFMED {
        <GDCEPKKFMED as ::protobuf::Message>::default_instance()
    }
}

impl GDCEPKKFMED {
    pub fn new() -> GDCEPKKFMED {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(19);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PFKFGBKPBAJ",
            |m: &GDCEPKKFMED| { &m.PFKFGBKPBAJ },
            |m: &mut GDCEPKKFMED| { &mut m.PFKFGBKPBAJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LBNOMOIJKGA",
            |m: &GDCEPKKFMED| { &m.LBNOMOIJKGA },
            |m: &mut GDCEPKKFMED| { &mut m.LBNOMOIJKGA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIGKOPPBLCA",
            |m: &GDCEPKKFMED| { &m.JIGKOPPBLCA },
            |m: &mut GDCEPKKFMED| { &mut m.JIGKOPPBLCA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GPFMOLBINHI::GPFMOLBINHI>(
            "IIBAHAEAEEB",
            |m: &GDCEPKKFMED| { &m.IIBAHAEAEEB },
            |m: &mut GDCEPKKFMED| { &mut m.IIBAHAEAEEB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PKBFAGGNGLE",
            |m: &GDCEPKKFMED| { &m.PKBFAGGNGLE },
            |m: &mut GDCEPKKFMED| { &mut m.PKBFAGGNGLE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IOAHDINJFDM",
            |m: &GDCEPKKFMED| { &m.IOAHDINJFDM },
            |m: &mut GDCEPKKFMED| { &mut m.IOAHDINJFDM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LGHOPMLCAKA",
            |m: &GDCEPKKFMED| { &m.LGHOPMLCAKA },
            |m: &mut GDCEPKKFMED| { &mut m.LGHOPMLCAKA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "ONPDNGIDPML",
            |m: &GDCEPKKFMED| { &m.ONPDNGIDPML },
            |m: &mut GDCEPKKFMED| { &mut m.ONPDNGIDPML },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GDIKNOBMEAM",
            |m: &GDCEPKKFMED| { &m.GDIKNOBMEAM },
            |m: &mut GDCEPKKFMED| { &mut m.GDIKNOBMEAM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NDIDIOGOMOI",
            |m: &GDCEPKKFMED| { &m.NDIDIOGOMOI },
            |m: &mut GDCEPKKFMED| { &mut m.NDIDIOGOMOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MGOANDHKKBL",
            |m: &GDCEPKKFMED| { &m.MGOANDHKKBL },
            |m: &mut GDCEPKKFMED| { &mut m.MGOANDHKKBL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "DFIOAPDAJAI",
            |m: &GDCEPKKFMED| { &m.DFIOAPDAJAI },
            |m: &mut GDCEPKKFMED| { &mut m.DFIOAPDAJAI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FJGJIIHPCPN",
            |m: &GDCEPKKFMED| { &m.FJGJIIHPCPN },
            |m: &mut GDCEPKKFMED| { &mut m.FJGJIIHPCPN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BOHENMMFCAI::BOHENMMFCAI>(
            "JFOPEOKMJDM",
            |m: &GDCEPKKFMED| { &m.JFOPEOKMJDM },
            |m: &mut GDCEPKKFMED| { &mut m.JFOPEOKMJDM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ICPPMBDBEMB",
            |m: &GDCEPKKFMED| { &m.ICPPMBDBEMB },
            |m: &mut GDCEPKKFMED| { &mut m.ICPPMBDBEMB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GOHCIBDGPEL",
            |m: &GDCEPKKFMED| { &m.GOHCIBDGPEL },
            |m: &mut GDCEPKKFMED| { &mut m.GOHCIBDGPEL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MAKIGFEMKNM",
            |m: &GDCEPKKFMED| { &m.MAKIGFEMKNM },
            |m: &mut GDCEPKKFMED| { &mut m.MAKIGFEMKNM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::JPNEEBPMHID::JPNEEBPMHID>(
            "OFCBEEHLIIL",
            |m: &GDCEPKKFMED| { &m.OFCBEEHLIIL },
            |m: &mut GDCEPKKFMED| { &mut m.OFCBEEHLIIL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::GNKEPMFPBAJ::GNKEPMFPBAJ>(
            "MAEIPFDFDCO",
            |m: &GDCEPKKFMED| { &m.MAEIPFDFDCO },
            |m: &mut GDCEPKKFMED| { &mut m.MAEIPFDFDCO },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<GDCEPKKFMED>(
            "GDCEPKKFMED",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for GDCEPKKFMED {
    const NAME: &'static str = "GDCEPKKFMED";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.PFKFGBKPBAJ = is.read_uint32()?;
                },
                16 => {
                    self.LBNOMOIJKGA = is.read_uint32()?;
                },
                24 => {
                    self.JIGKOPPBLCA = is.read_uint32()?;
                },
                34 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IIBAHAEAEEB)?;
                },
                42 => {
                    self.PKBFAGGNGLE.push(is.read_message()?);
                },
                50 => {
                    self.IOAHDINJFDM = is.read_bytes()?;
                },
                56 => {
                    self.LGHOPMLCAKA = is.read_uint32()?;
                },
                66 => {
                    is.read_repeated_packed_uint32_into(&mut self.ONPDNGIDPML)?;
                },
                64 => {
                    self.ONPDNGIDPML.push(is.read_uint32()?);
                },
                72 => {
                    self.GDIKNOBMEAM = is.read_bool()?;
                },
                80 => {
                    self.NDIDIOGOMOI = is.read_enum_or_unknown()?;
                },
                88 => {
                    self.MGOANDHKKBL = is.read_enum_or_unknown()?;
                },
                98 => {
                    self.DFIOAPDAJAI.push(is.read_message()?);
                },
                112 => {
                    self.FJGJIIHPCPN = is.read_uint32()?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JFOPEOKMJDM)?;
                },
                130 => {
                    self.ICPPMBDBEMB = is.read_bytes()?;
                },
                136 => {
                    self.GOHCIBDGPEL = is.read_uint32()?;
                },
                144 => {
                    self.MAKIGFEMKNM = is.read_uint32()?;
                },
                154 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OFCBEEHLIIL)?;
                },
                802 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.MAEIPFDFDCO)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.PFKFGBKPBAJ != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.PFKFGBKPBAJ);
        }
        if self.LBNOMOIJKGA != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.LBNOMOIJKGA);
        }
        if self.JIGKOPPBLCA != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.JIGKOPPBLCA);
        }
        if let Some(v) = self.IIBAHAEAEEB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.PKBFAGGNGLE {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.IOAHDINJFDM.is_empty() {
            my_size += ::protobuf::rt::bytes_size(6, &self.IOAHDINJFDM);
        }
        if self.LGHOPMLCAKA != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.LGHOPMLCAKA);
        }
        for value in &self.ONPDNGIDPML {
            my_size += ::protobuf::rt::uint32_size(8, *value);
        };
        if self.GDIKNOBMEAM != false {
            my_size += 1 + 1;
        }
        if self.NDIDIOGOMOI != ::protobuf::EnumOrUnknown::new(super::GGOONFDPNGE::GGOONFDPNGE::BATTLE_CHECK_STRATEGY_IDENTICAL) {
            my_size += ::protobuf::rt::int32_size(10, self.NDIDIOGOMOI.value());
        }
        if self.MGOANDHKKBL != ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE) {
            my_size += ::protobuf::rt::int32_size(11, self.MGOANDHKKBL.value());
        }
        for value in &self.DFIOAPDAJAI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.FJGJIIHPCPN != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.FJGJIIHPCPN);
        }
        if let Some(v) = self.JFOPEOKMJDM.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if !self.ICPPMBDBEMB.is_empty() {
            my_size += ::protobuf::rt::bytes_size(16, &self.ICPPMBDBEMB);
        }
        if self.GOHCIBDGPEL != 0 {
            my_size += ::protobuf::rt::uint32_size(17, self.GOHCIBDGPEL);
        }
        if self.MAKIGFEMKNM != 0 {
            my_size += ::protobuf::rt::uint32_size(18, self.MAKIGFEMKNM);
        }
        if let Some(v) = self.OFCBEEHLIIL.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.MAEIPFDFDCO.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.PFKFGBKPBAJ != 0 {
            os.write_uint32(1, self.PFKFGBKPBAJ)?;
        }
        if self.LBNOMOIJKGA != 0 {
            os.write_uint32(2, self.LBNOMOIJKGA)?;
        }
        if self.JIGKOPPBLCA != 0 {
            os.write_uint32(3, self.JIGKOPPBLCA)?;
        }
        if let Some(v) = self.IIBAHAEAEEB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        }
        for v in &self.PKBFAGGNGLE {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        };
        if !self.IOAHDINJFDM.is_empty() {
            os.write_bytes(6, &self.IOAHDINJFDM)?;
        }
        if self.LGHOPMLCAKA != 0 {
            os.write_uint32(7, self.LGHOPMLCAKA)?;
        }
        for v in &self.ONPDNGIDPML {
            os.write_uint32(8, *v)?;
        };
        if self.GDIKNOBMEAM != false {
            os.write_bool(9, self.GDIKNOBMEAM)?;
        }
        if self.NDIDIOGOMOI != ::protobuf::EnumOrUnknown::new(super::GGOONFDPNGE::GGOONFDPNGE::BATTLE_CHECK_STRATEGY_IDENTICAL) {
            os.write_enum(10, ::protobuf::EnumOrUnknown::value(&self.NDIDIOGOMOI))?;
        }
        if self.MGOANDHKKBL != ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE) {
            os.write_enum(11, ::protobuf::EnumOrUnknown::value(&self.MGOANDHKKBL))?;
        }
        for v in &self.DFIOAPDAJAI {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.FJGJIIHPCPN != 0 {
            os.write_uint32(14, self.FJGJIIHPCPN)?;
        }
        if let Some(v) = self.JFOPEOKMJDM.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if !self.ICPPMBDBEMB.is_empty() {
            os.write_bytes(16, &self.ICPPMBDBEMB)?;
        }
        if self.GOHCIBDGPEL != 0 {
            os.write_uint32(17, self.GOHCIBDGPEL)?;
        }
        if self.MAKIGFEMKNM != 0 {
            os.write_uint32(18, self.MAKIGFEMKNM)?;
        }
        if let Some(v) = self.OFCBEEHLIIL.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(19, v, os)?;
        }
        if let Some(v) = self.MAEIPFDFDCO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(100, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> GDCEPKKFMED {
        GDCEPKKFMED::new()
    }

    fn clear(&mut self) {
        self.PFKFGBKPBAJ = 0;
        self.LBNOMOIJKGA = 0;
        self.JIGKOPPBLCA = 0;
        self.IIBAHAEAEEB.clear();
        self.PKBFAGGNGLE.clear();
        self.IOAHDINJFDM.clear();
        self.LGHOPMLCAKA = 0;
        self.ONPDNGIDPML.clear();
        self.GDIKNOBMEAM = false;
        self.NDIDIOGOMOI = ::protobuf::EnumOrUnknown::new(super::GGOONFDPNGE::GGOONFDPNGE::BATTLE_CHECK_STRATEGY_IDENTICAL);
        self.MGOANDHKKBL = ::protobuf::EnumOrUnknown::new(super::BattleModuleType::BattleModuleType::BATTLE_MODULE_MAZE);
        self.DFIOAPDAJAI.clear();
        self.FJGJIIHPCPN = 0;
        self.JFOPEOKMJDM.clear();
        self.ICPPMBDBEMB.clear();
        self.GOHCIBDGPEL = 0;
        self.MAKIGFEMKNM = 0;
        self.OFCBEEHLIIL.clear();
        self.MAEIPFDFDCO.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static GDCEPKKFMED {
        static instance: GDCEPKKFMED = GDCEPKKFMED {
            PFKFGBKPBAJ: 0,
            LBNOMOIJKGA: 0,
            JIGKOPPBLCA: 0,
            IIBAHAEAEEB: ::protobuf::MessageField::none(),
            PKBFAGGNGLE: ::std::vec::Vec::new(),
            IOAHDINJFDM: ::std::vec::Vec::new(),
            LGHOPMLCAKA: 0,
            ONPDNGIDPML: ::std::vec::Vec::new(),
            GDIKNOBMEAM: false,
            NDIDIOGOMOI: ::protobuf::EnumOrUnknown::from_i32(0),
            MGOANDHKKBL: ::protobuf::EnumOrUnknown::from_i32(0),
            DFIOAPDAJAI: ::std::vec::Vec::new(),
            FJGJIIHPCPN: 0,
            JFOPEOKMJDM: ::protobuf::MessageField::none(),
            ICPPMBDBEMB: ::std::vec::Vec::new(),
            GOHCIBDGPEL: 0,
            MAKIGFEMKNM: 0,
            OFCBEEHLIIL: ::protobuf::MessageField::none(),
            MAEIPFDFDCO: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for GDCEPKKFMED {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("GDCEPKKFMED").unwrap()).clone()
    }
}

impl ::std::fmt::Display for GDCEPKKFMED {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for GDCEPKKFMED {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11GDCEPKKFMED.proto\x1a\x11BOHENMMFCAI.proto\x1a\x16BattleModuleType\
    .proto\x1a\x11GGOONFDPNGE.proto\x1a\x11GNKEPMFPBAJ.proto\x1a\x11GPFMOLBI\
    NHI.proto\x1a\x11JPNEEBPMHID.proto\x1a\x11MLLIHAFDLNI.proto\x1a\x11PPPOC\
    CACKFK.proto\"\x88\x06\n\x0bGDCEPKKFMED\x12\x20\n\x0bPFKFGBKPBAJ\x18\x01\
    \x20\x01(\rR\x0bPFKFGBKPBAJ\x12\x20\n\x0bLBNOMOIJKGA\x18\x02\x20\x01(\rR\
    \x0bLBNOMOIJKGA\x12\x20\n\x0bJIGKOPPBLCA\x18\x03\x20\x01(\rR\x0bJIGKOPPB\
    LCA\x12.\n\x0bIIBAHAEAEEB\x18\x04\x20\x01(\x0b2\x0c.GPFMOLBINHIR\x0bIIBA\
    HAEAEEB\x12.\n\x0bPKBFAGGNGLE\x18\x05\x20\x03(\x0b2\x0c.MLLIHAFDLNIR\x0b\
    PKBFAGGNGLE\x12\x20\n\x0bIOAHDINJFDM\x18\x06\x20\x01(\x0cR\x0bIOAHDINJFD\
    M\x12\x20\n\x0bLGHOPMLCAKA\x18\x07\x20\x01(\rR\x0bLGHOPMLCAKA\x12\x20\n\
    \x0bONPDNGIDPML\x18\x08\x20\x03(\rR\x0bONPDNGIDPML\x12\x20\n\x0bGDIKNOBM\
    EAM\x18\t\x20\x01(\x08R\x0bGDIKNOBMEAM\x12.\n\x0bNDIDIOGOMOI\x18\n\x20\
    \x01(\x0e2\x0c.GGOONFDPNGER\x0bNDIDIOGOMOI\x123\n\x0bMGOANDHKKBL\x18\x0b\
    \x20\x01(\x0e2\x11.BattleModuleTypeR\x0bMGOANDHKKBL\x12.\n\x0bDFIOAPDAJA\
    I\x18\x0c\x20\x03(\x0b2\x0c.PPPOCCACKFKR\x0bDFIOAPDAJAI\x12\x20\n\x0bFJG\
    JIIHPCPN\x18\x0e\x20\x01(\rR\x0bFJGJIIHPCPN\x12.\n\x0bJFOPEOKMJDM\x18\
    \x0f\x20\x01(\x0b2\x0c.BOHENMMFCAIR\x0bJFOPEOKMJDM\x12\x20\n\x0bICPPMBDB\
    EMB\x18\x10\x20\x01(\x0cR\x0bICPPMBDBEMB\x12\x20\n\x0bGOHCIBDGPEL\x18\
    \x11\x20\x01(\rR\x0bGOHCIBDGPEL\x12\x20\n\x0bMAKIGFEMKNM\x18\x12\x20\x01\
    (\rR\x0bMAKIGFEMKNM\x12.\n\x0bOFCBEEHLIIL\x18\x13\x20\x01(\x0b2\x0c.JPNE\
    EBPMHIDR\x0bOFCBEEHLIIL\x12.\n\x0bMAEIPFDFDCO\x18d\x20\x01(\x0b2\x0c.GNK\
    EPMFPBAJR\x0bMAEIPFDFDCOb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(8);
            deps.push(super::BOHENMMFCAI::file_descriptor().clone());
            deps.push(super::BattleModuleType::file_descriptor().clone());
            deps.push(super::GGOONFDPNGE::file_descriptor().clone());
            deps.push(super::GNKEPMFPBAJ::file_descriptor().clone());
            deps.push(super::GPFMOLBINHI::file_descriptor().clone());
            deps.push(super::JPNEEBPMHID::file_descriptor().clone());
            deps.push(super::MLLIHAFDLNI::file_descriptor().clone());
            deps.push(super::PPPOCCACKFK::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(GDCEPKKFMED::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
