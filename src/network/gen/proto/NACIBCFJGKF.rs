// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `NACIBCFJGKF.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:NACIBCFJGKF)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct NACIBCFJGKF {
    // message fields
    // @@protoc_insertion_point(field:NACIBCFJGKF.IDAHGFAIIDE)
    pub IDAHGFAIIDE: ::std::vec::Vec<super::LCEFHIPLMKB::LCEFHIPLMKB>,
    // @@protoc_insertion_point(field:NACIBCFJGKF.PGHNJEPDMPC)
    pub PGHNJEPDMPC: ::std::vec::Vec<super::BLOEOEDIKAD::BLOEOEDIKAD>,
    // @@protoc_insertion_point(field:NACIBCFJGKF.GEFJFHDKKNN)
    pub GEFJFHDKKNN: u64,
    // @@protoc_insertion_point(field:NACIBCFJGKF.MHEGHLGLFCN)
    pub MHEGHLGLFCN: u32,
    // @@protoc_insertion_point(field:NACIBCFJGKF.AKKODGEMOAH)
    pub AKKODGEMOAH: u64,
    // @@protoc_insertion_point(field:NACIBCFJGKF.KGCCOKAJOAH)
    pub KGCCOKAJOAH: ::std::vec::Vec<super::LCEFHIPLMKB::LCEFHIPLMKB>,
    // @@protoc_insertion_point(field:NACIBCFJGKF.LGGFJDDAAEB)
    pub LGGFJDDAAEB: ::std::string::String,
    // @@protoc_insertion_point(field:NACIBCFJGKF.EEMKJPBEDBC)
    pub EEMKJPBEDBC: bool,
    // @@protoc_insertion_point(field:NACIBCFJGKF.FACLNPLLHLG)
    pub FACLNPLLHLG: u32,
    // @@protoc_insertion_point(field:NACIBCFJGKF.LDNNCKLPDOI)
    pub LDNNCKLPDOI: ::std::vec::Vec<super::LCEFHIPLMKB::LCEFHIPLMKB>,
    // @@protoc_insertion_point(field:NACIBCFJGKF.FHMDALHDFAF)
    pub FHMDALHDFAF: ::std::string::String,
    // @@protoc_insertion_point(field:NACIBCFJGKF.GNGAFHELLPB)
    pub GNGAFHELLPB: u32,
    // @@protoc_insertion_point(field:NACIBCFJGKF.NLEPAJBHOGL)
    pub NLEPAJBHOGL: u32,
    // @@protoc_insertion_point(field:NACIBCFJGKF.MBPFJACGBAG)
    pub MBPFJACGBAG: ::std::vec::Vec<super::LCEFHIPLMKB::LCEFHIPLMKB>,
    // @@protoc_insertion_point(field:NACIBCFJGKF.OIENLLIHDAB)
    pub OIENLLIHDAB: u32,
    // @@protoc_insertion_point(field:NACIBCFJGKF.AJNNAALMIFL)
    pub AJNNAALMIFL: u64,
    // @@protoc_insertion_point(field:NACIBCFJGKF.OJKDDPBKEEN)
    pub OJKDDPBKEEN: ::std::string::String,
    // @@protoc_insertion_point(field:NACIBCFJGKF.FCEJJHLCOIM)
    pub FCEJJHLCOIM: u32,
    // special fields
    // @@protoc_insertion_point(special_field:NACIBCFJGKF.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a NACIBCFJGKF {
    fn default() -> &'a NACIBCFJGKF {
        <NACIBCFJGKF as ::protobuf::Message>::default_instance()
    }
}

impl NACIBCFJGKF {
    pub fn new() -> NACIBCFJGKF {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "IDAHGFAIIDE",
            |m: &NACIBCFJGKF| { &m.IDAHGFAIIDE },
            |m: &mut NACIBCFJGKF| { &mut m.IDAHGFAIIDE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PGHNJEPDMPC",
            |m: &NACIBCFJGKF| { &m.PGHNJEPDMPC },
            |m: &mut NACIBCFJGKF| { &mut m.PGHNJEPDMPC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GEFJFHDKKNN",
            |m: &NACIBCFJGKF| { &m.GEFJFHDKKNN },
            |m: &mut NACIBCFJGKF| { &mut m.GEFJFHDKKNN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MHEGHLGLFCN",
            |m: &NACIBCFJGKF| { &m.MHEGHLGLFCN },
            |m: &mut NACIBCFJGKF| { &mut m.MHEGHLGLFCN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AKKODGEMOAH",
            |m: &NACIBCFJGKF| { &m.AKKODGEMOAH },
            |m: &mut NACIBCFJGKF| { &mut m.AKKODGEMOAH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KGCCOKAJOAH",
            |m: &NACIBCFJGKF| { &m.KGCCOKAJOAH },
            |m: &mut NACIBCFJGKF| { &mut m.KGCCOKAJOAH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LGGFJDDAAEB",
            |m: &NACIBCFJGKF| { &m.LGGFJDDAAEB },
            |m: &mut NACIBCFJGKF| { &mut m.LGGFJDDAAEB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EEMKJPBEDBC",
            |m: &NACIBCFJGKF| { &m.EEMKJPBEDBC },
            |m: &mut NACIBCFJGKF| { &mut m.EEMKJPBEDBC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FACLNPLLHLG",
            |m: &NACIBCFJGKF| { &m.FACLNPLLHLG },
            |m: &mut NACIBCFJGKF| { &mut m.FACLNPLLHLG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LDNNCKLPDOI",
            |m: &NACIBCFJGKF| { &m.LDNNCKLPDOI },
            |m: &mut NACIBCFJGKF| { &mut m.LDNNCKLPDOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FHMDALHDFAF",
            |m: &NACIBCFJGKF| { &m.FHMDALHDFAF },
            |m: &mut NACIBCFJGKF| { &mut m.FHMDALHDFAF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GNGAFHELLPB",
            |m: &NACIBCFJGKF| { &m.GNGAFHELLPB },
            |m: &mut NACIBCFJGKF| { &mut m.GNGAFHELLPB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NLEPAJBHOGL",
            |m: &NACIBCFJGKF| { &m.NLEPAJBHOGL },
            |m: &mut NACIBCFJGKF| { &mut m.NLEPAJBHOGL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "MBPFJACGBAG",
            |m: &NACIBCFJGKF| { &m.MBPFJACGBAG },
            |m: &mut NACIBCFJGKF| { &mut m.MBPFJACGBAG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OIENLLIHDAB",
            |m: &NACIBCFJGKF| { &m.OIENLLIHDAB },
            |m: &mut NACIBCFJGKF| { &mut m.OIENLLIHDAB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AJNNAALMIFL",
            |m: &NACIBCFJGKF| { &m.AJNNAALMIFL },
            |m: &mut NACIBCFJGKF| { &mut m.AJNNAALMIFL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OJKDDPBKEEN",
            |m: &NACIBCFJGKF| { &m.OJKDDPBKEEN },
            |m: &mut NACIBCFJGKF| { &mut m.OJKDDPBKEEN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FCEJJHLCOIM",
            |m: &NACIBCFJGKF| { &m.FCEJJHLCOIM },
            |m: &mut NACIBCFJGKF| { &mut m.FCEJJHLCOIM },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<NACIBCFJGKF>(
            "NACIBCFJGKF",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for NACIBCFJGKF {
    const NAME: &'static str = "NACIBCFJGKF";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                114 => {
                    self.IDAHGFAIIDE.push(is.read_message()?);
                },
                98 => {
                    self.PGHNJEPDMPC.push(is.read_message()?);
                },
                64 => {
                    self.GEFJFHDKKNN = is.read_uint64()?;
                },
                56 => {
                    self.MHEGHLGLFCN = is.read_uint32()?;
                },
                80 => {
                    self.AKKODGEMOAH = is.read_uint64()?;
                },
                42 => {
                    self.KGCCOKAJOAH.push(is.read_message()?);
                },
                15690 => {
                    self.LGGFJDDAAEB = is.read_string()?;
                },
                48 => {
                    self.EEMKJPBEDBC = is.read_bool()?;
                },
                104 => {
                    self.FACLNPLLHLG = is.read_uint32()?;
                },
                26 => {
                    self.LDNNCKLPDOI.push(is.read_message()?);
                },
                6154 => {
                    self.FHMDALHDFAF = is.read_string()?;
                },
                8 => {
                    self.GNGAFHELLPB = is.read_uint32()?;
                },
                72 => {
                    self.NLEPAJBHOGL = is.read_uint32()?;
                },
                34 => {
                    self.MBPFJACGBAG.push(is.read_message()?);
                },
                16 => {
                    self.OIENLLIHDAB = is.read_uint32()?;
                },
                120 => {
                    self.AJNNAALMIFL = is.read_uint64()?;
                },
                12658 => {
                    self.OJKDDPBKEEN = is.read_string()?;
                },
                88 => {
                    self.FCEJJHLCOIM = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.IDAHGFAIIDE {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.PGHNJEPDMPC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.GEFJFHDKKNN != 0 {
            my_size += ::protobuf::rt::uint64_size(8, self.GEFJFHDKKNN);
        }
        if self.MHEGHLGLFCN != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.MHEGHLGLFCN);
        }
        if self.AKKODGEMOAH != 0 {
            my_size += ::protobuf::rt::uint64_size(10, self.AKKODGEMOAH);
        }
        for value in &self.KGCCOKAJOAH {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.LGGFJDDAAEB.is_empty() {
            my_size += ::protobuf::rt::string_size(1961, &self.LGGFJDDAAEB);
        }
        if self.EEMKJPBEDBC != false {
            my_size += 1 + 1;
        }
        if self.FACLNPLLHLG != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.FACLNPLLHLG);
        }
        for value in &self.LDNNCKLPDOI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.FHMDALHDFAF.is_empty() {
            my_size += ::protobuf::rt::string_size(769, &self.FHMDALHDFAF);
        }
        if self.GNGAFHELLPB != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.GNGAFHELLPB);
        }
        if self.NLEPAJBHOGL != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.NLEPAJBHOGL);
        }
        for value in &self.MBPFJACGBAG {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OIENLLIHDAB != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.OIENLLIHDAB);
        }
        if self.AJNNAALMIFL != 0 {
            my_size += ::protobuf::rt::uint64_size(15, self.AJNNAALMIFL);
        }
        if !self.OJKDDPBKEEN.is_empty() {
            my_size += ::protobuf::rt::string_size(1582, &self.OJKDDPBKEEN);
        }
        if self.FCEJJHLCOIM != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.FCEJJHLCOIM);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.IDAHGFAIIDE {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        };
        for v in &self.PGHNJEPDMPC {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.GEFJFHDKKNN != 0 {
            os.write_uint64(8, self.GEFJFHDKKNN)?;
        }
        if self.MHEGHLGLFCN != 0 {
            os.write_uint32(7, self.MHEGHLGLFCN)?;
        }
        if self.AKKODGEMOAH != 0 {
            os.write_uint64(10, self.AKKODGEMOAH)?;
        }
        for v in &self.KGCCOKAJOAH {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        };
        if !self.LGGFJDDAAEB.is_empty() {
            os.write_string(1961, &self.LGGFJDDAAEB)?;
        }
        if self.EEMKJPBEDBC != false {
            os.write_bool(6, self.EEMKJPBEDBC)?;
        }
        if self.FACLNPLLHLG != 0 {
            os.write_uint32(13, self.FACLNPLLHLG)?;
        }
        for v in &self.LDNNCKLPDOI {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        };
        if !self.FHMDALHDFAF.is_empty() {
            os.write_string(769, &self.FHMDALHDFAF)?;
        }
        if self.GNGAFHELLPB != 0 {
            os.write_uint32(1, self.GNGAFHELLPB)?;
        }
        if self.NLEPAJBHOGL != 0 {
            os.write_uint32(9, self.NLEPAJBHOGL)?;
        }
        for v in &self.MBPFJACGBAG {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        };
        if self.OIENLLIHDAB != 0 {
            os.write_uint32(2, self.OIENLLIHDAB)?;
        }
        if self.AJNNAALMIFL != 0 {
            os.write_uint64(15, self.AJNNAALMIFL)?;
        }
        if !self.OJKDDPBKEEN.is_empty() {
            os.write_string(1582, &self.OJKDDPBKEEN)?;
        }
        if self.FCEJJHLCOIM != 0 {
            os.write_uint32(11, self.FCEJJHLCOIM)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> NACIBCFJGKF {
        NACIBCFJGKF::new()
    }

    fn clear(&mut self) {
        self.IDAHGFAIIDE.clear();
        self.PGHNJEPDMPC.clear();
        self.GEFJFHDKKNN = 0;
        self.MHEGHLGLFCN = 0;
        self.AKKODGEMOAH = 0;
        self.KGCCOKAJOAH.clear();
        self.LGGFJDDAAEB.clear();
        self.EEMKJPBEDBC = false;
        self.FACLNPLLHLG = 0;
        self.LDNNCKLPDOI.clear();
        self.FHMDALHDFAF.clear();
        self.GNGAFHELLPB = 0;
        self.NLEPAJBHOGL = 0;
        self.MBPFJACGBAG.clear();
        self.OIENLLIHDAB = 0;
        self.AJNNAALMIFL = 0;
        self.OJKDDPBKEEN.clear();
        self.FCEJJHLCOIM = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static NACIBCFJGKF {
        static instance: NACIBCFJGKF = NACIBCFJGKF {
            IDAHGFAIIDE: ::std::vec::Vec::new(),
            PGHNJEPDMPC: ::std::vec::Vec::new(),
            GEFJFHDKKNN: 0,
            MHEGHLGLFCN: 0,
            AKKODGEMOAH: 0,
            KGCCOKAJOAH: ::std::vec::Vec::new(),
            LGGFJDDAAEB: ::std::string::String::new(),
            EEMKJPBEDBC: false,
            FACLNPLLHLG: 0,
            LDNNCKLPDOI: ::std::vec::Vec::new(),
            FHMDALHDFAF: ::std::string::String::new(),
            GNGAFHELLPB: 0,
            NLEPAJBHOGL: 0,
            MBPFJACGBAG: ::std::vec::Vec::new(),
            OIENLLIHDAB: 0,
            AJNNAALMIFL: 0,
            OJKDDPBKEEN: ::std::string::String::new(),
            FCEJJHLCOIM: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for NACIBCFJGKF {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("NACIBCFJGKF").unwrap()).clone()
    }
}

impl ::std::fmt::Display for NACIBCFJGKF {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for NACIBCFJGKF {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11NACIBCFJGKF.proto\x1a\x11BLOEOEDIKAD.proto\x1a\x11LCEFHIPLMKB.prot\
    o\"\xba\x05\n\x0bNACIBCFJGKF\x12.\n\x0bIDAHGFAIIDE\x18\x0e\x20\x03(\x0b2\
    \x0c.LCEFHIPLMKBR\x0bIDAHGFAIIDE\x12.\n\x0bPGHNJEPDMPC\x18\x0c\x20\x03(\
    \x0b2\x0c.BLOEOEDIKADR\x0bPGHNJEPDMPC\x12\x20\n\x0bGEFJFHDKKNN\x18\x08\
    \x20\x01(\x04R\x0bGEFJFHDKKNN\x12\x20\n\x0bMHEGHLGLFCN\x18\x07\x20\x01(\
    \rR\x0bMHEGHLGLFCN\x12\x20\n\x0bAKKODGEMOAH\x18\n\x20\x01(\x04R\x0bAKKOD\
    GEMOAH\x12.\n\x0bKGCCOKAJOAH\x18\x05\x20\x03(\x0b2\x0c.LCEFHIPLMKBR\x0bK\
    GCCOKAJOAH\x12!\n\x0bLGGFJDDAAEB\x18\xa9\x0f\x20\x01(\tR\x0bLGGFJDDAAEB\
    \x12\x20\n\x0bEEMKJPBEDBC\x18\x06\x20\x01(\x08R\x0bEEMKJPBEDBC\x12\x20\n\
    \x0bFACLNPLLHLG\x18\r\x20\x01(\rR\x0bFACLNPLLHLG\x12.\n\x0bLDNNCKLPDOI\
    \x18\x03\x20\x03(\x0b2\x0c.LCEFHIPLMKBR\x0bLDNNCKLPDOI\x12!\n\x0bFHMDALH\
    DFAF\x18\x81\x06\x20\x01(\tR\x0bFHMDALHDFAF\x12\x20\n\x0bGNGAFHELLPB\x18\
    \x01\x20\x01(\rR\x0bGNGAFHELLPB\x12\x20\n\x0bNLEPAJBHOGL\x18\t\x20\x01(\
    \rR\x0bNLEPAJBHOGL\x12.\n\x0bMBPFJACGBAG\x18\x04\x20\x03(\x0b2\x0c.LCEFH\
    IPLMKBR\x0bMBPFJACGBAG\x12\x20\n\x0bOIENLLIHDAB\x18\x02\x20\x01(\rR\x0bO\
    IENLLIHDAB\x12\x20\n\x0bAJNNAALMIFL\x18\x0f\x20\x01(\x04R\x0bAJNNAALMIFL\
    \x12!\n\x0bOJKDDPBKEEN\x18\xae\x0c\x20\x01(\tR\x0bOJKDDPBKEEN\x12\x20\n\
    \x0bFCEJJHLCOIM\x18\x0b\x20\x01(\rR\x0bFCEJJHLCOIMb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::BLOEOEDIKAD::file_descriptor().clone());
            deps.push(super::LCEFHIPLMKB::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(NACIBCFJGKF::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
