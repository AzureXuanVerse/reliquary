// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `NGBLIPAIBAA.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:NGBLIPAIBAA)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct NGBLIPAIBAA {
    // message fields
    // @@protoc_insertion_point(field:NGBLIPAIBAA.NLKJPGGJKKD)
    pub NLKJPGGJKKD: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.FGFFEBKNMHG)
    pub FGFFEBKNMHG: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.JKCHFNIKOMK)
    pub JKCHFNIKOMK: bool,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.MBDMCBIFHLP)
    pub MBDMCBIFHLP: ::protobuf::MessageField<super::NLHAPOFNEJJ::NLHAPOFNEJJ>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.OFAGGKBMPJN)
    pub OFAGGKBMPJN: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.ACHNAHDMHEK)
    pub ACHNAHDMHEK: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.FJJEBHKNOEG)
    pub FJJEBHKNOEG: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.EMNDBPMAIGD)
    pub EMNDBPMAIGD: ::protobuf::MessageField<super::NLBPHDCPCPF::NLBPHDCPCPF>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.HOIMINMJKKG)
    pub HOIMINMJKKG: ::protobuf::MessageField<super::EOJIMNJPNPN::EOJIMNJPNPN>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.JFGLBIPMPNA)
    pub JFGLBIPMPNA: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.HCNNCHHGMDF)
    pub HCNNCHHGMDF: ::protobuf::MessageField<super::KPIDLHPAABA::KPIDLHPAABA>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.PNHCPONPEIF)
    pub PNHCPONPEIF: bool,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.AFKOELAGIJP)
    pub AFKOELAGIJP: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.LOMBKJKBIGE)
    pub LOMBKJKBIGE: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.FNLFMLEKNNE)
    pub FNLFMLEKNNE: ::protobuf::MessageField<super::EOJIMNJPNPN::EOJIMNJPNPN>,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.FAJODKFNJJD)
    pub FAJODKFNJJD: u32,
    // @@protoc_insertion_point(field:NGBLIPAIBAA.OMBLHJDKEJA)
    pub OMBLHJDKEJA: u32,
    // special fields
    // @@protoc_insertion_point(special_field:NGBLIPAIBAA.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a NGBLIPAIBAA {
    fn default() -> &'a NGBLIPAIBAA {
        <NGBLIPAIBAA as ::protobuf::Message>::default_instance()
    }
}

impl NGBLIPAIBAA {
    pub fn new() -> NGBLIPAIBAA {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(17);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "NLKJPGGJKKD",
            |m: &NGBLIPAIBAA| { &m.NLKJPGGJKKD },
            |m: &mut NGBLIPAIBAA| { &mut m.NLKJPGGJKKD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FGFFEBKNMHG",
            |m: &NGBLIPAIBAA| { &m.FGFFEBKNMHG },
            |m: &mut NGBLIPAIBAA| { &mut m.FGFFEBKNMHG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JKCHFNIKOMK",
            |m: &NGBLIPAIBAA| { &m.JKCHFNIKOMK },
            |m: &mut NGBLIPAIBAA| { &mut m.JKCHFNIKOMK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NLHAPOFNEJJ::NLHAPOFNEJJ>(
            "MBDMCBIFHLP",
            |m: &NGBLIPAIBAA| { &m.MBDMCBIFHLP },
            |m: &mut NGBLIPAIBAA| { &mut m.MBDMCBIFHLP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OFAGGKBMPJN",
            |m: &NGBLIPAIBAA| { &m.OFAGGKBMPJN },
            |m: &mut NGBLIPAIBAA| { &mut m.OFAGGKBMPJN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ACHNAHDMHEK",
            |m: &NGBLIPAIBAA| { &m.ACHNAHDMHEK },
            |m: &mut NGBLIPAIBAA| { &mut m.ACHNAHDMHEK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FJJEBHKNOEG",
            |m: &NGBLIPAIBAA| { &m.FJJEBHKNOEG },
            |m: &mut NGBLIPAIBAA| { &mut m.FJJEBHKNOEG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NLBPHDCPCPF::NLBPHDCPCPF>(
            "EMNDBPMAIGD",
            |m: &NGBLIPAIBAA| { &m.EMNDBPMAIGD },
            |m: &mut NGBLIPAIBAA| { &mut m.EMNDBPMAIGD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EOJIMNJPNPN::EOJIMNJPNPN>(
            "HOIMINMJKKG",
            |m: &NGBLIPAIBAA| { &m.HOIMINMJKKG },
            |m: &mut NGBLIPAIBAA| { &mut m.HOIMINMJKKG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JFGLBIPMPNA",
            |m: &NGBLIPAIBAA| { &m.JFGLBIPMPNA },
            |m: &mut NGBLIPAIBAA| { &mut m.JFGLBIPMPNA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KPIDLHPAABA::KPIDLHPAABA>(
            "HCNNCHHGMDF",
            |m: &NGBLIPAIBAA| { &m.HCNNCHHGMDF },
            |m: &mut NGBLIPAIBAA| { &mut m.HCNNCHHGMDF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PNHCPONPEIF",
            |m: &NGBLIPAIBAA| { &m.PNHCPONPEIF },
            |m: &mut NGBLIPAIBAA| { &mut m.PNHCPONPEIF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "AFKOELAGIJP",
            |m: &NGBLIPAIBAA| { &m.AFKOELAGIJP },
            |m: &mut NGBLIPAIBAA| { &mut m.AFKOELAGIJP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "LOMBKJKBIGE",
            |m: &NGBLIPAIBAA| { &m.LOMBKJKBIGE },
            |m: &mut NGBLIPAIBAA| { &mut m.LOMBKJKBIGE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EOJIMNJPNPN::EOJIMNJPNPN>(
            "FNLFMLEKNNE",
            |m: &NGBLIPAIBAA| { &m.FNLFMLEKNNE },
            |m: &mut NGBLIPAIBAA| { &mut m.FNLFMLEKNNE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FAJODKFNJJD",
            |m: &NGBLIPAIBAA| { &m.FAJODKFNJJD },
            |m: &mut NGBLIPAIBAA| { &mut m.FAJODKFNJJD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OMBLHJDKEJA",
            |m: &NGBLIPAIBAA| { &m.OMBLHJDKEJA },
            |m: &mut NGBLIPAIBAA| { &mut m.OMBLHJDKEJA },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<NGBLIPAIBAA>(
            "NGBLIPAIBAA",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for NGBLIPAIBAA {
    const NAME: &'static str = "NGBLIPAIBAA";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NLKJPGGJKKD)?;
                },
                744 => {
                    self.FGFFEBKNMHG = is.read_uint32()?;
                },
                104 => {
                    self.JKCHFNIKOMK = is.read_bool()?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.MBDMCBIFHLP)?;
                },
                80 => {
                    self.OFAGGKBMPJN = is.read_uint32()?;
                },
                24 => {
                    self.ACHNAHDMHEK = is.read_uint32()?;
                },
                88 => {
                    self.FJJEBHKNOEG = is.read_uint32()?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EMNDBPMAIGD)?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.HOIMINMJKKG)?;
                },
                32 => {
                    self.JFGLBIPMPNA = is.read_uint32()?;
                },
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.HCNNCHHGMDF)?;
                },
                96 => {
                    self.PNHCPONPEIF = is.read_bool()?;
                },
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AFKOELAGIJP)?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LOMBKJKBIGE)?;
                },
                10 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.FNLFMLEKNNE)?;
                },
                64 => {
                    self.FAJODKFNJJD = is.read_uint32()?;
                },
                10112 => {
                    self.OMBLHJDKEJA = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.NLKJPGGJKKD.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.FGFFEBKNMHG != 0 {
            my_size += ::protobuf::rt::uint32_size(93, self.FGFFEBKNMHG);
        }
        if self.JKCHFNIKOMK != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.MBDMCBIFHLP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.OFAGGKBMPJN != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.OFAGGKBMPJN);
        }
        if self.ACHNAHDMHEK != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.ACHNAHDMHEK);
        }
        if self.FJJEBHKNOEG != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.FJJEBHKNOEG);
        }
        if let Some(v) = self.EMNDBPMAIGD.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.HOIMINMJKKG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.JFGLBIPMPNA != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.JFGLBIPMPNA);
        }
        if let Some(v) = self.HCNNCHHGMDF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.PNHCPONPEIF != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.AFKOELAGIJP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LOMBKJKBIGE.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.FNLFMLEKNNE.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.FAJODKFNJJD != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.FAJODKFNJJD);
        }
        if self.OMBLHJDKEJA != 0 {
            my_size += ::protobuf::rt::uint32_size(1264, self.OMBLHJDKEJA);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.NLKJPGGJKKD.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if self.FGFFEBKNMHG != 0 {
            os.write_uint32(93, self.FGFFEBKNMHG)?;
        }
        if self.JKCHFNIKOMK != false {
            os.write_bool(13, self.JKCHFNIKOMK)?;
        }
        if let Some(v) = self.MBDMCBIFHLP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if self.OFAGGKBMPJN != 0 {
            os.write_uint32(10, self.OFAGGKBMPJN)?;
        }
        if self.ACHNAHDMHEK != 0 {
            os.write_uint32(3, self.ACHNAHDMHEK)?;
        }
        if self.FJJEBHKNOEG != 0 {
            os.write_uint32(11, self.FJJEBHKNOEG)?;
        }
        if let Some(v) = self.EMNDBPMAIGD.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if let Some(v) = self.HOIMINMJKKG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        if self.JFGLBIPMPNA != 0 {
            os.write_uint32(4, self.JFGLBIPMPNA)?;
        }
        if let Some(v) = self.HCNNCHHGMDF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        if self.PNHCPONPEIF != false {
            os.write_bool(12, self.PNHCPONPEIF)?;
        }
        if let Some(v) = self.AFKOELAGIJP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.LOMBKJKBIGE.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.FNLFMLEKNNE.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        }
        if self.FAJODKFNJJD != 0 {
            os.write_uint32(8, self.FAJODKFNJJD)?;
        }
        if self.OMBLHJDKEJA != 0 {
            os.write_uint32(1264, self.OMBLHJDKEJA)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> NGBLIPAIBAA {
        NGBLIPAIBAA::new()
    }

    fn clear(&mut self) {
        self.NLKJPGGJKKD.clear();
        self.FGFFEBKNMHG = 0;
        self.JKCHFNIKOMK = false;
        self.MBDMCBIFHLP.clear();
        self.OFAGGKBMPJN = 0;
        self.ACHNAHDMHEK = 0;
        self.FJJEBHKNOEG = 0;
        self.EMNDBPMAIGD.clear();
        self.HOIMINMJKKG.clear();
        self.JFGLBIPMPNA = 0;
        self.HCNNCHHGMDF.clear();
        self.PNHCPONPEIF = false;
        self.AFKOELAGIJP.clear();
        self.LOMBKJKBIGE.clear();
        self.FNLFMLEKNNE.clear();
        self.FAJODKFNJJD = 0;
        self.OMBLHJDKEJA = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static NGBLIPAIBAA {
        static instance: NGBLIPAIBAA = NGBLIPAIBAA {
            NLKJPGGJKKD: ::protobuf::MessageField::none(),
            FGFFEBKNMHG: 0,
            JKCHFNIKOMK: false,
            MBDMCBIFHLP: ::protobuf::MessageField::none(),
            OFAGGKBMPJN: 0,
            ACHNAHDMHEK: 0,
            FJJEBHKNOEG: 0,
            EMNDBPMAIGD: ::protobuf::MessageField::none(),
            HOIMINMJKKG: ::protobuf::MessageField::none(),
            JFGLBIPMPNA: 0,
            HCNNCHHGMDF: ::protobuf::MessageField::none(),
            PNHCPONPEIF: false,
            AFKOELAGIJP: ::protobuf::MessageField::none(),
            LOMBKJKBIGE: ::protobuf::MessageField::none(),
            FNLFMLEKNNE: ::protobuf::MessageField::none(),
            FAJODKFNJJD: 0,
            OMBLHJDKEJA: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for NGBLIPAIBAA {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("NGBLIPAIBAA").unwrap()).clone()
    }
}

impl ::std::fmt::Display for NGBLIPAIBAA {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for NGBLIPAIBAA {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11NGBLIPAIBAA.proto\x1a\x11EOJIMNJPNPN.proto\x1a\x0eItemList.proto\
    \x1a\x11KPIDLHPAABA.proto\x1a\x11NLBPHDCPCPF.proto\x1a\x11NLHAPOFNEJJ.pr\
    oto\"\xb7\x05\n\x0bNGBLIPAIBAA\x12+\n\x0bNLKJPGGJKKD\x18\x0e\x20\x01(\
    \x0b2\t.ItemListR\x0bNLKJPGGJKKD\x12\x20\n\x0bFGFFEBKNMHG\x18]\x20\x01(\
    \rR\x0bFGFFEBKNMHG\x12\x20\n\x0bJKCHFNIKOMK\x18\r\x20\x01(\x08R\x0bJKCHF\
    NIKOMK\x12.\n\x0bMBDMCBIFHLP\x18\t\x20\x01(\x0b2\x0c.NLHAPOFNEJJR\x0bMBD\
    MCBIFHLP\x12\x20\n\x0bOFAGGKBMPJN\x18\n\x20\x01(\rR\x0bOFAGGKBMPJN\x12\
    \x20\n\x0bACHNAHDMHEK\x18\x03\x20\x01(\rR\x0bACHNAHDMHEK\x12\x20\n\x0bFJ\
    JEBHKNOEG\x18\x0b\x20\x01(\rR\x0bFJJEBHKNOEG\x12.\n\x0bEMNDBPMAIGD\x18\
    \x0f\x20\x01(\x0b2\x0c.NLBPHDCPCPFR\x0bEMNDBPMAIGD\x12.\n\x0bHOIMINMJKKG\
    \x18\x07\x20\x01(\x0b2\x0c.EOJIMNJPNPNR\x0bHOIMINMJKKG\x12\x20\n\x0bJFGL\
    BIPMPNA\x18\x04\x20\x01(\rR\x0bJFGLBIPMPNA\x12.\n\x0bHCNNCHHGMDF\x18\x06\
    \x20\x01(\x0b2\x0c.KPIDLHPAABAR\x0bHCNNCHHGMDF\x12\x20\n\x0bPNHCPONPEIF\
    \x18\x0c\x20\x01(\x08R\x0bPNHCPONPEIF\x12+\n\x0bAFKOELAGIJP\x18\x02\x20\
    \x01(\x0b2\t.ItemListR\x0bAFKOELAGIJP\x12+\n\x0bLOMBKJKBIGE\x18\x05\x20\
    \x01(\x0b2\t.ItemListR\x0bLOMBKJKBIGE\x12.\n\x0bFNLFMLEKNNE\x18\x01\x20\
    \x01(\x0b2\x0c.EOJIMNJPNPNR\x0bFNLFMLEKNNE\x12\x20\n\x0bFAJODKFNJJD\x18\
    \x08\x20\x01(\rR\x0bFAJODKFNJJD\x12!\n\x0bOMBLHJDKEJA\x18\xf0\t\x20\x01(\
    \rR\x0bOMBLHJDKEJAb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(5);
            deps.push(super::EOJIMNJPNPN::file_descriptor().clone());
            deps.push(super::ItemList::file_descriptor().clone());
            deps.push(super::KPIDLHPAABA::file_descriptor().clone());
            deps.push(super::NLBPHDCPCPF::file_descriptor().clone());
            deps.push(super::NLHAPOFNEJJ::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(NGBLIPAIBAA::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
