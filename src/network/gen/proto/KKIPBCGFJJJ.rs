// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `KKIPBCGFJJJ.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:KKIPBCGFJJJ)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct KKIPBCGFJJJ {
    // message fields
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.DJBECKBJAGC)
    pub DJBECKBJAGC: ::protobuf::MessageField<super::OEMIPBDLKKD::OEMIPBDLKKD>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.LNCNOFOEHAA)
    pub LNCNOFOEHAA: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.FPNIGIONDIH)
    pub FPNIGIONDIH: bool,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.GHHFPEJPPJJ)
    pub GHHFPEJPPJJ: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.PELCJGDFOKO)
    pub PELCJGDFOKO: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.POOJFEBMGKF)
    pub POOJFEBMGKF: ::std::string::String,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.AECLNDHLOFP)
    pub AECLNDHLOFP: ::std::string::String,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.NIDFCKMAAEH)
    pub NIDFCKMAAEH: ::std::string::String,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.LOEDAFFIFDH)
    pub LOEDAFFIFDH: bool,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.LFFMLLMDJNL)
    pub LFFMLLMDJNL: ::protobuf::EnumOrUnknown<super::LEFBICDEJDE::LEFBICDEJDE>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.AGCGCMEMEHJ)
    pub AGCGCMEMEHJ: ::std::vec::Vec<super::DisplayAvatarDetailInfo::DisplayAvatarDetailInfo>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.OIBOJHPFGJP)
    pub OIBOJHPFGJP: ::protobuf::MessageField<super::EBIHABDIGIO::EBIHABDIGIO>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.KMDLCGALPKI)
    pub KMDLCGALPKI: ::std::vec::Vec<super::DisplayAvatarDetailInfo::DisplayAvatarDetailInfo>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.HCNNCHHGMDF)
    pub HCNNCHHGMDF: ::protobuf::MessageField<super::OEBPMFEAIJE::OEBPMFEAIJE>,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.JKOCJIMAGBN)
    pub JKOCJIMAGBN: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.CFKBOBJKMFD)
    pub CFKBOBJKMFD: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.DNMJBNNJLEL)
    pub DNMJBNNJLEL: u32,
    // @@protoc_insertion_point(field:KKIPBCGFJJJ.CPEMMCOJKDG)
    pub CPEMMCOJKDG: ::std::string::String,
    // special fields
    // @@protoc_insertion_point(special_field:KKIPBCGFJJJ.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a KKIPBCGFJJJ {
    fn default() -> &'a KKIPBCGFJJJ {
        <KKIPBCGFJJJ as ::protobuf::Message>::default_instance()
    }
}

impl KKIPBCGFJJJ {
    pub fn new() -> KKIPBCGFJJJ {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::OEMIPBDLKKD::OEMIPBDLKKD>(
            "DJBECKBJAGC",
            |m: &KKIPBCGFJJJ| { &m.DJBECKBJAGC },
            |m: &mut KKIPBCGFJJJ| { &mut m.DJBECKBJAGC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LNCNOFOEHAA",
            |m: &KKIPBCGFJJJ| { &m.LNCNOFOEHAA },
            |m: &mut KKIPBCGFJJJ| { &mut m.LNCNOFOEHAA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FPNIGIONDIH",
            |m: &KKIPBCGFJJJ| { &m.FPNIGIONDIH },
            |m: &mut KKIPBCGFJJJ| { &mut m.FPNIGIONDIH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GHHFPEJPPJJ",
            |m: &KKIPBCGFJJJ| { &m.GHHFPEJPPJJ },
            |m: &mut KKIPBCGFJJJ| { &mut m.GHHFPEJPPJJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PELCJGDFOKO",
            |m: &KKIPBCGFJJJ| { &m.PELCJGDFOKO },
            |m: &mut KKIPBCGFJJJ| { &mut m.PELCJGDFOKO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "POOJFEBMGKF",
            |m: &KKIPBCGFJJJ| { &m.POOJFEBMGKF },
            |m: &mut KKIPBCGFJJJ| { &mut m.POOJFEBMGKF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AECLNDHLOFP",
            |m: &KKIPBCGFJJJ| { &m.AECLNDHLOFP },
            |m: &mut KKIPBCGFJJJ| { &mut m.AECLNDHLOFP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NIDFCKMAAEH",
            |m: &KKIPBCGFJJJ| { &m.NIDFCKMAAEH },
            |m: &mut KKIPBCGFJJJ| { &mut m.NIDFCKMAAEH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LOEDAFFIFDH",
            |m: &KKIPBCGFJJJ| { &m.LOEDAFFIFDH },
            |m: &mut KKIPBCGFJJJ| { &mut m.LOEDAFFIFDH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LFFMLLMDJNL",
            |m: &KKIPBCGFJJJ| { &m.LFFMLLMDJNL },
            |m: &mut KKIPBCGFJJJ| { &mut m.LFFMLLMDJNL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "AGCGCMEMEHJ",
            |m: &KKIPBCGFJJJ| { &m.AGCGCMEMEHJ },
            |m: &mut KKIPBCGFJJJ| { &mut m.AGCGCMEMEHJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EBIHABDIGIO::EBIHABDIGIO>(
            "OIBOJHPFGJP",
            |m: &KKIPBCGFJJJ| { &m.OIBOJHPFGJP },
            |m: &mut KKIPBCGFJJJ| { &mut m.OIBOJHPFGJP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KMDLCGALPKI",
            |m: &KKIPBCGFJJJ| { &m.KMDLCGALPKI },
            |m: &mut KKIPBCGFJJJ| { &mut m.KMDLCGALPKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::OEBPMFEAIJE::OEBPMFEAIJE>(
            "HCNNCHHGMDF",
            |m: &KKIPBCGFJJJ| { &m.HCNNCHHGMDF },
            |m: &mut KKIPBCGFJJJ| { &mut m.HCNNCHHGMDF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JKOCJIMAGBN",
            |m: &KKIPBCGFJJJ| { &m.JKOCJIMAGBN },
            |m: &mut KKIPBCGFJJJ| { &mut m.JKOCJIMAGBN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CFKBOBJKMFD",
            |m: &KKIPBCGFJJJ| { &m.CFKBOBJKMFD },
            |m: &mut KKIPBCGFJJJ| { &mut m.CFKBOBJKMFD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DNMJBNNJLEL",
            |m: &KKIPBCGFJJJ| { &m.DNMJBNNJLEL },
            |m: &mut KKIPBCGFJJJ| { &mut m.DNMJBNNJLEL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CPEMMCOJKDG",
            |m: &KKIPBCGFJJJ| { &m.CPEMMCOJKDG },
            |m: &mut KKIPBCGFJJJ| { &mut m.CPEMMCOJKDG },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<KKIPBCGFJJJ>(
            "KKIPBCGFJJJ",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for KKIPBCGFJJJ {
    const NAME: &'static str = "KKIPBCGFJJJ";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                15898 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DJBECKBJAGC)?;
                },
                80 => {
                    self.LNCNOFOEHAA = is.read_uint32()?;
                },
                56 => {
                    self.FPNIGIONDIH = is.read_bool()?;
                },
                120 => {
                    self.GHHFPEJPPJJ = is.read_uint32()?;
                },
                72 => {
                    self.PELCJGDFOKO = is.read_uint32()?;
                },
                114 => {
                    self.POOJFEBMGKF = is.read_string()?;
                },
                66 => {
                    self.AECLNDHLOFP = is.read_string()?;
                },
                98 => {
                    self.NIDFCKMAAEH = is.read_string()?;
                },
                16 => {
                    self.LOEDAFFIFDH = is.read_bool()?;
                },
                48 => {
                    self.LFFMLLMDJNL = is.read_enum_or_unknown()?;
                },
                4434 => {
                    self.AGCGCMEMEHJ.push(is.read_message()?);
                },
                16322 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OIBOJHPFGJP)?;
                },
                106 => {
                    self.KMDLCGALPKI.push(is.read_message()?);
                },
                26 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.HCNNCHHGMDF)?;
                },
                88 => {
                    self.JKOCJIMAGBN = is.read_uint32()?;
                },
                32 => {
                    self.CFKBOBJKMFD = is.read_uint32()?;
                },
                40 => {
                    self.DNMJBNNJLEL = is.read_uint32()?;
                },
                10 => {
                    self.CPEMMCOJKDG = is.read_string()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.DJBECKBJAGC.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.LNCNOFOEHAA != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.LNCNOFOEHAA);
        }
        if self.FPNIGIONDIH != false {
            my_size += 1 + 1;
        }
        if self.GHHFPEJPPJJ != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.GHHFPEJPPJJ);
        }
        if self.PELCJGDFOKO != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.PELCJGDFOKO);
        }
        if !self.POOJFEBMGKF.is_empty() {
            my_size += ::protobuf::rt::string_size(14, &self.POOJFEBMGKF);
        }
        if !self.AECLNDHLOFP.is_empty() {
            my_size += ::protobuf::rt::string_size(8, &self.AECLNDHLOFP);
        }
        if !self.NIDFCKMAAEH.is_empty() {
            my_size += ::protobuf::rt::string_size(12, &self.NIDFCKMAAEH);
        }
        if self.LOEDAFFIFDH != false {
            my_size += 1 + 1;
        }
        if self.LFFMLLMDJNL != ::protobuf::EnumOrUnknown::new(super::LEFBICDEJDE::LEFBICDEJDE::EDITOR) {
            my_size += ::protobuf::rt::int32_size(6, self.LFFMLLMDJNL.value());
        }
        for value in &self.AGCGCMEMEHJ {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.OIBOJHPFGJP.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.KMDLCGALPKI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.HCNNCHHGMDF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.JKOCJIMAGBN != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.JKOCJIMAGBN);
        }
        if self.CFKBOBJKMFD != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.CFKBOBJKMFD);
        }
        if self.DNMJBNNJLEL != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.DNMJBNNJLEL);
        }
        if !self.CPEMMCOJKDG.is_empty() {
            my_size += ::protobuf::rt::string_size(1, &self.CPEMMCOJKDG);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.DJBECKBJAGC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1987, v, os)?;
        }
        if self.LNCNOFOEHAA != 0 {
            os.write_uint32(10, self.LNCNOFOEHAA)?;
        }
        if self.FPNIGIONDIH != false {
            os.write_bool(7, self.FPNIGIONDIH)?;
        }
        if self.GHHFPEJPPJJ != 0 {
            os.write_uint32(15, self.GHHFPEJPPJJ)?;
        }
        if self.PELCJGDFOKO != 0 {
            os.write_uint32(9, self.PELCJGDFOKO)?;
        }
        if !self.POOJFEBMGKF.is_empty() {
            os.write_string(14, &self.POOJFEBMGKF)?;
        }
        if !self.AECLNDHLOFP.is_empty() {
            os.write_string(8, &self.AECLNDHLOFP)?;
        }
        if !self.NIDFCKMAAEH.is_empty() {
            os.write_string(12, &self.NIDFCKMAAEH)?;
        }
        if self.LOEDAFFIFDH != false {
            os.write_bool(2, self.LOEDAFFIFDH)?;
        }
        if self.LFFMLLMDJNL != ::protobuf::EnumOrUnknown::new(super::LEFBICDEJDE::LEFBICDEJDE::EDITOR) {
            os.write_enum(6, ::protobuf::EnumOrUnknown::value(&self.LFFMLLMDJNL))?;
        }
        for v in &self.AGCGCMEMEHJ {
            ::protobuf::rt::write_message_field_with_cached_size(554, v, os)?;
        };
        if let Some(v) = self.OIBOJHPFGJP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2040, v, os)?;
        }
        for v in &self.KMDLCGALPKI {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        };
        if let Some(v) = self.HCNNCHHGMDF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        }
        if self.JKOCJIMAGBN != 0 {
            os.write_uint32(11, self.JKOCJIMAGBN)?;
        }
        if self.CFKBOBJKMFD != 0 {
            os.write_uint32(4, self.CFKBOBJKMFD)?;
        }
        if self.DNMJBNNJLEL != 0 {
            os.write_uint32(5, self.DNMJBNNJLEL)?;
        }
        if !self.CPEMMCOJKDG.is_empty() {
            os.write_string(1, &self.CPEMMCOJKDG)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> KKIPBCGFJJJ {
        KKIPBCGFJJJ::new()
    }

    fn clear(&mut self) {
        self.DJBECKBJAGC.clear();
        self.LNCNOFOEHAA = 0;
        self.FPNIGIONDIH = false;
        self.GHHFPEJPPJJ = 0;
        self.PELCJGDFOKO = 0;
        self.POOJFEBMGKF.clear();
        self.AECLNDHLOFP.clear();
        self.NIDFCKMAAEH.clear();
        self.LOEDAFFIFDH = false;
        self.LFFMLLMDJNL = ::protobuf::EnumOrUnknown::new(super::LEFBICDEJDE::LEFBICDEJDE::EDITOR);
        self.AGCGCMEMEHJ.clear();
        self.OIBOJHPFGJP.clear();
        self.KMDLCGALPKI.clear();
        self.HCNNCHHGMDF.clear();
        self.JKOCJIMAGBN = 0;
        self.CFKBOBJKMFD = 0;
        self.DNMJBNNJLEL = 0;
        self.CPEMMCOJKDG.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static KKIPBCGFJJJ {
        static instance: KKIPBCGFJJJ = KKIPBCGFJJJ {
            DJBECKBJAGC: ::protobuf::MessageField::none(),
            LNCNOFOEHAA: 0,
            FPNIGIONDIH: false,
            GHHFPEJPPJJ: 0,
            PELCJGDFOKO: 0,
            POOJFEBMGKF: ::std::string::String::new(),
            AECLNDHLOFP: ::std::string::String::new(),
            NIDFCKMAAEH: ::std::string::String::new(),
            LOEDAFFIFDH: false,
            LFFMLLMDJNL: ::protobuf::EnumOrUnknown::from_i32(0),
            AGCGCMEMEHJ: ::std::vec::Vec::new(),
            OIBOJHPFGJP: ::protobuf::MessageField::none(),
            KMDLCGALPKI: ::std::vec::Vec::new(),
            HCNNCHHGMDF: ::protobuf::MessageField::none(),
            JKOCJIMAGBN: 0,
            CFKBOBJKMFD: 0,
            DNMJBNNJLEL: 0,
            CPEMMCOJKDG: ::std::string::String::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for KKIPBCGFJJJ {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("KKIPBCGFJJJ").unwrap()).clone()
    }
}

impl ::std::fmt::Display for KKIPBCGFJJJ {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for KKIPBCGFJJJ {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11KKIPBCGFJJJ.proto\x1a\x1dDisplayAvatarDetailInfo.proto\x1a\x11EBIH\
    ABDIGIO.proto\x1a\x11LEFBICDEJDE.proto\x1a\x11OEBPMFEAIJE.proto\x1a\x11O\
    EMIPBDLKKD.proto\"\xe0\x05\n\x0bKKIPBCGFJJJ\x12/\n\x0bDJBECKBJAGC\x18\
    \xc3\x0f\x20\x01(\x0b2\x0c.OEMIPBDLKKDR\x0bDJBECKBJAGC\x12\x20\n\x0bLNCN\
    OFOEHAA\x18\n\x20\x01(\rR\x0bLNCNOFOEHAA\x12\x20\n\x0bFPNIGIONDIH\x18\
    \x07\x20\x01(\x08R\x0bFPNIGIONDIH\x12\x20\n\x0bGHHFPEJPPJJ\x18\x0f\x20\
    \x01(\rR\x0bGHHFPEJPPJJ\x12\x20\n\x0bPELCJGDFOKO\x18\t\x20\x01(\rR\x0bPE\
    LCJGDFOKO\x12\x20\n\x0bPOOJFEBMGKF\x18\x0e\x20\x01(\tR\x0bPOOJFEBMGKF\
    \x12\x20\n\x0bAECLNDHLOFP\x18\x08\x20\x01(\tR\x0bAECLNDHLOFP\x12\x20\n\
    \x0bNIDFCKMAAEH\x18\x0c\x20\x01(\tR\x0bNIDFCKMAAEH\x12\x20\n\x0bLOEDAFFI\
    FDH\x18\x02\x20\x01(\x08R\x0bLOEDAFFIFDH\x12.\n\x0bLFFMLLMDJNL\x18\x06\
    \x20\x01(\x0e2\x0c.LEFBICDEJDER\x0bLFFMLLMDJNL\x12;\n\x0bAGCGCMEMEHJ\x18\
    \xaa\x04\x20\x03(\x0b2\x18.DisplayAvatarDetailInfoR\x0bAGCGCMEMEHJ\x12/\
    \n\x0bOIBOJHPFGJP\x18\xf8\x0f\x20\x01(\x0b2\x0c.EBIHABDIGIOR\x0bOIBOJHPF\
    GJP\x12:\n\x0bKMDLCGALPKI\x18\r\x20\x03(\x0b2\x18.DisplayAvatarDetailInf\
    oR\x0bKMDLCGALPKI\x12.\n\x0bHCNNCHHGMDF\x18\x03\x20\x01(\x0b2\x0c.OEBPMF\
    EAIJER\x0bHCNNCHHGMDF\x12\x20\n\x0bJKOCJIMAGBN\x18\x0b\x20\x01(\rR\x0bJK\
    OCJIMAGBN\x12\x20\n\x0bCFKBOBJKMFD\x18\x04\x20\x01(\rR\x0bCFKBOBJKMFD\
    \x12\x20\n\x0bDNMJBNNJLEL\x18\x05\x20\x01(\rR\x0bDNMJBNNJLEL\x12\x20\n\
    \x0bCPEMMCOJKDG\x18\x01\x20\x01(\tR\x0bCPEMMCOJKDGb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(5);
            deps.push(super::DisplayAvatarDetailInfo::file_descriptor().clone());
            deps.push(super::EBIHABDIGIO::file_descriptor().clone());
            deps.push(super::LEFBICDEJDE::file_descriptor().clone());
            deps.push(super::OEBPMFEAIJE::file_descriptor().clone());
            deps.push(super::OEMIPBDLKKD::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(KKIPBCGFJJJ::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
