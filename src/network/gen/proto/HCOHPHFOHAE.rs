// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `HCOHPHFOHAE.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:HCOHPHFOHAE)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct HCOHPHFOHAE {
    // message fields
    // @@protoc_insertion_point(field:HCOHPHFOHAE.MJFKFEICALA)
    pub MJFKFEICALA: u32,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.MHLBCKDCBOC)
    pub MHLBCKDCBOC: ::protobuf::MessageField<super::BIGHEDAMILL::BIGHEDAMILL>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.HHLBDGMIBNP)
    pub HHLBDGMIBNP: u32,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.HDMLDOHACDJ)
    pub HDMLDOHACDJ: ::std::vec::Vec<super::PlaySkillBrief::PlaySkillBrief>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.AAIJABGNADA)
    pub AAIJABGNADA: u32,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.AJLGIFPHCCB)
    pub AJLGIFPHCCB: ::protobuf::MessageField<super::PIHEPMKCGCI::PIHEPMKCGCI>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.EOBJCDFPEAO)
    pub EOBJCDFPEAO: ::std::vec::Vec<super::DDOLOAHPEGO::DDOLOAHPEGO>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.HGMDJHLBIGO)
    pub HGMDJHLBIGO: ::std::vec::Vec<super::AKLFLFOPLFK::AKLFLFOPLFK>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.FIGIABJFGCM)
    pub FIGIABJFGCM: ::std::vec::Vec<super::PlayCardBrief::PlayCardBrief>,
    // @@protoc_insertion_point(field:HCOHPHFOHAE.IOOHLIGKAJC)
    pub IOOHLIGKAJC: ::protobuf::EnumOrUnknown<super::OMNIKCCCOPN::OMNIKCCCOPN>,
    // special fields
    // @@protoc_insertion_point(special_field:HCOHPHFOHAE.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a HCOHPHFOHAE {
    fn default() -> &'a HCOHPHFOHAE {
        <HCOHPHFOHAE as ::protobuf::Message>::default_instance()
    }
}

impl HCOHPHFOHAE {
    pub fn new() -> HCOHPHFOHAE {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(10);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MJFKFEICALA",
            |m: &HCOHPHFOHAE| { &m.MJFKFEICALA },
            |m: &mut HCOHPHFOHAE| { &mut m.MJFKFEICALA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BIGHEDAMILL::BIGHEDAMILL>(
            "MHLBCKDCBOC",
            |m: &HCOHPHFOHAE| { &m.MHLBCKDCBOC },
            |m: &mut HCOHPHFOHAE| { &mut m.MHLBCKDCBOC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HHLBDGMIBNP",
            |m: &HCOHPHFOHAE| { &m.HHLBDGMIBNP },
            |m: &mut HCOHPHFOHAE| { &mut m.HHLBDGMIBNP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HDMLDOHACDJ",
            |m: &HCOHPHFOHAE| { &m.HDMLDOHACDJ },
            |m: &mut HCOHPHFOHAE| { &mut m.HDMLDOHACDJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AAIJABGNADA",
            |m: &HCOHPHFOHAE| { &m.AAIJABGNADA },
            |m: &mut HCOHPHFOHAE| { &mut m.AAIJABGNADA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::PIHEPMKCGCI::PIHEPMKCGCI>(
            "AJLGIFPHCCB",
            |m: &HCOHPHFOHAE| { &m.AJLGIFPHCCB },
            |m: &mut HCOHPHFOHAE| { &mut m.AJLGIFPHCCB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "EOBJCDFPEAO",
            |m: &HCOHPHFOHAE| { &m.EOBJCDFPEAO },
            |m: &mut HCOHPHFOHAE| { &mut m.EOBJCDFPEAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HGMDJHLBIGO",
            |m: &HCOHPHFOHAE| { &m.HGMDJHLBIGO },
            |m: &mut HCOHPHFOHAE| { &mut m.HGMDJHLBIGO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FIGIABJFGCM",
            |m: &HCOHPHFOHAE| { &m.FIGIABJFGCM },
            |m: &mut HCOHPHFOHAE| { &mut m.FIGIABJFGCM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IOOHLIGKAJC",
            |m: &HCOHPHFOHAE| { &m.IOOHLIGKAJC },
            |m: &mut HCOHPHFOHAE| { &mut m.IOOHLIGKAJC },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<HCOHPHFOHAE>(
            "HCOHPHFOHAE",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for HCOHPHFOHAE {
    const NAME: &'static str = "HCOHPHFOHAE";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                8 => {
                    self.MJFKFEICALA = is.read_uint32()?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.MHLBCKDCBOC)?;
                },
                56 => {
                    self.HHLBDGMIBNP = is.read_uint32()?;
                },
                106 => {
                    self.HDMLDOHACDJ.push(is.read_message()?);
                },
                40 => {
                    self.AAIJABGNADA = is.read_uint32()?;
                },
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AJLGIFPHCCB)?;
                },
                82 => {
                    self.EOBJCDFPEAO.push(is.read_message()?);
                },
                98 => {
                    self.HGMDJHLBIGO.push(is.read_message()?);
                },
                114 => {
                    self.FIGIABJFGCM.push(is.read_message()?);
                },
                48 => {
                    self.IOOHLIGKAJC = is.read_enum_or_unknown()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.MJFKFEICALA != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.MJFKFEICALA);
        }
        if let Some(v) = self.MHLBCKDCBOC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.HHLBDGMIBNP != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.HHLBDGMIBNP);
        }
        for value in &self.HDMLDOHACDJ {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.AAIJABGNADA != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.AAIJABGNADA);
        }
        if let Some(v) = self.AJLGIFPHCCB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.EOBJCDFPEAO {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.HGMDJHLBIGO {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.FIGIABJFGCM {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.IOOHLIGKAJC != ::protobuf::EnumOrUnknown::new(super::OMNIKCCCOPN::OMNIKCCCOPN::TRAIN_PARTY_MT_CATEGORY_NONE) {
            my_size += ::protobuf::rt::int32_size(6, self.IOOHLIGKAJC.value());
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.MJFKFEICALA != 0 {
            os.write_uint32(1, self.MJFKFEICALA)?;
        }
        if let Some(v) = self.MHLBCKDCBOC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if self.HHLBDGMIBNP != 0 {
            os.write_uint32(7, self.HHLBDGMIBNP)?;
        }
        for v in &self.HDMLDOHACDJ {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        };
        if self.AAIJABGNADA != 0 {
            os.write_uint32(5, self.AAIJABGNADA)?;
        }
        if let Some(v) = self.AJLGIFPHCCB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        for v in &self.EOBJCDFPEAO {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        };
        for v in &self.HGMDJHLBIGO {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        for v in &self.FIGIABJFGCM {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        };
        if self.IOOHLIGKAJC != ::protobuf::EnumOrUnknown::new(super::OMNIKCCCOPN::OMNIKCCCOPN::TRAIN_PARTY_MT_CATEGORY_NONE) {
            os.write_enum(6, ::protobuf::EnumOrUnknown::value(&self.IOOHLIGKAJC))?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> HCOHPHFOHAE {
        HCOHPHFOHAE::new()
    }

    fn clear(&mut self) {
        self.MJFKFEICALA = 0;
        self.MHLBCKDCBOC.clear();
        self.HHLBDGMIBNP = 0;
        self.HDMLDOHACDJ.clear();
        self.AAIJABGNADA = 0;
        self.AJLGIFPHCCB.clear();
        self.EOBJCDFPEAO.clear();
        self.HGMDJHLBIGO.clear();
        self.FIGIABJFGCM.clear();
        self.IOOHLIGKAJC = ::protobuf::EnumOrUnknown::new(super::OMNIKCCCOPN::OMNIKCCCOPN::TRAIN_PARTY_MT_CATEGORY_NONE);
        self.special_fields.clear();
    }

    fn default_instance() -> &'static HCOHPHFOHAE {
        static instance: HCOHPHFOHAE = HCOHPHFOHAE {
            MJFKFEICALA: 0,
            MHLBCKDCBOC: ::protobuf::MessageField::none(),
            HHLBDGMIBNP: 0,
            HDMLDOHACDJ: ::std::vec::Vec::new(),
            AAIJABGNADA: 0,
            AJLGIFPHCCB: ::protobuf::MessageField::none(),
            EOBJCDFPEAO: ::std::vec::Vec::new(),
            HGMDJHLBIGO: ::std::vec::Vec::new(),
            FIGIABJFGCM: ::std::vec::Vec::new(),
            IOOHLIGKAJC: ::protobuf::EnumOrUnknown::from_i32(0),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for HCOHPHFOHAE {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("HCOHPHFOHAE").unwrap()).clone()
    }
}

impl ::std::fmt::Display for HCOHPHFOHAE {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for HCOHPHFOHAE {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11HCOHPHFOHAE.proto\x1a\x11AKLFLFOPLFK.proto\x1a\x11BIGHEDAMILL.prot\
    o\x1a\x11DDOLOAHPEGO.proto\x1a\x11OMNIKCCCOPN.proto\x1a\x11PIHEPMKCGCI.p\
    roto\x1a\x13PlayCardBrief.proto\x1a\x14PlaySkillBrief.proto\"\xc8\x03\n\
    \x0bHCOHPHFOHAE\x12\x20\n\x0bMJFKFEICALA\x18\x01\x20\x01(\rR\x0bMJFKFEIC\
    ALA\x12.\n\x0bMHLBCKDCBOC\x18\x08\x20\x01(\x0b2\x0c.BIGHEDAMILLR\x0bMHLB\
    CKDCBOC\x12\x20\n\x0bHHLBDGMIBNP\x18\x07\x20\x01(\rR\x0bHHLBDGMIBNP\x121\
    \n\x0bHDMLDOHACDJ\x18\r\x20\x03(\x0b2\x0f.PlaySkillBriefR\x0bHDMLDOHACDJ\
    \x12\x20\n\x0bAAIJABGNADA\x18\x05\x20\x01(\rR\x0bAAIJABGNADA\x12.\n\x0bA\
    JLGIFPHCCB\x18\x0b\x20\x01(\x0b2\x0c.PIHEPMKCGCIR\x0bAJLGIFPHCCB\x12.\n\
    \x0bEOBJCDFPEAO\x18\n\x20\x03(\x0b2\x0c.DDOLOAHPEGOR\x0bEOBJCDFPEAO\x12.\
    \n\x0bHGMDJHLBIGO\x18\x0c\x20\x03(\x0b2\x0c.AKLFLFOPLFKR\x0bHGMDJHLBIGO\
    \x120\n\x0bFIGIABJFGCM\x18\x0e\x20\x03(\x0b2\x0e.PlayCardBriefR\x0bFIGIA\
    BJFGCM\x12.\n\x0bIOOHLIGKAJC\x18\x06\x20\x01(\x0e2\x0c.OMNIKCCCOPNR\x0bI\
    OOHLIGKAJCb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(7);
            deps.push(super::AKLFLFOPLFK::file_descriptor().clone());
            deps.push(super::BIGHEDAMILL::file_descriptor().clone());
            deps.push(super::DDOLOAHPEGO::file_descriptor().clone());
            deps.push(super::OMNIKCCCOPN::file_descriptor().clone());
            deps.push(super::PIHEPMKCGCI::file_descriptor().clone());
            deps.push(super::PlayCardBrief::file_descriptor().clone());
            deps.push(super::PlaySkillBrief::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(HCOHPHFOHAE::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
