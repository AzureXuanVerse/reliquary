// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `PVEBattleResultScRsp.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:PVEBattleResultScRsp)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct PVEBattleResultScRsp {
    // message fields
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IDIEPEFFGIC)
    pub IDIEPEFFGIC: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.KEEIDHOGDNJ)
    pub KEEIDHOGDNJ: ::std::vec::Vec<super::EHCKKBFHGBA::EHCKKBFHGBA>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.OBGBHPKLPJH)
    pub OBGBHPKLPJH: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.KJDEHPLABCI)
    pub KJDEHPLABCI: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.FCDOMFFBGMJ)
    pub FCDOMFFBGMJ: ::std::string::String,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.ANJKLCMKJPM)
    pub ANJKLCMKJPM: bool,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.NMECFAJBCIB)
    pub NMECFAJBCIB: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.HPCEIOOBOBO)
    pub HPCEIOOBOBO: ::std::string::String,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.PLBCDDFMFIO)
    pub PLBCDDFMFIO: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IDNGMOCHBOO)
    pub IDNGMOCHBOO: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.PBFCIEFMDKP)
    pub PBFCIEFMDKP: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IJEPENGMPLG)
    pub IJEPENGMPLG: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.DAAIBKIKBEJ)
    pub DAAIBKIKBEJ: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IKPJKDLJCEA)
    pub IKPJKDLJCEA: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.MHFKKEAJPJI)
    pub MHFKKEAJPJI: ::protobuf::EnumOrUnknown<super::MHNHDNOPKML::MHNHDNOPKML>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.retcode)
    pub retcode: u32,
    // special fields
    // @@protoc_insertion_point(special_field:PVEBattleResultScRsp.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a PVEBattleResultScRsp {
    fn default() -> &'a PVEBattleResultScRsp {
        <PVEBattleResultScRsp as ::protobuf::Message>::default_instance()
    }
}

impl PVEBattleResultScRsp {
    pub fn new() -> PVEBattleResultScRsp {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(16);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IDIEPEFFGIC",
            |m: &PVEBattleResultScRsp| { &m.IDIEPEFFGIC },
            |m: &mut PVEBattleResultScRsp| { &mut m.IDIEPEFFGIC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KEEIDHOGDNJ",
            |m: &PVEBattleResultScRsp| { &m.KEEIDHOGDNJ },
            |m: &mut PVEBattleResultScRsp| { &mut m.KEEIDHOGDNJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OBGBHPKLPJH",
            |m: &PVEBattleResultScRsp| { &m.OBGBHPKLPJH },
            |m: &mut PVEBattleResultScRsp| { &mut m.OBGBHPKLPJH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KJDEHPLABCI",
            |m: &PVEBattleResultScRsp| { &m.KJDEHPLABCI },
            |m: &mut PVEBattleResultScRsp| { &mut m.KJDEHPLABCI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FCDOMFFBGMJ",
            |m: &PVEBattleResultScRsp| { &m.FCDOMFFBGMJ },
            |m: &mut PVEBattleResultScRsp| { &mut m.FCDOMFFBGMJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ANJKLCMKJPM",
            |m: &PVEBattleResultScRsp| { &m.ANJKLCMKJPM },
            |m: &mut PVEBattleResultScRsp| { &mut m.ANJKLCMKJPM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "NMECFAJBCIB",
            |m: &PVEBattleResultScRsp| { &m.NMECFAJBCIB },
            |m: &mut PVEBattleResultScRsp| { &mut m.NMECFAJBCIB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HPCEIOOBOBO",
            |m: &PVEBattleResultScRsp| { &m.HPCEIOOBOBO },
            |m: &mut PVEBattleResultScRsp| { &mut m.HPCEIOOBOBO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PLBCDDFMFIO",
            |m: &PVEBattleResultScRsp| { &m.PLBCDDFMFIO },
            |m: &mut PVEBattleResultScRsp| { &mut m.PLBCDDFMFIO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "IDNGMOCHBOO",
            |m: &PVEBattleResultScRsp| { &m.IDNGMOCHBOO },
            |m: &mut PVEBattleResultScRsp| { &mut m.IDNGMOCHBOO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "PBFCIEFMDKP",
            |m: &PVEBattleResultScRsp| { &m.PBFCIEFMDKP },
            |m: &mut PVEBattleResultScRsp| { &mut m.PBFCIEFMDKP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IJEPENGMPLG",
            |m: &PVEBattleResultScRsp| { &m.IJEPENGMPLG },
            |m: &mut PVEBattleResultScRsp| { &mut m.IJEPENGMPLG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DAAIBKIKBEJ",
            |m: &PVEBattleResultScRsp| { &m.DAAIBKIKBEJ },
            |m: &mut PVEBattleResultScRsp| { &mut m.DAAIBKIKBEJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "IKPJKDLJCEA",
            |m: &PVEBattleResultScRsp| { &m.IKPJKDLJCEA },
            |m: &mut PVEBattleResultScRsp| { &mut m.IKPJKDLJCEA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MHFKKEAJPJI",
            |m: &PVEBattleResultScRsp| { &m.MHFKKEAJPJI },
            |m: &mut PVEBattleResultScRsp| { &mut m.MHFKKEAJPJI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "retcode",
            |m: &PVEBattleResultScRsp| { &m.retcode },
            |m: &mut PVEBattleResultScRsp| { &mut m.retcode },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<PVEBattleResultScRsp>(
            "PVEBattleResultScRsp",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for PVEBattleResultScRsp {
    const NAME: &'static str = "PVEBattleResultScRsp";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                16 => {
                    self.IDIEPEFFGIC = is.read_uint32()?;
                },
                58 => {
                    self.KEEIDHOGDNJ.push(is.read_message()?);
                },
                88 => {
                    self.OBGBHPKLPJH = is.read_uint32()?;
                },
                104 => {
                    self.KJDEHPLABCI = is.read_uint32()?;
                },
                82 => {
                    self.FCDOMFFBGMJ = is.read_string()?;
                },
                32 => {
                    self.ANJKLCMKJPM = is.read_bool()?;
                },
                98 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NMECFAJBCIB)?;
                },
                50 => {
                    self.HPCEIOOBOBO = is.read_string()?;
                },
                40 => {
                    self.PLBCDDFMFIO = is.read_uint32()?;
                },
                10 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IDNGMOCHBOO)?;
                },
                9162 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.PBFCIEFMDKP)?;
                },
                24 => {
                    self.IJEPENGMPLG = is.read_uint32()?;
                },
                64 => {
                    self.DAAIBKIKBEJ = is.read_uint32()?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IKPJKDLJCEA)?;
                },
                120 => {
                    self.MHFKKEAJPJI = is.read_enum_or_unknown()?;
                },
                112 => {
                    self.retcode = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.IDIEPEFFGIC != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.IDIEPEFFGIC);
        }
        for value in &self.KEEIDHOGDNJ {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OBGBHPKLPJH != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.OBGBHPKLPJH);
        }
        if self.KJDEHPLABCI != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.KJDEHPLABCI);
        }
        if !self.FCDOMFFBGMJ.is_empty() {
            my_size += ::protobuf::rt::string_size(10, &self.FCDOMFFBGMJ);
        }
        if self.ANJKLCMKJPM != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.NMECFAJBCIB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if !self.HPCEIOOBOBO.is_empty() {
            my_size += ::protobuf::rt::string_size(6, &self.HPCEIOOBOBO);
        }
        if self.PLBCDDFMFIO != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.PLBCDDFMFIO);
        }
        if let Some(v) = self.IDNGMOCHBOO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.PBFCIEFMDKP.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.IJEPENGMPLG != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.IJEPENGMPLG);
        }
        if self.DAAIBKIKBEJ != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.DAAIBKIKBEJ);
        }
        if let Some(v) = self.IKPJKDLJCEA.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.MHFKKEAJPJI != ::protobuf::EnumOrUnknown::new(super::MHNHDNOPKML::MHNHDNOPKML::BATTLE_END_NONE) {
            my_size += ::protobuf::rt::int32_size(15, self.MHFKKEAJPJI.value());
        }
        if self.retcode != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.retcode);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.IDIEPEFFGIC != 0 {
            os.write_uint32(2, self.IDIEPEFFGIC)?;
        }
        for v in &self.KEEIDHOGDNJ {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        };
        if self.OBGBHPKLPJH != 0 {
            os.write_uint32(11, self.OBGBHPKLPJH)?;
        }
        if self.KJDEHPLABCI != 0 {
            os.write_uint32(13, self.KJDEHPLABCI)?;
        }
        if !self.FCDOMFFBGMJ.is_empty() {
            os.write_string(10, &self.FCDOMFFBGMJ)?;
        }
        if self.ANJKLCMKJPM != false {
            os.write_bool(4, self.ANJKLCMKJPM)?;
        }
        if let Some(v) = self.NMECFAJBCIB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        }
        if !self.HPCEIOOBOBO.is_empty() {
            os.write_string(6, &self.HPCEIOOBOBO)?;
        }
        if self.PLBCDDFMFIO != 0 {
            os.write_uint32(5, self.PLBCDDFMFIO)?;
        }
        if let Some(v) = self.IDNGMOCHBOO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        }
        if let Some(v) = self.PBFCIEFMDKP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1145, v, os)?;
        }
        if self.IJEPENGMPLG != 0 {
            os.write_uint32(3, self.IJEPENGMPLG)?;
        }
        if self.DAAIBKIKBEJ != 0 {
            os.write_uint32(8, self.DAAIBKIKBEJ)?;
        }
        if let Some(v) = self.IKPJKDLJCEA.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if self.MHFKKEAJPJI != ::protobuf::EnumOrUnknown::new(super::MHNHDNOPKML::MHNHDNOPKML::BATTLE_END_NONE) {
            os.write_enum(15, ::protobuf::EnumOrUnknown::value(&self.MHFKKEAJPJI))?;
        }
        if self.retcode != 0 {
            os.write_uint32(14, self.retcode)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> PVEBattleResultScRsp {
        PVEBattleResultScRsp::new()
    }

    fn clear(&mut self) {
        self.IDIEPEFFGIC = 0;
        self.KEEIDHOGDNJ.clear();
        self.OBGBHPKLPJH = 0;
        self.KJDEHPLABCI = 0;
        self.FCDOMFFBGMJ.clear();
        self.ANJKLCMKJPM = false;
        self.NMECFAJBCIB.clear();
        self.HPCEIOOBOBO.clear();
        self.PLBCDDFMFIO = 0;
        self.IDNGMOCHBOO.clear();
        self.PBFCIEFMDKP.clear();
        self.IJEPENGMPLG = 0;
        self.DAAIBKIKBEJ = 0;
        self.IKPJKDLJCEA.clear();
        self.MHFKKEAJPJI = ::protobuf::EnumOrUnknown::new(super::MHNHDNOPKML::MHNHDNOPKML::BATTLE_END_NONE);
        self.retcode = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static PVEBattleResultScRsp {
        static instance: PVEBattleResultScRsp = PVEBattleResultScRsp {
            IDIEPEFFGIC: 0,
            KEEIDHOGDNJ: ::std::vec::Vec::new(),
            OBGBHPKLPJH: 0,
            KJDEHPLABCI: 0,
            FCDOMFFBGMJ: ::std::string::String::new(),
            ANJKLCMKJPM: false,
            NMECFAJBCIB: ::protobuf::MessageField::none(),
            HPCEIOOBOBO: ::std::string::String::new(),
            PLBCDDFMFIO: 0,
            IDNGMOCHBOO: ::protobuf::MessageField::none(),
            PBFCIEFMDKP: ::protobuf::MessageField::none(),
            IJEPENGMPLG: 0,
            DAAIBKIKBEJ: 0,
            IKPJKDLJCEA: ::protobuf::MessageField::none(),
            MHFKKEAJPJI: ::protobuf::EnumOrUnknown::from_i32(0),
            retcode: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for PVEBattleResultScRsp {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("PVEBattleResultScRsp").unwrap()).clone()
    }
}

impl ::std::fmt::Display for PVEBattleResultScRsp {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for PVEBattleResultScRsp {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1aPVEBattleResultScRsp.proto\x1a\x11EHCKKBFHGBA.proto\x1a\x0eItemLis\
    t.proto\x1a\x11MHNHDNOPKML.proto\"\xf7\x04\n\x14PVEBattleResultScRsp\x12\
    \x20\n\x0bIDIEPEFFGIC\x18\x02\x20\x01(\rR\x0bIDIEPEFFGIC\x12.\n\x0bKEEID\
    HOGDNJ\x18\x07\x20\x03(\x0b2\x0c.EHCKKBFHGBAR\x0bKEEIDHOGDNJ\x12\x20\n\
    \x0bOBGBHPKLPJH\x18\x0b\x20\x01(\rR\x0bOBGBHPKLPJH\x12\x20\n\x0bKJDEHPLA\
    BCI\x18\r\x20\x01(\rR\x0bKJDEHPLABCI\x12\x20\n\x0bFCDOMFFBGMJ\x18\n\x20\
    \x01(\tR\x0bFCDOMFFBGMJ\x12\x20\n\x0bANJKLCMKJPM\x18\x04\x20\x01(\x08R\
    \x0bANJKLCMKJPM\x12+\n\x0bNMECFAJBCIB\x18\x0c\x20\x01(\x0b2\t.ItemListR\
    \x0bNMECFAJBCIB\x12\x20\n\x0bHPCEIOOBOBO\x18\x06\x20\x01(\tR\x0bHPCEIOOB\
    OBO\x12\x20\n\x0bPLBCDDFMFIO\x18\x05\x20\x01(\rR\x0bPLBCDDFMFIO\x12+\n\
    \x0bIDNGMOCHBOO\x18\x01\x20\x01(\x0b2\t.ItemListR\x0bIDNGMOCHBOO\x12,\n\
    \x0bPBFCIEFMDKP\x18\xf9\x08\x20\x01(\x0b2\t.ItemListR\x0bPBFCIEFMDKP\x12\
    \x20\n\x0bIJEPENGMPLG\x18\x03\x20\x01(\rR\x0bIJEPENGMPLG\x12\x20\n\x0bDA\
    AIBKIKBEJ\x18\x08\x20\x01(\rR\x0bDAAIBKIKBEJ\x12+\n\x0bIKPJKDLJCEA\x18\t\
    \x20\x01(\x0b2\t.ItemListR\x0bIKPJKDLJCEA\x12.\n\x0bMHFKKEAJPJI\x18\x0f\
    \x20\x01(\x0e2\x0c.MHNHDNOPKMLR\x0bMHFKKEAJPJI\x12\x18\n\x07retcode\x18\
    \x0e\x20\x01(\rR\x07retcodeb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(3);
            deps.push(super::EHCKKBFHGBA::file_descriptor().clone());
            deps.push(super::ItemList::file_descriptor().clone());
            deps.push(super::MHNHDNOPKML::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(PVEBattleResultScRsp::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
