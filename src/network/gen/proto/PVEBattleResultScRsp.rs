// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `PVEBattleResultScRsp.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:PVEBattleResultScRsp)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct PVEBattleResultScRsp {
    // message fields
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.CLEBBKOIOHJ)
    pub CLEBBKOIOHJ: ::std::string::String,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.retcode)
    pub retcode: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.CEBNDLGFFEC)
    pub CEBNDLGFFEC: ::protobuf::EnumOrUnknown<super::BOCMMBMNBCK::BOCMMBMNBCK>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.HCMKAKBEHDN)
    pub HCMKAKBEHDN: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.MFJLJKCMIOL)
    pub MFJLJKCMIOL: bool,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.GCMFMLDNLDM)
    pub GCMFMLDNLDM: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.DFMOOFMJPKE)
    pub DFMOOFMJPKE: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.LKFNJAKABLB)
    pub LKFNJAKABLB: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IEINOEFBLLP)
    pub IEINOEFBLLP: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.JIGKOPPBLCA)
    pub JIGKOPPBLCA: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.OGFBGJCMLKJ)
    pub OGFBGJCMLKJ: ::std::vec::Vec<super::NPFHEFGPJMB::NPFHEFGPJMB>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.LFHBHKHMNED)
    pub LFHBHKHMNED: ::std::string::String,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.IFJLJADPFDG)
    pub IFJLJADPFDG: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.NJGHCPIJDGI)
    pub NJGHCPIJDGI: u32,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.CLLOKODKPAP)
    pub CLLOKODKPAP: ::protobuf::MessageField<super::ItemList::ItemList>,
    // @@protoc_insertion_point(field:PVEBattleResultScRsp.EEBBMNLACMG)
    pub EEBBMNLACMG: ::protobuf::MessageField<super::ItemList::ItemList>,
    // special fields
    // @@protoc_insertion_point(special_field:PVEBattleResultScRsp.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a PVEBattleResultScRsp {
    fn default() -> &'a PVEBattleResultScRsp {
        <PVEBattleResultScRsp as ::protobuf::Message>::default_instance()
    }
}

impl PVEBattleResultScRsp {
    pub fn new() -> PVEBattleResultScRsp {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(16);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CLEBBKOIOHJ",
            |m: &PVEBattleResultScRsp| { &m.CLEBBKOIOHJ },
            |m: &mut PVEBattleResultScRsp| { &mut m.CLEBBKOIOHJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "retcode",
            |m: &PVEBattleResultScRsp| { &m.retcode },
            |m: &mut PVEBattleResultScRsp| { &mut m.retcode },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CEBNDLGFFEC",
            |m: &PVEBattleResultScRsp| { &m.CEBNDLGFFEC },
            |m: &mut PVEBattleResultScRsp| { &mut m.CEBNDLGFFEC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HCMKAKBEHDN",
            |m: &PVEBattleResultScRsp| { &m.HCMKAKBEHDN },
            |m: &mut PVEBattleResultScRsp| { &mut m.HCMKAKBEHDN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MFJLJKCMIOL",
            |m: &PVEBattleResultScRsp| { &m.MFJLJKCMIOL },
            |m: &mut PVEBattleResultScRsp| { &mut m.MFJLJKCMIOL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GCMFMLDNLDM",
            |m: &PVEBattleResultScRsp| { &m.GCMFMLDNLDM },
            |m: &mut PVEBattleResultScRsp| { &mut m.GCMFMLDNLDM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DFMOOFMJPKE",
            |m: &PVEBattleResultScRsp| { &m.DFMOOFMJPKE },
            |m: &mut PVEBattleResultScRsp| { &mut m.DFMOOFMJPKE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LKFNJAKABLB",
            |m: &PVEBattleResultScRsp| { &m.LKFNJAKABLB },
            |m: &mut PVEBattleResultScRsp| { &mut m.LKFNJAKABLB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "IEINOEFBLLP",
            |m: &PVEBattleResultScRsp| { &m.IEINOEFBLLP },
            |m: &mut PVEBattleResultScRsp| { &mut m.IEINOEFBLLP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIGKOPPBLCA",
            |m: &PVEBattleResultScRsp| { &m.JIGKOPPBLCA },
            |m: &mut PVEBattleResultScRsp| { &mut m.JIGKOPPBLCA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "OGFBGJCMLKJ",
            |m: &PVEBattleResultScRsp| { &m.OGFBGJCMLKJ },
            |m: &mut PVEBattleResultScRsp| { &mut m.OGFBGJCMLKJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LFHBHKHMNED",
            |m: &PVEBattleResultScRsp| { &m.LFHBHKHMNED },
            |m: &mut PVEBattleResultScRsp| { &mut m.LFHBHKHMNED },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "IFJLJADPFDG",
            |m: &PVEBattleResultScRsp| { &m.IFJLJADPFDG },
            |m: &mut PVEBattleResultScRsp| { &mut m.IFJLJADPFDG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NJGHCPIJDGI",
            |m: &PVEBattleResultScRsp| { &m.NJGHCPIJDGI },
            |m: &mut PVEBattleResultScRsp| { &mut m.NJGHCPIJDGI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "CLLOKODKPAP",
            |m: &PVEBattleResultScRsp| { &m.CLLOKODKPAP },
            |m: &mut PVEBattleResultScRsp| { &mut m.CLLOKODKPAP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ItemList::ItemList>(
            "EEBBMNLACMG",
            |m: &PVEBattleResultScRsp| { &m.EEBBMNLACMG },
            |m: &mut PVEBattleResultScRsp| { &mut m.EEBBMNLACMG },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<PVEBattleResultScRsp>(
            "PVEBattleResultScRsp",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for PVEBattleResultScRsp {
    const NAME: &'static str = "PVEBattleResultScRsp";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                122 => {
                    self.CLEBBKOIOHJ = is.read_string()?;
                },
                112 => {
                    self.retcode = is.read_uint32()?;
                },
                8 => {
                    self.CEBNDLGFFEC = is.read_enum_or_unknown()?;
                },
                80 => {
                    self.HCMKAKBEHDN = is.read_uint32()?;
                },
                32 => {
                    self.MFJLJKCMIOL = is.read_bool()?;
                },
                72 => {
                    self.GCMFMLDNLDM = is.read_uint32()?;
                },
                24 => {
                    self.DFMOOFMJPKE = is.read_uint32()?;
                },
                40 => {
                    self.LKFNJAKABLB = is.read_uint32()?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IEINOEFBLLP)?;
                },
                48 => {
                    self.JIGKOPPBLCA = is.read_uint32()?;
                },
                58 => {
                    self.OGFBGJCMLKJ.push(is.read_message()?);
                },
                98 => {
                    self.LFHBHKHMNED = is.read_string()?;
                },
                11138 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IFJLJADPFDG)?;
                },
                104 => {
                    self.NJGHCPIJDGI = is.read_uint32()?;
                },
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CLLOKODKPAP)?;
                },
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EEBBMNLACMG)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if !self.CLEBBKOIOHJ.is_empty() {
            my_size += ::protobuf::rt::string_size(15, &self.CLEBBKOIOHJ);
        }
        if self.retcode != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.retcode);
        }
        if self.CEBNDLGFFEC != ::protobuf::EnumOrUnknown::new(super::BOCMMBMNBCK::BOCMMBMNBCK::BATTLE_END_NONE) {
            my_size += ::protobuf::rt::int32_size(1, self.CEBNDLGFFEC.value());
        }
        if self.HCMKAKBEHDN != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.HCMKAKBEHDN);
        }
        if self.MFJLJKCMIOL != false {
            my_size += 1 + 1;
        }
        if self.GCMFMLDNLDM != 0 {
            my_size += ::protobuf::rt::uint32_size(9, self.GCMFMLDNLDM);
        }
        if self.DFMOOFMJPKE != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.DFMOOFMJPKE);
        }
        if self.LKFNJAKABLB != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.LKFNJAKABLB);
        }
        if let Some(v) = self.IEINOEFBLLP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.JIGKOPPBLCA != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.JIGKOPPBLCA);
        }
        for value in &self.OGFBGJCMLKJ {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.LFHBHKHMNED.is_empty() {
            my_size += ::protobuf::rt::string_size(12, &self.LFHBHKHMNED);
        }
        if let Some(v) = self.IFJLJADPFDG.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.NJGHCPIJDGI != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.NJGHCPIJDGI);
        }
        if let Some(v) = self.CLLOKODKPAP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.EEBBMNLACMG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if !self.CLEBBKOIOHJ.is_empty() {
            os.write_string(15, &self.CLEBBKOIOHJ)?;
        }
        if self.retcode != 0 {
            os.write_uint32(14, self.retcode)?;
        }
        if self.CEBNDLGFFEC != ::protobuf::EnumOrUnknown::new(super::BOCMMBMNBCK::BOCMMBMNBCK::BATTLE_END_NONE) {
            os.write_enum(1, ::protobuf::EnumOrUnknown::value(&self.CEBNDLGFFEC))?;
        }
        if self.HCMKAKBEHDN != 0 {
            os.write_uint32(10, self.HCMKAKBEHDN)?;
        }
        if self.MFJLJKCMIOL != false {
            os.write_bool(4, self.MFJLJKCMIOL)?;
        }
        if self.GCMFMLDNLDM != 0 {
            os.write_uint32(9, self.GCMFMLDNLDM)?;
        }
        if self.DFMOOFMJPKE != 0 {
            os.write_uint32(3, self.DFMOOFMJPKE)?;
        }
        if self.LKFNJAKABLB != 0 {
            os.write_uint32(5, self.LKFNJAKABLB)?;
        }
        if let Some(v) = self.IEINOEFBLLP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if self.JIGKOPPBLCA != 0 {
            os.write_uint32(6, self.JIGKOPPBLCA)?;
        }
        for v in &self.OGFBGJCMLKJ {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        };
        if !self.LFHBHKHMNED.is_empty() {
            os.write_string(12, &self.LFHBHKHMNED)?;
        }
        if let Some(v) = self.IFJLJADPFDG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1392, v, os)?;
        }
        if self.NJGHCPIJDGI != 0 {
            os.write_uint32(13, self.NJGHCPIJDGI)?;
        }
        if let Some(v) = self.CLLOKODKPAP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.EEBBMNLACMG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> PVEBattleResultScRsp {
        PVEBattleResultScRsp::new()
    }

    fn clear(&mut self) {
        self.CLEBBKOIOHJ.clear();
        self.retcode = 0;
        self.CEBNDLGFFEC = ::protobuf::EnumOrUnknown::new(super::BOCMMBMNBCK::BOCMMBMNBCK::BATTLE_END_NONE);
        self.HCMKAKBEHDN = 0;
        self.MFJLJKCMIOL = false;
        self.GCMFMLDNLDM = 0;
        self.DFMOOFMJPKE = 0;
        self.LKFNJAKABLB = 0;
        self.IEINOEFBLLP.clear();
        self.JIGKOPPBLCA = 0;
        self.OGFBGJCMLKJ.clear();
        self.LFHBHKHMNED.clear();
        self.IFJLJADPFDG.clear();
        self.NJGHCPIJDGI = 0;
        self.CLLOKODKPAP.clear();
        self.EEBBMNLACMG.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static PVEBattleResultScRsp {
        static instance: PVEBattleResultScRsp = PVEBattleResultScRsp {
            CLEBBKOIOHJ: ::std::string::String::new(),
            retcode: 0,
            CEBNDLGFFEC: ::protobuf::EnumOrUnknown::from_i32(0),
            HCMKAKBEHDN: 0,
            MFJLJKCMIOL: false,
            GCMFMLDNLDM: 0,
            DFMOOFMJPKE: 0,
            LKFNJAKABLB: 0,
            IEINOEFBLLP: ::protobuf::MessageField::none(),
            JIGKOPPBLCA: 0,
            OGFBGJCMLKJ: ::std::vec::Vec::new(),
            LFHBHKHMNED: ::std::string::String::new(),
            IFJLJADPFDG: ::protobuf::MessageField::none(),
            NJGHCPIJDGI: 0,
            CLLOKODKPAP: ::protobuf::MessageField::none(),
            EEBBMNLACMG: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for PVEBattleResultScRsp {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("PVEBattleResultScRsp").unwrap()).clone()
    }
}

impl ::std::fmt::Display for PVEBattleResultScRsp {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for PVEBattleResultScRsp {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1aPVEBattleResultScRsp.proto\x1a\x11BOCMMBMNBCK.proto\x1a\x0eItemLis\
    t.proto\x1a\x11NPFHEFGPJMB.proto\"\xf7\x04\n\x14PVEBattleResultScRsp\x12\
    \x20\n\x0bCLEBBKOIOHJ\x18\x0f\x20\x01(\tR\x0bCLEBBKOIOHJ\x12\x18\n\x07re\
    tcode\x18\x0e\x20\x01(\rR\x07retcode\x12.\n\x0bCEBNDLGFFEC\x18\x01\x20\
    \x01(\x0e2\x0c.BOCMMBMNBCKR\x0bCEBNDLGFFEC\x12\x20\n\x0bHCMKAKBEHDN\x18\
    \n\x20\x01(\rR\x0bHCMKAKBEHDN\x12\x20\n\x0bMFJLJKCMIOL\x18\x04\x20\x01(\
    \x08R\x0bMFJLJKCMIOL\x12\x20\n\x0bGCMFMLDNLDM\x18\t\x20\x01(\rR\x0bGCMFM\
    LDNLDM\x12\x20\n\x0bDFMOOFMJPKE\x18\x03\x20\x01(\rR\x0bDFMOOFMJPKE\x12\
    \x20\n\x0bLKFNJAKABLB\x18\x05\x20\x01(\rR\x0bLKFNJAKABLB\x12+\n\x0bIEINO\
    EFBLLP\x18\x08\x20\x01(\x0b2\t.ItemListR\x0bIEINOEFBLLP\x12\x20\n\x0bJIG\
    KOPPBLCA\x18\x06\x20\x01(\rR\x0bJIGKOPPBLCA\x12.\n\x0bOGFBGJCMLKJ\x18\
    \x07\x20\x03(\x0b2\x0c.NPFHEFGPJMBR\x0bOGFBGJCMLKJ\x12\x20\n\x0bLFHBHKHM\
    NED\x18\x0c\x20\x01(\tR\x0bLFHBHKHMNED\x12,\n\x0bIFJLJADPFDG\x18\xf0\n\
    \x20\x01(\x0b2\t.ItemListR\x0bIFJLJADPFDG\x12\x20\n\x0bNJGHCPIJDGI\x18\r\
    \x20\x01(\rR\x0bNJGHCPIJDGI\x12+\n\x0bCLLOKODKPAP\x18\x02\x20\x01(\x0b2\
    \t.ItemListR\x0bCLLOKODKPAP\x12+\n\x0bEEBBMNLACMG\x18\x0b\x20\x01(\x0b2\
    \t.ItemListR\x0bEEBBMNLACMGb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(3);
            deps.push(super::BOCMMBMNBCK::file_descriptor().clone());
            deps.push(super::ItemList::file_descriptor().clone());
            deps.push(super::NPFHEFGPJMB::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(PVEBattleResultScRsp::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
