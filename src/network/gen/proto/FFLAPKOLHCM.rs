// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `FFLAPKOLHCM.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:FFLAPKOLHCM)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct FFLAPKOLHCM {
    // message fields
    // @@protoc_insertion_point(field:FFLAPKOLHCM.OFOLHKCNLBA)
    pub OFOLHKCNLBA: ::protobuf::MessageField<super::AJCNDBHNLFL::AJCNDBHNLFL>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.FIOCABCBNKB)
    pub FIOCABCBNKB: ::protobuf::MessageField<super::HIJKILGJCLP::HIJKILGJCLP>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.AIAONPFBGNG)
    pub AIAONPFBGNG: ::protobuf::MessageField<super::OALOINNAINI::OALOINNAINI>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.KNDMEILHKEJ)
    pub KNDMEILHKEJ: ::protobuf::MessageField<super::KFPMAIAADMO::KFPMAIAADMO>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.IBMIOGGKBFB)
    pub IBMIOGGKBFB: ::protobuf::MessageField<super::OCBCBIDLLLJ::OCBCBIDLLLJ>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.CHMHPCNGFAO)
    pub CHMHPCNGFAO: ::protobuf::MessageField<super::CJEMBCBCBKJ::CJEMBCBCBKJ>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.EEPPKMPAJOH)
    pub EEPPKMPAJOH: ::protobuf::MessageField<super::NKIDDDPFLJE::NKIDDDPFLJE>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.AABCHFBKPEG)
    pub AABCHFBKPEG: ::protobuf::MessageField<super::BCLLBMEEDKP::BCLLBMEEDKP>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.LMGKMAOICGC)
    pub LMGKMAOICGC: ::protobuf::MessageField<super::AFABKDEFDDG::AFABKDEFDDG>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.MLPOAPMOEHA)
    pub MLPOAPMOEHA: ::protobuf::MessageField<super::HKMLALBDPGO::HKMLALBDPGO>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.LGOPNBHHHBG)
    pub LGOPNBHHHBG: ::protobuf::MessageField<super::KCACNHCADEC::KCACNHCADEC>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.OPAKJJMAGPH)
    pub OPAKJJMAGPH: ::protobuf::MessageField<super::IMNPEAJAJJO::IMNPEAJAJJO>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.EMBAGMMHIPA)
    pub EMBAGMMHIPA: ::protobuf::MessageField<super::IEGMFGPFADL::IEGMFGPFADL>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.BIPHNGCADDE)
    pub BIPHNGCADDE: ::std::vec::Vec<super::LGKGEHHAJJE::LGKGEHHAJJE>,
    // @@protoc_insertion_point(field:FFLAPKOLHCM.BNGFAIGNPHE)
    pub BNGFAIGNPHE: u32,
    // special fields
    // @@protoc_insertion_point(special_field:FFLAPKOLHCM.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a FFLAPKOLHCM {
    fn default() -> &'a FFLAPKOLHCM {
        <FFLAPKOLHCM as ::protobuf::Message>::default_instance()
    }
}

impl FFLAPKOLHCM {
    pub fn new() -> FFLAPKOLHCM {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(15);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AJCNDBHNLFL::AJCNDBHNLFL>(
            "OFOLHKCNLBA",
            |m: &FFLAPKOLHCM| { &m.OFOLHKCNLBA },
            |m: &mut FFLAPKOLHCM| { &mut m.OFOLHKCNLBA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HIJKILGJCLP::HIJKILGJCLP>(
            "FIOCABCBNKB",
            |m: &FFLAPKOLHCM| { &m.FIOCABCBNKB },
            |m: &mut FFLAPKOLHCM| { &mut m.FIOCABCBNKB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::OALOINNAINI::OALOINNAINI>(
            "AIAONPFBGNG",
            |m: &FFLAPKOLHCM| { &m.AIAONPFBGNG },
            |m: &mut FFLAPKOLHCM| { &mut m.AIAONPFBGNG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KFPMAIAADMO::KFPMAIAADMO>(
            "KNDMEILHKEJ",
            |m: &FFLAPKOLHCM| { &m.KNDMEILHKEJ },
            |m: &mut FFLAPKOLHCM| { &mut m.KNDMEILHKEJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::OCBCBIDLLLJ::OCBCBIDLLLJ>(
            "IBMIOGGKBFB",
            |m: &FFLAPKOLHCM| { &m.IBMIOGGKBFB },
            |m: &mut FFLAPKOLHCM| { &mut m.IBMIOGGKBFB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::CJEMBCBCBKJ::CJEMBCBCBKJ>(
            "CHMHPCNGFAO",
            |m: &FFLAPKOLHCM| { &m.CHMHPCNGFAO },
            |m: &mut FFLAPKOLHCM| { &mut m.CHMHPCNGFAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NKIDDDPFLJE::NKIDDDPFLJE>(
            "EEPPKMPAJOH",
            |m: &FFLAPKOLHCM| { &m.EEPPKMPAJOH },
            |m: &mut FFLAPKOLHCM| { &mut m.EEPPKMPAJOH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BCLLBMEEDKP::BCLLBMEEDKP>(
            "AABCHFBKPEG",
            |m: &FFLAPKOLHCM| { &m.AABCHFBKPEG },
            |m: &mut FFLAPKOLHCM| { &mut m.AABCHFBKPEG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::AFABKDEFDDG::AFABKDEFDDG>(
            "LMGKMAOICGC",
            |m: &FFLAPKOLHCM| { &m.LMGKMAOICGC },
            |m: &mut FFLAPKOLHCM| { &mut m.LMGKMAOICGC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HKMLALBDPGO::HKMLALBDPGO>(
            "MLPOAPMOEHA",
            |m: &FFLAPKOLHCM| { &m.MLPOAPMOEHA },
            |m: &mut FFLAPKOLHCM| { &mut m.MLPOAPMOEHA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KCACNHCADEC::KCACNHCADEC>(
            "LGOPNBHHHBG",
            |m: &FFLAPKOLHCM| { &m.LGOPNBHHHBG },
            |m: &mut FFLAPKOLHCM| { &mut m.LGOPNBHHHBG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::IMNPEAJAJJO::IMNPEAJAJJO>(
            "OPAKJJMAGPH",
            |m: &FFLAPKOLHCM| { &m.OPAKJJMAGPH },
            |m: &mut FFLAPKOLHCM| { &mut m.OPAKJJMAGPH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::IEGMFGPFADL::IEGMFGPFADL>(
            "EMBAGMMHIPA",
            |m: &FFLAPKOLHCM| { &m.EMBAGMMHIPA },
            |m: &mut FFLAPKOLHCM| { &mut m.EMBAGMMHIPA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "BIPHNGCADDE",
            |m: &FFLAPKOLHCM| { &m.BIPHNGCADDE },
            |m: &mut FFLAPKOLHCM| { &mut m.BIPHNGCADDE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BNGFAIGNPHE",
            |m: &FFLAPKOLHCM| { &m.BNGFAIGNPHE },
            |m: &mut FFLAPKOLHCM| { &mut m.BNGFAIGNPHE },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<FFLAPKOLHCM>(
            "FFLAPKOLHCM",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for FFLAPKOLHCM {
    const NAME: &'static str = "FFLAPKOLHCM";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OFOLHKCNLBA)?;
                },
                13514 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.FIOCABCBNKB)?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AIAONPFBGNG)?;
                },
                122 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KNDMEILHKEJ)?;
                },
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.IBMIOGGKBFB)?;
                },
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CHMHPCNGFAO)?;
                },
                58 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EEPPKMPAJOH)?;
                },
                82 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AABCHFBKPEG)?;
                },
                106 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LMGKMAOICGC)?;
                },
                90 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.MLPOAPMOEHA)?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LGOPNBHHHBG)?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OPAKJJMAGPH)?;
                },
                26 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.EMBAGMMHIPA)?;
                },
                98 => {
                    self.BIPHNGCADDE.push(is.read_message()?);
                },
                32 => {
                    self.BNGFAIGNPHE = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.OFOLHKCNLBA.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.FIOCABCBNKB.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.AIAONPFBGNG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.KNDMEILHKEJ.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.IBMIOGGKBFB.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.CHMHPCNGFAO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.EEPPKMPAJOH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.AABCHFBKPEG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LMGKMAOICGC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.MLPOAPMOEHA.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LGOPNBHHHBG.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.OPAKJJMAGPH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.EMBAGMMHIPA.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.BIPHNGCADDE {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.BNGFAIGNPHE != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.BNGFAIGNPHE);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.OFOLHKCNLBA.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.FIOCABCBNKB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1689, v, os)?;
        }
        if let Some(v) = self.AIAONPFBGNG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.KNDMEILHKEJ.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        }
        if let Some(v) = self.IBMIOGGKBFB.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        if let Some(v) = self.CHMHPCNGFAO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if let Some(v) = self.EEPPKMPAJOH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
        }
        if let Some(v) = self.AABCHFBKPEG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        }
        if let Some(v) = self.LMGKMAOICGC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        }
        if let Some(v) = self.MLPOAPMOEHA.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        }
        if let Some(v) = self.LGOPNBHHHBG.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if let Some(v) = self.OPAKJJMAGPH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if let Some(v) = self.EMBAGMMHIPA.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        }
        for v in &self.BIPHNGCADDE {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.BNGFAIGNPHE != 0 {
            os.write_uint32(4, self.BNGFAIGNPHE)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> FFLAPKOLHCM {
        FFLAPKOLHCM::new()
    }

    fn clear(&mut self) {
        self.OFOLHKCNLBA.clear();
        self.FIOCABCBNKB.clear();
        self.AIAONPFBGNG.clear();
        self.KNDMEILHKEJ.clear();
        self.IBMIOGGKBFB.clear();
        self.CHMHPCNGFAO.clear();
        self.EEPPKMPAJOH.clear();
        self.AABCHFBKPEG.clear();
        self.LMGKMAOICGC.clear();
        self.MLPOAPMOEHA.clear();
        self.LGOPNBHHHBG.clear();
        self.OPAKJJMAGPH.clear();
        self.EMBAGMMHIPA.clear();
        self.BIPHNGCADDE.clear();
        self.BNGFAIGNPHE = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static FFLAPKOLHCM {
        static instance: FFLAPKOLHCM = FFLAPKOLHCM {
            OFOLHKCNLBA: ::protobuf::MessageField::none(),
            FIOCABCBNKB: ::protobuf::MessageField::none(),
            AIAONPFBGNG: ::protobuf::MessageField::none(),
            KNDMEILHKEJ: ::protobuf::MessageField::none(),
            IBMIOGGKBFB: ::protobuf::MessageField::none(),
            CHMHPCNGFAO: ::protobuf::MessageField::none(),
            EEPPKMPAJOH: ::protobuf::MessageField::none(),
            AABCHFBKPEG: ::protobuf::MessageField::none(),
            LMGKMAOICGC: ::protobuf::MessageField::none(),
            MLPOAPMOEHA: ::protobuf::MessageField::none(),
            LGOPNBHHHBG: ::protobuf::MessageField::none(),
            OPAKJJMAGPH: ::protobuf::MessageField::none(),
            EMBAGMMHIPA: ::protobuf::MessageField::none(),
            BIPHNGCADDE: ::std::vec::Vec::new(),
            BNGFAIGNPHE: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for FFLAPKOLHCM {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("FFLAPKOLHCM").unwrap()).clone()
    }
}

impl ::std::fmt::Display for FFLAPKOLHCM {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for FFLAPKOLHCM {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11FFLAPKOLHCM.proto\x1a\x11AFABKDEFDDG.proto\x1a\x11AJCNDBHNLFL.prot\
    o\x1a\x11BCLLBMEEDKP.proto\x1a\x11CJEMBCBCBKJ.proto\x1a\x11HIJKILGJCLP.p\
    roto\x1a\x11HKMLALBDPGO.proto\x1a\x11IEGMFGPFADL.proto\x1a\x11IMNPEAJAJJ\
    O.proto\x1a\x11KCACNHCADEC.proto\x1a\x11KFPMAIAADMO.proto\x1a\x11LGKGEHH\
    AJJE.proto\x1a\x11NKIDDDPFLJE.proto\x1a\x11OALOINNAINI.proto\x1a\x11OCBC\
    BIDLLLJ.proto\"\xd0\x05\n\x0bFFLAPKOLHCM\x12.\n\x0bOFOLHKCNLBA\x18\x02\
    \x20\x01(\x0b2\x0c.AJCNDBHNLFLR\x0bOFOLHKCNLBA\x12/\n\x0bFIOCABCBNKB\x18\
    \x99\r\x20\x01(\x0b2\x0c.HIJKILGJCLPR\x0bFIOCABCBNKB\x12.\n\x0bAIAONPFBG\
    NG\x18\x05\x20\x01(\x0b2\x0c.OALOINNAINIR\x0bAIAONPFBGNG\x12.\n\x0bKNDME\
    ILHKEJ\x18\x0f\x20\x01(\x0b2\x0c.KFPMAIAADMOR\x0bKNDMEILHKEJ\x12.\n\x0bI\
    BMIOGGKBFB\x18\x06\x20\x01(\x0b2\x0c.OCBCBIDLLLJR\x0bIBMIOGGKBFB\x12.\n\
    \x0bCHMHPCNGFAO\x18\x0e\x20\x01(\x0b2\x0c.CJEMBCBCBKJR\x0bCHMHPCNGFAO\
    \x12.\n\x0bEEPPKMPAJOH\x18\x07\x20\x01(\x0b2\x0c.NKIDDDPFLJER\x0bEEPPKMP\
    AJOH\x12.\n\x0bAABCHFBKPEG\x18\n\x20\x01(\x0b2\x0c.BCLLBMEEDKPR\x0bAABCH\
    FBKPEG\x12.\n\x0bLMGKMAOICGC\x18\r\x20\x01(\x0b2\x0c.AFABKDEFDDGR\x0bLMG\
    KMAOICGC\x12.\n\x0bMLPOAPMOEHA\x18\x0b\x20\x01(\x0b2\x0c.HKMLALBDPGOR\
    \x0bMLPOAPMOEHA\x12.\n\x0bLGOPNBHHHBG\x18\t\x20\x01(\x0b2\x0c.KCACNHCADE\
    CR\x0bLGOPNBHHHBG\x12.\n\x0bOPAKJJMAGPH\x18\x08\x20\x01(\x0b2\x0c.IMNPEA\
    JAJJOR\x0bOPAKJJMAGPH\x12.\n\x0bEMBAGMMHIPA\x18\x03\x20\x01(\x0b2\x0c.IE\
    GMFGPFADLR\x0bEMBAGMMHIPA\x12.\n\x0bBIPHNGCADDE\x18\x0c\x20\x03(\x0b2\
    \x0c.LGKGEHHAJJER\x0bBIPHNGCADDE\x12\x20\n\x0bBNGFAIGNPHE\x18\x04\x20\
    \x01(\rR\x0bBNGFAIGNPHEb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(14);
            deps.push(super::AFABKDEFDDG::file_descriptor().clone());
            deps.push(super::AJCNDBHNLFL::file_descriptor().clone());
            deps.push(super::BCLLBMEEDKP::file_descriptor().clone());
            deps.push(super::CJEMBCBCBKJ::file_descriptor().clone());
            deps.push(super::HIJKILGJCLP::file_descriptor().clone());
            deps.push(super::HKMLALBDPGO::file_descriptor().clone());
            deps.push(super::IEGMFGPFADL::file_descriptor().clone());
            deps.push(super::IMNPEAJAJJO::file_descriptor().clone());
            deps.push(super::KCACNHCADEC::file_descriptor().clone());
            deps.push(super::KFPMAIAADMO::file_descriptor().clone());
            deps.push(super::LGKGEHHAJJE::file_descriptor().clone());
            deps.push(super::NKIDDDPFLJE::file_descriptor().clone());
            deps.push(super::OALOINNAINI::file_descriptor().clone());
            deps.push(super::OCBCBIDLLLJ::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(FFLAPKOLHCM::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
