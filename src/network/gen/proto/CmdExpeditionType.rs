// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdExpeditionType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdExpeditionType)
pub enum CmdExpeditionType {
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdExpeditionTypeNone)
    CmdExpeditionTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeMultipleExpeditionRewardCsReq)
    CmdTakeMultipleExpeditionRewardCsReq = 2519,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdCancelActivityExpeditionCsReq)
    CmdCancelActivityExpeditionCsReq = 2574,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptActivityExpeditionScRsp)
    CmdAcceptActivityExpeditionScRsp = 2547,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdGetExpeditionDataScRsp)
    CmdGetExpeditionDataScRsp = 2520,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdExpeditionDataChangeScNotify)
    CmdExpeditionDataChangeScNotify = 2580,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeMultipleActivityExpeditionRewardCsReq)
    CmdTakeMultipleActivityExpeditionRewardCsReq = 2525,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeExpeditionRewardScRsp)
    CmdTakeExpeditionRewardScRsp = 2537,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptExpeditionScRsp)
    CmdAcceptExpeditionScRsp = 2546,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdCancelExpeditionScRsp)
    CmdCancelExpeditionScRsp = 2553,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptMultipleExpeditionCsReq)
    CmdAcceptMultipleExpeditionCsReq = 2590,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptActivityExpeditionCsReq)
    CmdAcceptActivityExpeditionCsReq = 2516,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeActivityExpeditionRewardCsReq)
    CmdTakeActivityExpeditionRewardCsReq = 2575,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptMultipleExpeditionScRsp)
    CmdAcceptMultipleExpeditionScRsp = 2579,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdCancelActivityExpeditionScRsp)
    CmdCancelActivityExpeditionScRsp = 2530,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeMultipleExpeditionRewardScRsp)
    CmdTakeMultipleExpeditionRewardScRsp = 2561,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdCancelExpeditionCsReq)
    CmdCancelExpeditionCsReq = 2539,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeExpeditionRewardCsReq)
    CmdTakeExpeditionRewardCsReq = 2534,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdAcceptExpeditionCsReq)
    CmdAcceptExpeditionCsReq = 2503,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeActivityExpeditionRewardScRsp)
    CmdTakeActivityExpeditionRewardScRsp = 2548,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdTakeMultipleActivityExpeditionRewardScRsp)
    CmdTakeMultipleActivityExpeditionRewardScRsp = 2529,
    // @@protoc_insertion_point(enum_value:CmdExpeditionType.CmdGetExpeditionDataCsReq)
    CmdGetExpeditionDataCsReq = 2559,
}

impl ::protobuf::Enum for CmdExpeditionType {
    const NAME: &'static str = "CmdExpeditionType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdExpeditionType> {
        match value {
            0 => ::std::option::Option::Some(CmdExpeditionType::CmdExpeditionTypeNone),
            2519 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleExpeditionRewardCsReq),
            2574 => ::std::option::Option::Some(CmdExpeditionType::CmdCancelActivityExpeditionCsReq),
            2547 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptActivityExpeditionScRsp),
            2520 => ::std::option::Option::Some(CmdExpeditionType::CmdGetExpeditionDataScRsp),
            2580 => ::std::option::Option::Some(CmdExpeditionType::CmdExpeditionDataChangeScNotify),
            2525 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardCsReq),
            2537 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeExpeditionRewardScRsp),
            2546 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptExpeditionScRsp),
            2553 => ::std::option::Option::Some(CmdExpeditionType::CmdCancelExpeditionScRsp),
            2590 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptMultipleExpeditionCsReq),
            2516 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptActivityExpeditionCsReq),
            2575 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeActivityExpeditionRewardCsReq),
            2579 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptMultipleExpeditionScRsp),
            2530 => ::std::option::Option::Some(CmdExpeditionType::CmdCancelActivityExpeditionScRsp),
            2561 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleExpeditionRewardScRsp),
            2539 => ::std::option::Option::Some(CmdExpeditionType::CmdCancelExpeditionCsReq),
            2534 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeExpeditionRewardCsReq),
            2503 => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptExpeditionCsReq),
            2548 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeActivityExpeditionRewardScRsp),
            2529 => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardScRsp),
            2559 => ::std::option::Option::Some(CmdExpeditionType::CmdGetExpeditionDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdExpeditionType> {
        match str {
            "CmdExpeditionTypeNone" => ::std::option::Option::Some(CmdExpeditionType::CmdExpeditionTypeNone),
            "CmdTakeMultipleExpeditionRewardCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleExpeditionRewardCsReq),
            "CmdCancelActivityExpeditionCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdCancelActivityExpeditionCsReq),
            "CmdAcceptActivityExpeditionScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptActivityExpeditionScRsp),
            "CmdGetExpeditionDataScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdGetExpeditionDataScRsp),
            "CmdExpeditionDataChangeScNotify" => ::std::option::Option::Some(CmdExpeditionType::CmdExpeditionDataChangeScNotify),
            "CmdTakeMultipleActivityExpeditionRewardCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardCsReq),
            "CmdTakeExpeditionRewardScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeExpeditionRewardScRsp),
            "CmdAcceptExpeditionScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptExpeditionScRsp),
            "CmdCancelExpeditionScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdCancelExpeditionScRsp),
            "CmdAcceptMultipleExpeditionCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptMultipleExpeditionCsReq),
            "CmdAcceptActivityExpeditionCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptActivityExpeditionCsReq),
            "CmdTakeActivityExpeditionRewardCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeActivityExpeditionRewardCsReq),
            "CmdAcceptMultipleExpeditionScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptMultipleExpeditionScRsp),
            "CmdCancelActivityExpeditionScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdCancelActivityExpeditionScRsp),
            "CmdTakeMultipleExpeditionRewardScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleExpeditionRewardScRsp),
            "CmdCancelExpeditionCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdCancelExpeditionCsReq),
            "CmdTakeExpeditionRewardCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeExpeditionRewardCsReq),
            "CmdAcceptExpeditionCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdAcceptExpeditionCsReq),
            "CmdTakeActivityExpeditionRewardScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeActivityExpeditionRewardScRsp),
            "CmdTakeMultipleActivityExpeditionRewardScRsp" => ::std::option::Option::Some(CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardScRsp),
            "CmdGetExpeditionDataCsReq" => ::std::option::Option::Some(CmdExpeditionType::CmdGetExpeditionDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdExpeditionType] = &[
        CmdExpeditionType::CmdExpeditionTypeNone,
        CmdExpeditionType::CmdTakeMultipleExpeditionRewardCsReq,
        CmdExpeditionType::CmdCancelActivityExpeditionCsReq,
        CmdExpeditionType::CmdAcceptActivityExpeditionScRsp,
        CmdExpeditionType::CmdGetExpeditionDataScRsp,
        CmdExpeditionType::CmdExpeditionDataChangeScNotify,
        CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardCsReq,
        CmdExpeditionType::CmdTakeExpeditionRewardScRsp,
        CmdExpeditionType::CmdAcceptExpeditionScRsp,
        CmdExpeditionType::CmdCancelExpeditionScRsp,
        CmdExpeditionType::CmdAcceptMultipleExpeditionCsReq,
        CmdExpeditionType::CmdAcceptActivityExpeditionCsReq,
        CmdExpeditionType::CmdTakeActivityExpeditionRewardCsReq,
        CmdExpeditionType::CmdAcceptMultipleExpeditionScRsp,
        CmdExpeditionType::CmdCancelActivityExpeditionScRsp,
        CmdExpeditionType::CmdTakeMultipleExpeditionRewardScRsp,
        CmdExpeditionType::CmdCancelExpeditionCsReq,
        CmdExpeditionType::CmdTakeExpeditionRewardCsReq,
        CmdExpeditionType::CmdAcceptExpeditionCsReq,
        CmdExpeditionType::CmdTakeActivityExpeditionRewardScRsp,
        CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardScRsp,
        CmdExpeditionType::CmdGetExpeditionDataCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdExpeditionType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdExpeditionType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdExpeditionType::CmdExpeditionTypeNone => 0,
            CmdExpeditionType::CmdTakeMultipleExpeditionRewardCsReq => 1,
            CmdExpeditionType::CmdCancelActivityExpeditionCsReq => 2,
            CmdExpeditionType::CmdAcceptActivityExpeditionScRsp => 3,
            CmdExpeditionType::CmdGetExpeditionDataScRsp => 4,
            CmdExpeditionType::CmdExpeditionDataChangeScNotify => 5,
            CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardCsReq => 6,
            CmdExpeditionType::CmdTakeExpeditionRewardScRsp => 7,
            CmdExpeditionType::CmdAcceptExpeditionScRsp => 8,
            CmdExpeditionType::CmdCancelExpeditionScRsp => 9,
            CmdExpeditionType::CmdAcceptMultipleExpeditionCsReq => 10,
            CmdExpeditionType::CmdAcceptActivityExpeditionCsReq => 11,
            CmdExpeditionType::CmdTakeActivityExpeditionRewardCsReq => 12,
            CmdExpeditionType::CmdAcceptMultipleExpeditionScRsp => 13,
            CmdExpeditionType::CmdCancelActivityExpeditionScRsp => 14,
            CmdExpeditionType::CmdTakeMultipleExpeditionRewardScRsp => 15,
            CmdExpeditionType::CmdCancelExpeditionCsReq => 16,
            CmdExpeditionType::CmdTakeExpeditionRewardCsReq => 17,
            CmdExpeditionType::CmdAcceptExpeditionCsReq => 18,
            CmdExpeditionType::CmdTakeActivityExpeditionRewardScRsp => 19,
            CmdExpeditionType::CmdTakeMultipleActivityExpeditionRewardScRsp => 20,
            CmdExpeditionType::CmdGetExpeditionDataCsReq => 21,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdExpeditionType {
    fn default() -> Self {
        CmdExpeditionType::CmdExpeditionTypeNone
    }
}

impl CmdExpeditionType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdExpeditionType>("CmdExpeditionType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x17CmdExpeditionType.proto*\xd2\x06\n\x11CmdExpeditionType\x12\x19\n\
    \x15CmdExpeditionTypeNone\x10\0\x12)\n$CmdTakeMultipleExpeditionRewardCs\
    Req\x10\xd7\x13\x12%\n\x20CmdCancelActivityExpeditionCsReq\x10\x8e\x14\
    \x12%\n\x20CmdAcceptActivityExpeditionScRsp\x10\xf3\x13\x12\x1e\n\x19Cmd\
    GetExpeditionDataScRsp\x10\xd8\x13\x12$\n\x1fCmdExpeditionDataChangeScNo\
    tify\x10\x94\x14\x121\n,CmdTakeMultipleActivityExpeditionRewardCsReq\x10\
    \xdd\x13\x12!\n\x1cCmdTakeExpeditionRewardScRsp\x10\xe9\x13\x12\x1d\n\
    \x18CmdAcceptExpeditionScRsp\x10\xf2\x13\x12\x1d\n\x18CmdCancelExpeditio\
    nScRsp\x10\xf9\x13\x12%\n\x20CmdAcceptMultipleExpeditionCsReq\x10\x9e\
    \x14\x12%\n\x20CmdAcceptActivityExpeditionCsReq\x10\xd4\x13\x12)\n$CmdTa\
    keActivityExpeditionRewardCsReq\x10\x8f\x14\x12%\n\x20CmdAcceptMultipleE\
    xpeditionScRsp\x10\x93\x14\x12%\n\x20CmdCancelActivityExpeditionScRsp\
    \x10\xe2\x13\x12)\n$CmdTakeMultipleExpeditionRewardScRsp\x10\x81\x14\x12\
    \x1d\n\x18CmdCancelExpeditionCsReq\x10\xeb\x13\x12!\n\x1cCmdTakeExpediti\
    onRewardCsReq\x10\xe6\x13\x12\x1d\n\x18CmdAcceptExpeditionCsReq\x10\xc7\
    \x13\x12)\n$CmdTakeActivityExpeditionRewardScRsp\x10\xf4\x13\x121\n,CmdT\
    akeMultipleActivityExpeditionRewardScRsp\x10\xe1\x13\x12\x1e\n\x19CmdGet\
    ExpeditionDataCsReq\x10\xff\x13b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdExpeditionType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
