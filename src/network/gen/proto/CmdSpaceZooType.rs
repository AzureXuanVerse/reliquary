// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdSpaceZooType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdSpaceZooType)
pub enum CmdSpaceZooType {
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooTypeNone)
    CmdSpaceZooTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooDataCsReq)
    CmdSpaceZooDataCsReq = 6711,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooBornCsReq)
    CmdSpaceZooBornCsReq = 6747,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooBornScRsp)
    CmdSpaceZooBornScRsp = 6709,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooTakeScRsp)
    CmdSpaceZooTakeScRsp = 6773,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooExchangeItemCsReq)
    CmdSpaceZooExchangeItemCsReq = 6718,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooOpCatteryCsReq)
    CmdSpaceZooOpCatteryCsReq = 6770,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooOpCatteryScRsp)
    CmdSpaceZooOpCatteryScRsp = 6789,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooDeleteCatCsReq)
    CmdSpaceZooDeleteCatCsReq = 6726,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooExchangeItemScRsp)
    CmdSpaceZooExchangeItemScRsp = 6736,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooDeleteCatScRsp)
    CmdSpaceZooDeleteCatScRsp = 6730,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooMutateCsReq)
    CmdSpaceZooMutateCsReq = 6735,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooDataScRsp)
    CmdSpaceZooDataScRsp = 6713,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooMutateScRsp)
    CmdSpaceZooMutateScRsp = 6706,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooTakeCsReq)
    CmdSpaceZooTakeCsReq = 6750,
    // @@protoc_insertion_point(enum_value:CmdSpaceZooType.CmdSpaceZooCatUpdateNotify)
    CmdSpaceZooCatUpdateNotify = 6795,
}

impl ::protobuf::Enum for CmdSpaceZooType {
    const NAME: &'static str = "CmdSpaceZooType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdSpaceZooType> {
        match value {
            0 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTypeNone),
            6711 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDataCsReq),
            6747 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooBornCsReq),
            6709 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooBornScRsp),
            6773 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTakeScRsp),
            6718 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooExchangeItemCsReq),
            6770 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooOpCatteryCsReq),
            6789 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooOpCatteryScRsp),
            6726 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDeleteCatCsReq),
            6736 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooExchangeItemScRsp),
            6730 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDeleteCatScRsp),
            6735 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooMutateCsReq),
            6713 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDataScRsp),
            6706 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooMutateScRsp),
            6750 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTakeCsReq),
            6795 => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooCatUpdateNotify),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdSpaceZooType> {
        match str {
            "CmdSpaceZooTypeNone" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTypeNone),
            "CmdSpaceZooDataCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDataCsReq),
            "CmdSpaceZooBornCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooBornCsReq),
            "CmdSpaceZooBornScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooBornScRsp),
            "CmdSpaceZooTakeScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTakeScRsp),
            "CmdSpaceZooExchangeItemCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooExchangeItemCsReq),
            "CmdSpaceZooOpCatteryCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooOpCatteryCsReq),
            "CmdSpaceZooOpCatteryScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooOpCatteryScRsp),
            "CmdSpaceZooDeleteCatCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDeleteCatCsReq),
            "CmdSpaceZooExchangeItemScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooExchangeItemScRsp),
            "CmdSpaceZooDeleteCatScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDeleteCatScRsp),
            "CmdSpaceZooMutateCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooMutateCsReq),
            "CmdSpaceZooDataScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooDataScRsp),
            "CmdSpaceZooMutateScRsp" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooMutateScRsp),
            "CmdSpaceZooTakeCsReq" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooTakeCsReq),
            "CmdSpaceZooCatUpdateNotify" => ::std::option::Option::Some(CmdSpaceZooType::CmdSpaceZooCatUpdateNotify),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdSpaceZooType] = &[
        CmdSpaceZooType::CmdSpaceZooTypeNone,
        CmdSpaceZooType::CmdSpaceZooDataCsReq,
        CmdSpaceZooType::CmdSpaceZooBornCsReq,
        CmdSpaceZooType::CmdSpaceZooBornScRsp,
        CmdSpaceZooType::CmdSpaceZooTakeScRsp,
        CmdSpaceZooType::CmdSpaceZooExchangeItemCsReq,
        CmdSpaceZooType::CmdSpaceZooOpCatteryCsReq,
        CmdSpaceZooType::CmdSpaceZooOpCatteryScRsp,
        CmdSpaceZooType::CmdSpaceZooDeleteCatCsReq,
        CmdSpaceZooType::CmdSpaceZooExchangeItemScRsp,
        CmdSpaceZooType::CmdSpaceZooDeleteCatScRsp,
        CmdSpaceZooType::CmdSpaceZooMutateCsReq,
        CmdSpaceZooType::CmdSpaceZooDataScRsp,
        CmdSpaceZooType::CmdSpaceZooMutateScRsp,
        CmdSpaceZooType::CmdSpaceZooTakeCsReq,
        CmdSpaceZooType::CmdSpaceZooCatUpdateNotify,
    ];
}

impl ::protobuf::EnumFull for CmdSpaceZooType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdSpaceZooType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdSpaceZooType::CmdSpaceZooTypeNone => 0,
            CmdSpaceZooType::CmdSpaceZooDataCsReq => 1,
            CmdSpaceZooType::CmdSpaceZooBornCsReq => 2,
            CmdSpaceZooType::CmdSpaceZooBornScRsp => 3,
            CmdSpaceZooType::CmdSpaceZooTakeScRsp => 4,
            CmdSpaceZooType::CmdSpaceZooExchangeItemCsReq => 5,
            CmdSpaceZooType::CmdSpaceZooOpCatteryCsReq => 6,
            CmdSpaceZooType::CmdSpaceZooOpCatteryScRsp => 7,
            CmdSpaceZooType::CmdSpaceZooDeleteCatCsReq => 8,
            CmdSpaceZooType::CmdSpaceZooExchangeItemScRsp => 9,
            CmdSpaceZooType::CmdSpaceZooDeleteCatScRsp => 10,
            CmdSpaceZooType::CmdSpaceZooMutateCsReq => 11,
            CmdSpaceZooType::CmdSpaceZooDataScRsp => 12,
            CmdSpaceZooType::CmdSpaceZooMutateScRsp => 13,
            CmdSpaceZooType::CmdSpaceZooTakeCsReq => 14,
            CmdSpaceZooType::CmdSpaceZooCatUpdateNotify => 15,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdSpaceZooType {
    fn default() -> Self {
        CmdSpaceZooType::CmdSpaceZooTypeNone
    }
}

impl CmdSpaceZooType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdSpaceZooType>("CmdSpaceZooType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x15CmdSpaceZooType.proto*\xed\x03\n\x0fCmdSpaceZooType\x12\x17\n\x13C\
    mdSpaceZooTypeNone\x10\0\x12\x19\n\x14CmdSpaceZooDataCsReq\x10\xb74\x12\
    \x19\n\x14CmdSpaceZooBornCsReq\x10\xdb4\x12\x19\n\x14CmdSpaceZooBornScRs\
    p\x10\xb54\x12\x19\n\x14CmdSpaceZooTakeScRsp\x10\xf54\x12!\n\x1cCmdSpace\
    ZooExchangeItemCsReq\x10\xbe4\x12\x1e\n\x19CmdSpaceZooOpCatteryCsReq\x10\
    \xf24\x12\x1e\n\x19CmdSpaceZooOpCatteryScRsp\x10\x855\x12\x1e\n\x19CmdSp\
    aceZooDeleteCatCsReq\x10\xc64\x12!\n\x1cCmdSpaceZooExchangeItemScRsp\x10\
    \xd04\x12\x1e\n\x19CmdSpaceZooDeleteCatScRsp\x10\xca4\x12\x1b\n\x16CmdSp\
    aceZooMutateCsReq\x10\xcf4\x12\x19\n\x14CmdSpaceZooDataScRsp\x10\xb94\
    \x12\x1b\n\x16CmdSpaceZooMutateScRsp\x10\xb24\x12\x19\n\x14CmdSpaceZooTa\
    keCsReq\x10\xde4\x12\x1f\n\x1aCmdSpaceZooCatUpdateNotify\x10\x8b5b\x06pr\
    oto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdSpaceZooType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
