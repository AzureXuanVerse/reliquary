// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `EGOBKCFAJII.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:EGOBKCFAJII)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct EGOBKCFAJII {
    // message fields
    // @@protoc_insertion_point(field:EGOBKCFAJII.KCIFADMMPGD)
    pub KCIFADMMPGD: ::protobuf::MessageField<super::FBKOHNGMGDP::FBKOHNGMGDP>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.OOIEEPCBNOI)
    pub OOIEEPCBNOI: ::protobuf::MessageField<super::ICMNCJPLGFN::ICMNCJPLGFN>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.NEMGEOPCBAO)
    pub NEMGEOPCBAO: ::protobuf::MessageField<super::IMEAIOLMNIN::IMEAIOLMNIN>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.AMLCAEIJMEE)
    pub AMLCAEIJMEE: ::protobuf::MessageField<super::HPOEPJIDFCE::HPOEPJIDFCE>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.ODEMEGIKEPP)
    pub ODEMEGIKEPP: bool,
    // @@protoc_insertion_point(field:EGOBKCFAJII.KACLLKAKKKO)
    pub KACLLKAKKKO: ::protobuf::MessageField<super::NPOHDDCEDLP::NPOHDDCEDLP>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.LMMLDDKKKAI)
    pub LMMLDDKKKAI: ::protobuf::MessageField<super::EJNLMNONLHP::EJNLMNONLHP>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.NCOAIBHNPOH)
    pub NCOAIBHNPOH: ::protobuf::MessageField<super::IAINODGEGPD::IAINODGEGPD>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.OJBAILGKLBM)
    pub OJBAILGKLBM: ::protobuf::EnumOrUnknown<super::RogueStatus::RogueStatus>,
    // @@protoc_insertion_point(field:EGOBKCFAJII.FHEODGILEEP)
    pub FHEODGILEEP: ::protobuf::MessageField<super::HBAEMIJIHKF::HBAEMIJIHKF>,
    // special fields
    // @@protoc_insertion_point(special_field:EGOBKCFAJII.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a EGOBKCFAJII {
    fn default() -> &'a EGOBKCFAJII {
        <EGOBKCFAJII as ::protobuf::Message>::default_instance()
    }
}

impl EGOBKCFAJII {
    pub fn new() -> EGOBKCFAJII {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(10);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FBKOHNGMGDP::FBKOHNGMGDP>(
            "KCIFADMMPGD",
            |m: &EGOBKCFAJII| { &m.KCIFADMMPGD },
            |m: &mut EGOBKCFAJII| { &mut m.KCIFADMMPGD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::ICMNCJPLGFN::ICMNCJPLGFN>(
            "OOIEEPCBNOI",
            |m: &EGOBKCFAJII| { &m.OOIEEPCBNOI },
            |m: &mut EGOBKCFAJII| { &mut m.OOIEEPCBNOI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::IMEAIOLMNIN::IMEAIOLMNIN>(
            "NEMGEOPCBAO",
            |m: &EGOBKCFAJII| { &m.NEMGEOPCBAO },
            |m: &mut EGOBKCFAJII| { &mut m.NEMGEOPCBAO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HPOEPJIDFCE::HPOEPJIDFCE>(
            "AMLCAEIJMEE",
            |m: &EGOBKCFAJII| { &m.AMLCAEIJMEE },
            |m: &mut EGOBKCFAJII| { &mut m.AMLCAEIJMEE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ODEMEGIKEPP",
            |m: &EGOBKCFAJII| { &m.ODEMEGIKEPP },
            |m: &mut EGOBKCFAJII| { &mut m.ODEMEGIKEPP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::NPOHDDCEDLP::NPOHDDCEDLP>(
            "KACLLKAKKKO",
            |m: &EGOBKCFAJII| { &m.KACLLKAKKKO },
            |m: &mut EGOBKCFAJII| { &mut m.KACLLKAKKKO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::EJNLMNONLHP::EJNLMNONLHP>(
            "LMMLDDKKKAI",
            |m: &EGOBKCFAJII| { &m.LMMLDDKKKAI },
            |m: &mut EGOBKCFAJII| { &mut m.LMMLDDKKKAI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::IAINODGEGPD::IAINODGEGPD>(
            "NCOAIBHNPOH",
            |m: &EGOBKCFAJII| { &m.NCOAIBHNPOH },
            |m: &mut EGOBKCFAJII| { &mut m.NCOAIBHNPOH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OJBAILGKLBM",
            |m: &EGOBKCFAJII| { &m.OJBAILGKLBM },
            |m: &mut EGOBKCFAJII| { &mut m.OJBAILGKLBM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::HBAEMIJIHKF::HBAEMIJIHKF>(
            "FHEODGILEEP",
            |m: &EGOBKCFAJII| { &m.FHEODGILEEP },
            |m: &mut EGOBKCFAJII| { &mut m.FHEODGILEEP },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<EGOBKCFAJII>(
            "EGOBKCFAJII",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for EGOBKCFAJII {
    const NAME: &'static str = "EGOBKCFAJII";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                26 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KCIFADMMPGD)?;
                },
                18 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.OOIEEPCBNOI)?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NEMGEOPCBAO)?;
                },
                114 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.AMLCAEIJMEE)?;
                },
                80 => {
                    self.ODEMEGIKEPP = is.read_bool()?;
                },
                98 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.KACLLKAKKKO)?;
                },
                10 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.LMMLDDKKKAI)?;
                },
                106 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.NCOAIBHNPOH)?;
                },
                40 => {
                    self.OJBAILGKLBM = is.read_enum_or_unknown()?;
                },
                50 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.FHEODGILEEP)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let Some(v) = self.KCIFADMMPGD.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.OOIEEPCBNOI.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NEMGEOPCBAO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.AMLCAEIJMEE.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.ODEMEGIKEPP != false {
            my_size += 1 + 1;
        }
        if let Some(v) = self.KACLLKAKKKO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.LMMLDDKKKAI.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.NCOAIBHNPOH.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.OJBAILGKLBM != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            my_size += ::protobuf::rt::int32_size(5, self.OJBAILGKLBM.value());
        }
        if let Some(v) = self.FHEODGILEEP.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let Some(v) = self.KCIFADMMPGD.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        }
        if let Some(v) = self.OOIEEPCBNOI.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        }
        if let Some(v) = self.NEMGEOPCBAO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if let Some(v) = self.AMLCAEIJMEE.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        }
        if self.ODEMEGIKEPP != false {
            os.write_bool(10, self.ODEMEGIKEPP)?;
        }
        if let Some(v) = self.KACLLKAKKKO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        }
        if let Some(v) = self.LMMLDDKKKAI.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        }
        if let Some(v) = self.NCOAIBHNPOH.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        }
        if self.OJBAILGKLBM != ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE) {
            os.write_enum(5, ::protobuf::EnumOrUnknown::value(&self.OJBAILGKLBM))?;
        }
        if let Some(v) = self.FHEODGILEEP.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> EGOBKCFAJII {
        EGOBKCFAJII::new()
    }

    fn clear(&mut self) {
        self.KCIFADMMPGD.clear();
        self.OOIEEPCBNOI.clear();
        self.NEMGEOPCBAO.clear();
        self.AMLCAEIJMEE.clear();
        self.ODEMEGIKEPP = false;
        self.KACLLKAKKKO.clear();
        self.LMMLDDKKKAI.clear();
        self.NCOAIBHNPOH.clear();
        self.OJBAILGKLBM = ::protobuf::EnumOrUnknown::new(super::RogueStatus::RogueStatus::ROGUE_STATUS_NONE);
        self.FHEODGILEEP.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static EGOBKCFAJII {
        static instance: EGOBKCFAJII = EGOBKCFAJII {
            KCIFADMMPGD: ::protobuf::MessageField::none(),
            OOIEEPCBNOI: ::protobuf::MessageField::none(),
            NEMGEOPCBAO: ::protobuf::MessageField::none(),
            AMLCAEIJMEE: ::protobuf::MessageField::none(),
            ODEMEGIKEPP: false,
            KACLLKAKKKO: ::protobuf::MessageField::none(),
            LMMLDDKKKAI: ::protobuf::MessageField::none(),
            NCOAIBHNPOH: ::protobuf::MessageField::none(),
            OJBAILGKLBM: ::protobuf::EnumOrUnknown::from_i32(0),
            FHEODGILEEP: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for EGOBKCFAJII {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("EGOBKCFAJII").unwrap()).clone()
    }
}

impl ::std::fmt::Display for EGOBKCFAJII {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for EGOBKCFAJII {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11EGOBKCFAJII.proto\x1a\x11EJNLMNONLHP.proto\x1a\x11FBKOHNGMGDP.prot\
    o\x1a\x11HBAEMIJIHKF.proto\x1a\x11HPOEPJIDFCE.proto\x1a\x11IAINODGEGPD.p\
    roto\x1a\x11ICMNCJPLGFN.proto\x1a\x11IMEAIOLMNIN.proto\x1a\x11NPOHDDCEDL\
    P.proto\x1a\x11RogueStatus.proto\"\xdf\x03\n\x0bEGOBKCFAJII\x12.\n\x0bKC\
    IFADMMPGD\x18\x03\x20\x01(\x0b2\x0c.FBKOHNGMGDPR\x0bKCIFADMMPGD\x12.\n\
    \x0bOOIEEPCBNOI\x18\x02\x20\x01(\x0b2\x0c.ICMNCJPLGFNR\x0bOOIEEPCBNOI\
    \x12.\n\x0bNEMGEOPCBAO\x18\t\x20\x01(\x0b2\x0c.IMEAIOLMNINR\x0bNEMGEOPCB\
    AO\x12.\n\x0bAMLCAEIJMEE\x18\x0e\x20\x01(\x0b2\x0c.HPOEPJIDFCER\x0bAMLCA\
    EIJMEE\x12\x20\n\x0bODEMEGIKEPP\x18\n\x20\x01(\x08R\x0bODEMEGIKEPP\x12.\
    \n\x0bKACLLKAKKKO\x18\x0c\x20\x01(\x0b2\x0c.NPOHDDCEDLPR\x0bKACLLKAKKKO\
    \x12.\n\x0bLMMLDDKKKAI\x18\x01\x20\x01(\x0b2\x0c.EJNLMNONLHPR\x0bLMMLDDK\
    KKAI\x12.\n\x0bNCOAIBHNPOH\x18\r\x20\x01(\x0b2\x0c.IAINODGEGPDR\x0bNCOAI\
    BHNPOH\x12.\n\x0bOJBAILGKLBM\x18\x05\x20\x01(\x0e2\x0c.RogueStatusR\x0bO\
    JBAILGKLBM\x12.\n\x0bFHEODGILEEP\x18\x06\x20\x01(\x0b2\x0c.HBAEMIJIHKFR\
    \x0bFHEODGILEEPb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(9);
            deps.push(super::EJNLMNONLHP::file_descriptor().clone());
            deps.push(super::FBKOHNGMGDP::file_descriptor().clone());
            deps.push(super::HBAEMIJIHKF::file_descriptor().clone());
            deps.push(super::HPOEPJIDFCE::file_descriptor().clone());
            deps.push(super::IAINODGEGPD::file_descriptor().clone());
            deps.push(super::ICMNCJPLGFN::file_descriptor().clone());
            deps.push(super::IMEAIOLMNIN::file_descriptor().clone());
            deps.push(super::NPOHDDCEDLP::file_descriptor().clone());
            deps.push(super::RogueStatus::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(EGOBKCFAJII::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
