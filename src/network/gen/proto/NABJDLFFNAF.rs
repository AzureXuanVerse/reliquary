// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `NABJDLFFNAF.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:NABJDLFFNAF)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct NABJDLFFNAF {
    // message fields
    // @@protoc_insertion_point(field:NABJDLFFNAF.LGCEACIAHBJ)
    pub LGCEACIAHBJ: u64,
    // @@protoc_insertion_point(field:NABJDLFFNAF.ENPCCPAMDHK)
    pub ENPCCPAMDHK: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.GAGHJMKACBM)
    pub GAGHJMKACBM: u64,
    // @@protoc_insertion_point(field:NABJDLFFNAF.CKMKLNOAJAF)
    pub CKMKLNOAJAF: ::std::vec::Vec<super::DHIPMOLCCHJ::DHIPMOLCCHJ>,
    // @@protoc_insertion_point(field:NABJDLFFNAF.KEAOHKHKBCA)
    pub KEAOHKHKBCA: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.DLCMPPCGJAL)
    pub DLCMPPCGJAL: bool,
    // @@protoc_insertion_point(field:NABJDLFFNAF.EILAKPNJBJN)
    pub EILAKPNJBJN: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.GNILCGBHAMM)
    pub GNILCGBHAMM: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.HAJKAHEDEMM)
    pub HAJKAHEDEMM: ::std::vec::Vec<super::KHBAFNOEJOE::KHBAFNOEJOE>,
    // @@protoc_insertion_point(field:NABJDLFFNAF.CIAFBNOKALL)
    pub CIAFBNOKALL: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.FPEGIACNKHH)
    pub FPEGIACNKHH: ::std::string::String,
    // @@protoc_insertion_point(field:NABJDLFFNAF.IFENKDFNNEI)
    pub IFENKDFNNEI: ::std::vec::Vec<super::DHIPMOLCCHJ::DHIPMOLCCHJ>,
    // @@protoc_insertion_point(field:NABJDLFFNAF.GADNLGEGDLA)
    pub GADNLGEGDLA: ::std::string::String,
    // @@protoc_insertion_point(field:NABJDLFFNAF.HJEGMIGPECO)
    pub HJEGMIGPECO: ::std::string::String,
    // @@protoc_insertion_point(field:NABJDLFFNAF.ICBONDMIJDC)
    pub ICBONDMIJDC: ::std::vec::Vec<super::DHIPMOLCCHJ::DHIPMOLCCHJ>,
    // @@protoc_insertion_point(field:NABJDLFFNAF.HBAHKLCCCBG)
    pub HBAHKLCCCBG: ::std::vec::Vec<super::DHIPMOLCCHJ::DHIPMOLCCHJ>,
    // @@protoc_insertion_point(field:NABJDLFFNAF.DEJJPHCJLBO)
    pub DEJJPHCJLBO: u32,
    // @@protoc_insertion_point(field:NABJDLFFNAF.JBKCDEEIKKN)
    pub JBKCDEEIKKN: u64,
    // special fields
    // @@protoc_insertion_point(special_field:NABJDLFFNAF.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a NABJDLFFNAF {
    fn default() -> &'a NABJDLFFNAF {
        <NABJDLFFNAF as ::protobuf::Message>::default_instance()
    }
}

impl NABJDLFFNAF {
    pub fn new() -> NABJDLFFNAF {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LGCEACIAHBJ",
            |m: &NABJDLFFNAF| { &m.LGCEACIAHBJ },
            |m: &mut NABJDLFFNAF| { &mut m.LGCEACIAHBJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ENPCCPAMDHK",
            |m: &NABJDLFFNAF| { &m.ENPCCPAMDHK },
            |m: &mut NABJDLFFNAF| { &mut m.ENPCCPAMDHK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GAGHJMKACBM",
            |m: &NABJDLFFNAF| { &m.GAGHJMKACBM },
            |m: &mut NABJDLFFNAF| { &mut m.GAGHJMKACBM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "CKMKLNOAJAF",
            |m: &NABJDLFFNAF| { &m.CKMKLNOAJAF },
            |m: &mut NABJDLFFNAF| { &mut m.CKMKLNOAJAF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KEAOHKHKBCA",
            |m: &NABJDLFFNAF| { &m.KEAOHKHKBCA },
            |m: &mut NABJDLFFNAF| { &mut m.KEAOHKHKBCA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DLCMPPCGJAL",
            |m: &NABJDLFFNAF| { &m.DLCMPPCGJAL },
            |m: &mut NABJDLFFNAF| { &mut m.DLCMPPCGJAL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EILAKPNJBJN",
            |m: &NABJDLFFNAF| { &m.EILAKPNJBJN },
            |m: &mut NABJDLFFNAF| { &mut m.EILAKPNJBJN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GNILCGBHAMM",
            |m: &NABJDLFFNAF| { &m.GNILCGBHAMM },
            |m: &mut NABJDLFFNAF| { &mut m.GNILCGBHAMM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HAJKAHEDEMM",
            |m: &NABJDLFFNAF| { &m.HAJKAHEDEMM },
            |m: &mut NABJDLFFNAF| { &mut m.HAJKAHEDEMM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CIAFBNOKALL",
            |m: &NABJDLFFNAF| { &m.CIAFBNOKALL },
            |m: &mut NABJDLFFNAF| { &mut m.CIAFBNOKALL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FPEGIACNKHH",
            |m: &NABJDLFFNAF| { &m.FPEGIACNKHH },
            |m: &mut NABJDLFFNAF| { &mut m.FPEGIACNKHH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "IFENKDFNNEI",
            |m: &NABJDLFFNAF| { &m.IFENKDFNNEI },
            |m: &mut NABJDLFFNAF| { &mut m.IFENKDFNNEI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GADNLGEGDLA",
            |m: &NABJDLFFNAF| { &m.GADNLGEGDLA },
            |m: &mut NABJDLFFNAF| { &mut m.GADNLGEGDLA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HJEGMIGPECO",
            |m: &NABJDLFFNAF| { &m.HJEGMIGPECO },
            |m: &mut NABJDLFFNAF| { &mut m.HJEGMIGPECO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "ICBONDMIJDC",
            |m: &NABJDLFFNAF| { &m.ICBONDMIJDC },
            |m: &mut NABJDLFFNAF| { &mut m.ICBONDMIJDC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HBAHKLCCCBG",
            |m: &NABJDLFFNAF| { &m.HBAHKLCCCBG },
            |m: &mut NABJDLFFNAF| { &mut m.HBAHKLCCCBG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DEJJPHCJLBO",
            |m: &NABJDLFFNAF| { &m.DEJJPHCJLBO },
            |m: &mut NABJDLFFNAF| { &mut m.DEJJPHCJLBO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JBKCDEEIKKN",
            |m: &NABJDLFFNAF| { &m.JBKCDEEIKKN },
            |m: &mut NABJDLFFNAF| { &mut m.JBKCDEEIKKN },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<NABJDLFFNAF>(
            "NABJDLFFNAF",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for NABJDLFFNAF {
    const NAME: &'static str = "NABJDLFFNAF";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                120 => {
                    self.LGCEACIAHBJ = is.read_uint64()?;
                },
                32 => {
                    self.ENPCCPAMDHK = is.read_uint32()?;
                },
                16 => {
                    self.GAGHJMKACBM = is.read_uint64()?;
                },
                74 => {
                    self.CKMKLNOAJAF.push(is.read_message()?);
                },
                24 => {
                    self.KEAOHKHKBCA = is.read_uint32()?;
                },
                112 => {
                    self.DLCMPPCGJAL = is.read_bool()?;
                },
                96 => {
                    self.EILAKPNJBJN = is.read_uint32()?;
                },
                104 => {
                    self.GNILCGBHAMM = is.read_uint32()?;
                },
                66 => {
                    self.HAJKAHEDEMM.push(is.read_message()?);
                },
                56 => {
                    self.CIAFBNOKALL = is.read_uint32()?;
                },
                11746 => {
                    self.FPEGIACNKHH = is.read_string()?;
                },
                10 => {
                    self.IFENKDFNNEI.push(is.read_message()?);
                },
                7818 => {
                    self.GADNLGEGDLA = is.read_string()?;
                },
                14378 => {
                    self.HJEGMIGPECO = is.read_string()?;
                },
                82 => {
                    self.ICBONDMIJDC.push(is.read_message()?);
                },
                90 => {
                    self.HBAHKLCCCBG.push(is.read_message()?);
                },
                48 => {
                    self.DEJJPHCJLBO = is.read_uint32()?;
                },
                40 => {
                    self.JBKCDEEIKKN = is.read_uint64()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.LGCEACIAHBJ != 0 {
            my_size += ::protobuf::rt::uint64_size(15, self.LGCEACIAHBJ);
        }
        if self.ENPCCPAMDHK != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.ENPCCPAMDHK);
        }
        if self.GAGHJMKACBM != 0 {
            my_size += ::protobuf::rt::uint64_size(2, self.GAGHJMKACBM);
        }
        for value in &self.CKMKLNOAJAF {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.KEAOHKHKBCA != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.KEAOHKHKBCA);
        }
        if self.DLCMPPCGJAL != false {
            my_size += 1 + 1;
        }
        if self.EILAKPNJBJN != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.EILAKPNJBJN);
        }
        if self.GNILCGBHAMM != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.GNILCGBHAMM);
        }
        for value in &self.HAJKAHEDEMM {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.CIAFBNOKALL != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.CIAFBNOKALL);
        }
        if !self.FPEGIACNKHH.is_empty() {
            my_size += ::protobuf::rt::string_size(1468, &self.FPEGIACNKHH);
        }
        for value in &self.IFENKDFNNEI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if !self.GADNLGEGDLA.is_empty() {
            my_size += ::protobuf::rt::string_size(977, &self.GADNLGEGDLA);
        }
        if !self.HJEGMIGPECO.is_empty() {
            my_size += ::protobuf::rt::string_size(1797, &self.HJEGMIGPECO);
        }
        for value in &self.ICBONDMIJDC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.HBAHKLCCCBG {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.DEJJPHCJLBO != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.DEJJPHCJLBO);
        }
        if self.JBKCDEEIKKN != 0 {
            my_size += ::protobuf::rt::uint64_size(5, self.JBKCDEEIKKN);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.LGCEACIAHBJ != 0 {
            os.write_uint64(15, self.LGCEACIAHBJ)?;
        }
        if self.ENPCCPAMDHK != 0 {
            os.write_uint32(4, self.ENPCCPAMDHK)?;
        }
        if self.GAGHJMKACBM != 0 {
            os.write_uint64(2, self.GAGHJMKACBM)?;
        }
        for v in &self.CKMKLNOAJAF {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        };
        if self.KEAOHKHKBCA != 0 {
            os.write_uint32(3, self.KEAOHKHKBCA)?;
        }
        if self.DLCMPPCGJAL != false {
            os.write_bool(14, self.DLCMPPCGJAL)?;
        }
        if self.EILAKPNJBJN != 0 {
            os.write_uint32(12, self.EILAKPNJBJN)?;
        }
        if self.GNILCGBHAMM != 0 {
            os.write_uint32(13, self.GNILCGBHAMM)?;
        }
        for v in &self.HAJKAHEDEMM {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        };
        if self.CIAFBNOKALL != 0 {
            os.write_uint32(7, self.CIAFBNOKALL)?;
        }
        if !self.FPEGIACNKHH.is_empty() {
            os.write_string(1468, &self.FPEGIACNKHH)?;
        }
        for v in &self.IFENKDFNNEI {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        };
        if !self.GADNLGEGDLA.is_empty() {
            os.write_string(977, &self.GADNLGEGDLA)?;
        }
        if !self.HJEGMIGPECO.is_empty() {
            os.write_string(1797, &self.HJEGMIGPECO)?;
        }
        for v in &self.ICBONDMIJDC {
            ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
        };
        for v in &self.HBAHKLCCCBG {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        };
        if self.DEJJPHCJLBO != 0 {
            os.write_uint32(6, self.DEJJPHCJLBO)?;
        }
        if self.JBKCDEEIKKN != 0 {
            os.write_uint64(5, self.JBKCDEEIKKN)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> NABJDLFFNAF {
        NABJDLFFNAF::new()
    }

    fn clear(&mut self) {
        self.LGCEACIAHBJ = 0;
        self.ENPCCPAMDHK = 0;
        self.GAGHJMKACBM = 0;
        self.CKMKLNOAJAF.clear();
        self.KEAOHKHKBCA = 0;
        self.DLCMPPCGJAL = false;
        self.EILAKPNJBJN = 0;
        self.GNILCGBHAMM = 0;
        self.HAJKAHEDEMM.clear();
        self.CIAFBNOKALL = 0;
        self.FPEGIACNKHH.clear();
        self.IFENKDFNNEI.clear();
        self.GADNLGEGDLA.clear();
        self.HJEGMIGPECO.clear();
        self.ICBONDMIJDC.clear();
        self.HBAHKLCCCBG.clear();
        self.DEJJPHCJLBO = 0;
        self.JBKCDEEIKKN = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static NABJDLFFNAF {
        static instance: NABJDLFFNAF = NABJDLFFNAF {
            LGCEACIAHBJ: 0,
            ENPCCPAMDHK: 0,
            GAGHJMKACBM: 0,
            CKMKLNOAJAF: ::std::vec::Vec::new(),
            KEAOHKHKBCA: 0,
            DLCMPPCGJAL: false,
            EILAKPNJBJN: 0,
            GNILCGBHAMM: 0,
            HAJKAHEDEMM: ::std::vec::Vec::new(),
            CIAFBNOKALL: 0,
            FPEGIACNKHH: ::std::string::String::new(),
            IFENKDFNNEI: ::std::vec::Vec::new(),
            GADNLGEGDLA: ::std::string::String::new(),
            HJEGMIGPECO: ::std::string::String::new(),
            ICBONDMIJDC: ::std::vec::Vec::new(),
            HBAHKLCCCBG: ::std::vec::Vec::new(),
            DEJJPHCJLBO: 0,
            JBKCDEEIKKN: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for NABJDLFFNAF {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("NABJDLFFNAF").unwrap()).clone()
    }
}

impl ::std::fmt::Display for NABJDLFFNAF {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for NABJDLFFNAF {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11NABJDLFFNAF.proto\x1a\x11DHIPMOLCCHJ.proto\x1a\x11KHBAFNOEJOE.prot\
    o\"\xba\x05\n\x0bNABJDLFFNAF\x12\x20\n\x0bLGCEACIAHBJ\x18\x0f\x20\x01(\
    \x04R\x0bLGCEACIAHBJ\x12\x20\n\x0bENPCCPAMDHK\x18\x04\x20\x01(\rR\x0bENP\
    CCPAMDHK\x12\x20\n\x0bGAGHJMKACBM\x18\x02\x20\x01(\x04R\x0bGAGHJMKACBM\
    \x12.\n\x0bCKMKLNOAJAF\x18\t\x20\x03(\x0b2\x0c.DHIPMOLCCHJR\x0bCKMKLNOAJ\
    AF\x12\x20\n\x0bKEAOHKHKBCA\x18\x03\x20\x01(\rR\x0bKEAOHKHKBCA\x12\x20\n\
    \x0bDLCMPPCGJAL\x18\x0e\x20\x01(\x08R\x0bDLCMPPCGJAL\x12\x20\n\x0bEILAKP\
    NJBJN\x18\x0c\x20\x01(\rR\x0bEILAKPNJBJN\x12\x20\n\x0bGNILCGBHAMM\x18\r\
    \x20\x01(\rR\x0bGNILCGBHAMM\x12.\n\x0bHAJKAHEDEMM\x18\x08\x20\x03(\x0b2\
    \x0c.KHBAFNOEJOER\x0bHAJKAHEDEMM\x12\x20\n\x0bCIAFBNOKALL\x18\x07\x20\
    \x01(\rR\x0bCIAFBNOKALL\x12!\n\x0bFPEGIACNKHH\x18\xbc\x0b\x20\x01(\tR\
    \x0bFPEGIACNKHH\x12.\n\x0bIFENKDFNNEI\x18\x01\x20\x03(\x0b2\x0c.DHIPMOLC\
    CHJR\x0bIFENKDFNNEI\x12!\n\x0bGADNLGEGDLA\x18\xd1\x07\x20\x01(\tR\x0bGAD\
    NLGEGDLA\x12!\n\x0bHJEGMIGPECO\x18\x85\x0e\x20\x01(\tR\x0bHJEGMIGPECO\
    \x12.\n\x0bICBONDMIJDC\x18\n\x20\x03(\x0b2\x0c.DHIPMOLCCHJR\x0bICBONDMIJ\
    DC\x12.\n\x0bHBAHKLCCCBG\x18\x0b\x20\x03(\x0b2\x0c.DHIPMOLCCHJR\x0bHBAHK\
    LCCCBG\x12\x20\n\x0bDEJJPHCJLBO\x18\x06\x20\x01(\rR\x0bDEJJPHCJLBO\x12\
    \x20\n\x0bJBKCDEEIKKN\x18\x05\x20\x01(\x04R\x0bJBKCDEEIKKNb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::DHIPMOLCCHJ::file_descriptor().clone());
            deps.push(super::KHBAFNOEJOE::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(NABJDLFFNAF::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
