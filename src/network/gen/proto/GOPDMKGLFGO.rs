// This file is generated by rust-protobuf 3.4.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `GOPDMKGLFGO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_4_0;

// @@protoc_insertion_point(message:GOPDMKGLFGO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct GOPDMKGLFGO {
    // message fields
    // @@protoc_insertion_point(field:GOPDMKGLFGO.avatar_list)
    pub avatar_list: ::std::vec::Vec<super::EDBLNCMJOHJ::EDBLNCMJOHJ>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.ODKMAILJHKD)
    pub ODKMAILJHKD: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.KJLLPPCICEO)
    pub KJLLPPCICEO: ::std::vec::Vec<super::EDBLNCMJOHJ::EDBLNCMJOHJ>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.PBIGGPACCPB)
    pub PBIGGPACCPB: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.DLEEJGFABLC)
    pub DLEEJGFABLC: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.OCDLCGIILKI)
    pub OCDLCGIILKI: ::std::vec::Vec<super::ELCMMOPPIJC::ELCMMOPPIJC>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.BDJNIELOECJ)
    pub BDJNIELOECJ: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.LAMPJFOHJDA)
    pub LAMPJFOHJDA: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.OGEODOIGGJG)
    pub OGEODOIGGJG: bool,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.IIHOAOFHKOC)
    pub IIHOAOFHKOC: ::std::vec::Vec<super::TreasureDungeonRecordData::TreasureDungeonRecordData>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.OAMFCJMMPEI)
    pub OAMFCJMMPEI: bool,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.LKCAMBLNECA)
    pub LKCAMBLNECA: ::std::vec::Vec<super::DFNAPNFOIIF::DFNAPNFOIIF>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.NGDAJKNLELE)
    pub NGDAJKNLELE: ::std::vec::Vec<super::HHFLEHNGIGB::HHFLEHNGIGB>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.PPENLIMJKOE)
    pub PPENLIMJKOE: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.DMFKEGCHDDN)
    pub DMFKEGCHDDN: u32,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.FAEMAMOAAFD)
    pub FAEMAMOAAFD: ::std::vec::Vec<super::JIAFNGIBBGH::JIAFNGIBBGH>,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.BACILFNANGB)
    pub BACILFNANGB: bool,
    // @@protoc_insertion_point(field:GOPDMKGLFGO.HLAJENAGDDE)
    pub HLAJENAGDDE: u32,
    // special fields
    // @@protoc_insertion_point(special_field:GOPDMKGLFGO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a GOPDMKGLFGO {
    fn default() -> &'a GOPDMKGLFGO {
        <GOPDMKGLFGO as ::protobuf::Message>::default_instance()
    }
}

impl GOPDMKGLFGO {
    pub fn new() -> GOPDMKGLFGO {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(18);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "avatar_list",
            |m: &GOPDMKGLFGO| { &m.avatar_list },
            |m: &mut GOPDMKGLFGO| { &mut m.avatar_list },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ODKMAILJHKD",
            |m: &GOPDMKGLFGO| { &m.ODKMAILJHKD },
            |m: &mut GOPDMKGLFGO| { &mut m.ODKMAILJHKD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "KJLLPPCICEO",
            |m: &GOPDMKGLFGO| { &m.KJLLPPCICEO },
            |m: &mut GOPDMKGLFGO| { &mut m.KJLLPPCICEO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PBIGGPACCPB",
            |m: &GOPDMKGLFGO| { &m.PBIGGPACCPB },
            |m: &mut GOPDMKGLFGO| { &mut m.PBIGGPACCPB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DLEEJGFABLC",
            |m: &GOPDMKGLFGO| { &m.DLEEJGFABLC },
            |m: &mut GOPDMKGLFGO| { &mut m.DLEEJGFABLC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "OCDLCGIILKI",
            |m: &GOPDMKGLFGO| { &m.OCDLCGIILKI },
            |m: &mut GOPDMKGLFGO| { &mut m.OCDLCGIILKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BDJNIELOECJ",
            |m: &GOPDMKGLFGO| { &m.BDJNIELOECJ },
            |m: &mut GOPDMKGLFGO| { &mut m.BDJNIELOECJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LAMPJFOHJDA",
            |m: &GOPDMKGLFGO| { &m.LAMPJFOHJDA },
            |m: &mut GOPDMKGLFGO| { &mut m.LAMPJFOHJDA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OGEODOIGGJG",
            |m: &GOPDMKGLFGO| { &m.OGEODOIGGJG },
            |m: &mut GOPDMKGLFGO| { &mut m.OGEODOIGGJG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "IIHOAOFHKOC",
            |m: &GOPDMKGLFGO| { &m.IIHOAOFHKOC },
            |m: &mut GOPDMKGLFGO| { &mut m.IIHOAOFHKOC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OAMFCJMMPEI",
            |m: &GOPDMKGLFGO| { &m.OAMFCJMMPEI },
            |m: &mut GOPDMKGLFGO| { &mut m.OAMFCJMMPEI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LKCAMBLNECA",
            |m: &GOPDMKGLFGO| { &m.LKCAMBLNECA },
            |m: &mut GOPDMKGLFGO| { &mut m.LKCAMBLNECA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "NGDAJKNLELE",
            |m: &GOPDMKGLFGO| { &m.NGDAJKNLELE },
            |m: &mut GOPDMKGLFGO| { &mut m.NGDAJKNLELE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PPENLIMJKOE",
            |m: &GOPDMKGLFGO| { &m.PPENLIMJKOE },
            |m: &mut GOPDMKGLFGO| { &mut m.PPENLIMJKOE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DMFKEGCHDDN",
            |m: &GOPDMKGLFGO| { &m.DMFKEGCHDDN },
            |m: &mut GOPDMKGLFGO| { &mut m.DMFKEGCHDDN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FAEMAMOAAFD",
            |m: &GOPDMKGLFGO| { &m.FAEMAMOAAFD },
            |m: &mut GOPDMKGLFGO| { &mut m.FAEMAMOAAFD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BACILFNANGB",
            |m: &GOPDMKGLFGO| { &m.BACILFNANGB },
            |m: &mut GOPDMKGLFGO| { &mut m.BACILFNANGB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HLAJENAGDDE",
            |m: &GOPDMKGLFGO| { &m.HLAJENAGDDE },
            |m: &mut GOPDMKGLFGO| { &mut m.HLAJENAGDDE },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<GOPDMKGLFGO>(
            "GOPDMKGLFGO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for GOPDMKGLFGO {
    const NAME: &'static str = "GOPDMKGLFGO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                4922 => {
                    self.avatar_list.push(is.read_message()?);
                },
                112 => {
                    self.ODKMAILJHKD = is.read_uint32()?;
                },
                8698 => {
                    self.KJLLPPCICEO.push(is.read_message()?);
                },
                96 => {
                    self.PBIGGPACCPB = is.read_uint32()?;
                },
                80 => {
                    self.DLEEJGFABLC = is.read_uint32()?;
                },
                6602 => {
                    self.OCDLCGIILKI.push(is.read_message()?);
                },
                56 => {
                    self.BDJNIELOECJ = is.read_uint32()?;
                },
                14000 => {
                    self.LAMPJFOHJDA = is.read_uint32()?;
                },
                2944 => {
                    self.OGEODOIGGJG = is.read_bool()?;
                },
                26 => {
                    self.IIHOAOFHKOC.push(is.read_message()?);
                },
                2728 => {
                    self.OAMFCJMMPEI = is.read_bool()?;
                },
                1530 => {
                    self.LKCAMBLNECA.push(is.read_message()?);
                },
                2778 => {
                    self.NGDAJKNLELE.push(is.read_message()?);
                },
                40 => {
                    self.PPENLIMJKOE = is.read_uint32()?;
                },
                48 => {
                    self.DMFKEGCHDDN = is.read_uint32()?;
                },
                18 => {
                    self.FAEMAMOAAFD.push(is.read_message()?);
                },
                9920 => {
                    self.BACILFNANGB = is.read_bool()?;
                },
                64 => {
                    self.HLAJENAGDDE = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.avatar_list {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.ODKMAILJHKD != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.ODKMAILJHKD);
        }
        for value in &self.KJLLPPCICEO {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.PBIGGPACCPB != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.PBIGGPACCPB);
        }
        if self.DLEEJGFABLC != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.DLEEJGFABLC);
        }
        for value in &self.OCDLCGIILKI {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.BDJNIELOECJ != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.BDJNIELOECJ);
        }
        if self.LAMPJFOHJDA != 0 {
            my_size += ::protobuf::rt::uint32_size(1750, self.LAMPJFOHJDA);
        }
        if self.OGEODOIGGJG != false {
            my_size += 2 + 1;
        }
        for value in &self.IIHOAOFHKOC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.OAMFCJMMPEI != false {
            my_size += 2 + 1;
        }
        for value in &self.LKCAMBLNECA {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.NGDAJKNLELE {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.PPENLIMJKOE != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.PPENLIMJKOE);
        }
        if self.DMFKEGCHDDN != 0 {
            my_size += ::protobuf::rt::uint32_size(6, self.DMFKEGCHDDN);
        }
        for value in &self.FAEMAMOAAFD {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.BACILFNANGB != false {
            my_size += 2 + 1;
        }
        if self.HLAJENAGDDE != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.HLAJENAGDDE);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.avatar_list {
            ::protobuf::rt::write_message_field_with_cached_size(615, v, os)?;
        };
        if self.ODKMAILJHKD != 0 {
            os.write_uint32(14, self.ODKMAILJHKD)?;
        }
        for v in &self.KJLLPPCICEO {
            ::protobuf::rt::write_message_field_with_cached_size(1087, v, os)?;
        };
        if self.PBIGGPACCPB != 0 {
            os.write_uint32(12, self.PBIGGPACCPB)?;
        }
        if self.DLEEJGFABLC != 0 {
            os.write_uint32(10, self.DLEEJGFABLC)?;
        }
        for v in &self.OCDLCGIILKI {
            ::protobuf::rt::write_message_field_with_cached_size(825, v, os)?;
        };
        if self.BDJNIELOECJ != 0 {
            os.write_uint32(7, self.BDJNIELOECJ)?;
        }
        if self.LAMPJFOHJDA != 0 {
            os.write_uint32(1750, self.LAMPJFOHJDA)?;
        }
        if self.OGEODOIGGJG != false {
            os.write_bool(368, self.OGEODOIGGJG)?;
        }
        for v in &self.IIHOAOFHKOC {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        };
        if self.OAMFCJMMPEI != false {
            os.write_bool(341, self.OAMFCJMMPEI)?;
        }
        for v in &self.LKCAMBLNECA {
            ::protobuf::rt::write_message_field_with_cached_size(191, v, os)?;
        };
        for v in &self.NGDAJKNLELE {
            ::protobuf::rt::write_message_field_with_cached_size(347, v, os)?;
        };
        if self.PPENLIMJKOE != 0 {
            os.write_uint32(5, self.PPENLIMJKOE)?;
        }
        if self.DMFKEGCHDDN != 0 {
            os.write_uint32(6, self.DMFKEGCHDDN)?;
        }
        for v in &self.FAEMAMOAAFD {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        };
        if self.BACILFNANGB != false {
            os.write_bool(1240, self.BACILFNANGB)?;
        }
        if self.HLAJENAGDDE != 0 {
            os.write_uint32(8, self.HLAJENAGDDE)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> GOPDMKGLFGO {
        GOPDMKGLFGO::new()
    }

    fn clear(&mut self) {
        self.avatar_list.clear();
        self.ODKMAILJHKD = 0;
        self.KJLLPPCICEO.clear();
        self.PBIGGPACCPB = 0;
        self.DLEEJGFABLC = 0;
        self.OCDLCGIILKI.clear();
        self.BDJNIELOECJ = 0;
        self.LAMPJFOHJDA = 0;
        self.OGEODOIGGJG = false;
        self.IIHOAOFHKOC.clear();
        self.OAMFCJMMPEI = false;
        self.LKCAMBLNECA.clear();
        self.NGDAJKNLELE.clear();
        self.PPENLIMJKOE = 0;
        self.DMFKEGCHDDN = 0;
        self.FAEMAMOAAFD.clear();
        self.BACILFNANGB = false;
        self.HLAJENAGDDE = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static GOPDMKGLFGO {
        static instance: GOPDMKGLFGO = GOPDMKGLFGO {
            avatar_list: ::std::vec::Vec::new(),
            ODKMAILJHKD: 0,
            KJLLPPCICEO: ::std::vec::Vec::new(),
            PBIGGPACCPB: 0,
            DLEEJGFABLC: 0,
            OCDLCGIILKI: ::std::vec::Vec::new(),
            BDJNIELOECJ: 0,
            LAMPJFOHJDA: 0,
            OGEODOIGGJG: false,
            IIHOAOFHKOC: ::std::vec::Vec::new(),
            OAMFCJMMPEI: false,
            LKCAMBLNECA: ::std::vec::Vec::new(),
            NGDAJKNLELE: ::std::vec::Vec::new(),
            PPENLIMJKOE: 0,
            DMFKEGCHDDN: 0,
            FAEMAMOAAFD: ::std::vec::Vec::new(),
            BACILFNANGB: false,
            HLAJENAGDDE: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for GOPDMKGLFGO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("GOPDMKGLFGO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for GOPDMKGLFGO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for GOPDMKGLFGO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11GOPDMKGLFGO.proto\x1a\x11DFNAPNFOIIF.proto\x1a\x11EDBLNCMJOHJ.prot\
    o\x1a\x11ELCMMOPPIJC.proto\x1a\x11HHFLEHNGIGB.proto\x1a\x11JIAFNGIBBGH.p\
    roto\x1a\x1fTreasureDungeonRecordData.proto\"\xe9\x05\n\x0bGOPDMKGLFGO\
    \x12.\n\x0bavatar_list\x18\xe7\x04\x20\x03(\x0b2\x0c.EDBLNCMJOHJR\navata\
    rList\x12\x20\n\x0bODKMAILJHKD\x18\x0e\x20\x01(\rR\x0bODKMAILJHKD\x12/\n\
    \x0bKJLLPPCICEO\x18\xbf\x08\x20\x03(\x0b2\x0c.EDBLNCMJOHJR\x0bKJLLPPCICE\
    O\x12\x20\n\x0bPBIGGPACCPB\x18\x0c\x20\x01(\rR\x0bPBIGGPACCPB\x12\x20\n\
    \x0bDLEEJGFABLC\x18\n\x20\x01(\rR\x0bDLEEJGFABLC\x12/\n\x0bOCDLCGIILKI\
    \x18\xb9\x06\x20\x03(\x0b2\x0c.ELCMMOPPIJCR\x0bOCDLCGIILKI\x12\x20\n\x0b\
    BDJNIELOECJ\x18\x07\x20\x01(\rR\x0bBDJNIELOECJ\x12!\n\x0bLAMPJFOHJDA\x18\
    \xd6\r\x20\x01(\rR\x0bLAMPJFOHJDA\x12!\n\x0bOGEODOIGGJG\x18\xf0\x02\x20\
    \x01(\x08R\x0bOGEODOIGGJG\x12<\n\x0bIIHOAOFHKOC\x18\x03\x20\x03(\x0b2\
    \x1a.TreasureDungeonRecordDataR\x0bIIHOAOFHKOC\x12!\n\x0bOAMFCJMMPEI\x18\
    \xd5\x02\x20\x01(\x08R\x0bOAMFCJMMPEI\x12/\n\x0bLKCAMBLNECA\x18\xbf\x01\
    \x20\x03(\x0b2\x0c.DFNAPNFOIIFR\x0bLKCAMBLNECA\x12/\n\x0bNGDAJKNLELE\x18\
    \xdb\x02\x20\x03(\x0b2\x0c.HHFLEHNGIGBR\x0bNGDAJKNLELE\x12\x20\n\x0bPPEN\
    LIMJKOE\x18\x05\x20\x01(\rR\x0bPPENLIMJKOE\x12\x20\n\x0bDMFKEGCHDDN\x18\
    \x06\x20\x01(\rR\x0bDMFKEGCHDDN\x12.\n\x0bFAEMAMOAAFD\x18\x02\x20\x03(\
    \x0b2\x0c.JIAFNGIBBGHR\x0bFAEMAMOAAFD\x12!\n\x0bBACILFNANGB\x18\xd8\t\
    \x20\x01(\x08R\x0bBACILFNANGB\x12\x20\n\x0bHLAJENAGDDE\x18\x08\x20\x01(\
    \rR\x0bHLAJENAGDDEb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(6);
            deps.push(super::DFNAPNFOIIF::file_descriptor().clone());
            deps.push(super::EDBLNCMJOHJ::file_descriptor().clone());
            deps.push(super::ELCMMOPPIJC::file_descriptor().clone());
            deps.push(super::HHFLEHNGIGB::file_descriptor().clone());
            deps.push(super::JIAFNGIBBGH::file_descriptor().clone());
            deps.push(super::TreasureDungeonRecordData::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(GOPDMKGLFGO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
