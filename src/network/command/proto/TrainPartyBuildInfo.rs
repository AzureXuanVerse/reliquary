// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `TrainPartyBuildInfo.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:TrainPartyBuildInfo)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct TrainPartyBuildInfo {
    // message fields
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.DBJHEMIPPIM)
    pub DBJHEMIPPIM: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.OBOKGLCMKKE)
    pub OBOKGLCMKKE: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.CIGACGHPDGK)
    pub CIGACGHPDGK: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.EOHBBEAKODF)
    pub EOHBBEAKODF: ::std::vec::Vec<super::INDFFNNHOHC::INDFFNNHOHC>,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.EEBNAAPBKCN)
    pub EEBNAAPBKCN: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.CNAJOIGNMLJ)
    pub CNAJOIGNMLJ: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.LLEPHOELGDA)
    pub LLEPHOELGDA: ::std::vec::Vec<super::KFLDAMAAIKB::KFLDAMAAIKB>,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.PPFFKFGOLLJ)
    pub PPFFKFGOLLJ: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.FLBNEKGIDBO)
    pub FLBNEKGIDBO: u32,
    // @@protoc_insertion_point(field:TrainPartyBuildInfo.MCFMAEPOKBK)
    pub MCFMAEPOKBK: ::std::vec::Vec<u32>,
    // special fields
    // @@protoc_insertion_point(special_field:TrainPartyBuildInfo.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a TrainPartyBuildInfo {
    fn default() -> &'a TrainPartyBuildInfo {
        <TrainPartyBuildInfo as ::protobuf::Message>::default_instance()
    }
}

impl TrainPartyBuildInfo {
    pub fn new() -> TrainPartyBuildInfo {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(10);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DBJHEMIPPIM",
            |m: &TrainPartyBuildInfo| { &m.DBJHEMIPPIM },
            |m: &mut TrainPartyBuildInfo| { &mut m.DBJHEMIPPIM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OBOKGLCMKKE",
            |m: &TrainPartyBuildInfo| { &m.OBOKGLCMKKE },
            |m: &mut TrainPartyBuildInfo| { &mut m.OBOKGLCMKKE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "CIGACGHPDGK",
            |m: &TrainPartyBuildInfo| { &m.CIGACGHPDGK },
            |m: &mut TrainPartyBuildInfo| { &mut m.CIGACGHPDGK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "EOHBBEAKODF",
            |m: &TrainPartyBuildInfo| { &m.EOHBBEAKODF },
            |m: &mut TrainPartyBuildInfo| { &mut m.EOHBBEAKODF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EEBNAAPBKCN",
            |m: &TrainPartyBuildInfo| { &m.EEBNAAPBKCN },
            |m: &mut TrainPartyBuildInfo| { &mut m.EEBNAAPBKCN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CNAJOIGNMLJ",
            |m: &TrainPartyBuildInfo| { &m.CNAJOIGNMLJ },
            |m: &mut TrainPartyBuildInfo| { &mut m.CNAJOIGNMLJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LLEPHOELGDA",
            |m: &TrainPartyBuildInfo| { &m.LLEPHOELGDA },
            |m: &mut TrainPartyBuildInfo| { &mut m.LLEPHOELGDA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PPFFKFGOLLJ",
            |m: &TrainPartyBuildInfo| { &m.PPFFKFGOLLJ },
            |m: &mut TrainPartyBuildInfo| { &mut m.PPFFKFGOLLJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FLBNEKGIDBO",
            |m: &TrainPartyBuildInfo| { &m.FLBNEKGIDBO },
            |m: &mut TrainPartyBuildInfo| { &mut m.FLBNEKGIDBO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "MCFMAEPOKBK",
            |m: &TrainPartyBuildInfo| { &m.MCFMAEPOKBK },
            |m: &mut TrainPartyBuildInfo| { &mut m.MCFMAEPOKBK },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<TrainPartyBuildInfo>(
            "TrainPartyBuildInfo",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for TrainPartyBuildInfo {
    const NAME: &'static str = "TrainPartyBuildInfo";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                40 => {
                    self.DBJHEMIPPIM = is.read_uint32()?;
                },
                32 => {
                    self.OBOKGLCMKKE = is.read_uint32()?;
                },
                58 => {
                    is.read_repeated_packed_uint32_into(&mut self.CIGACGHPDGK)?;
                },
                56 => {
                    self.CIGACGHPDGK.push(is.read_uint32()?);
                },
                98 => {
                    self.EOHBBEAKODF.push(is.read_message()?);
                },
                80 => {
                    self.EEBNAAPBKCN = is.read_uint32()?;
                },
                120 => {
                    self.CNAJOIGNMLJ = is.read_uint32()?;
                },
                26 => {
                    self.LLEPHOELGDA.push(is.read_message()?);
                },
                64 => {
                    self.PPFFKFGOLLJ = is.read_uint32()?;
                },
                16 => {
                    self.FLBNEKGIDBO = is.read_uint32()?;
                },
                106 => {
                    is.read_repeated_packed_uint32_into(&mut self.MCFMAEPOKBK)?;
                },
                104 => {
                    self.MCFMAEPOKBK.push(is.read_uint32()?);
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.DBJHEMIPPIM != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.DBJHEMIPPIM);
        }
        if self.OBOKGLCMKKE != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.OBOKGLCMKKE);
        }
        my_size += ::protobuf::rt::vec_packed_uint32_size(7, &self.CIGACGHPDGK);
        for value in &self.EOHBBEAKODF {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.EEBNAAPBKCN != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.EEBNAAPBKCN);
        }
        if self.CNAJOIGNMLJ != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.CNAJOIGNMLJ);
        }
        for value in &self.LLEPHOELGDA {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.PPFFKFGOLLJ != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.PPFFKFGOLLJ);
        }
        if self.FLBNEKGIDBO != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.FLBNEKGIDBO);
        }
        my_size += ::protobuf::rt::vec_packed_uint32_size(13, &self.MCFMAEPOKBK);
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.DBJHEMIPPIM != 0 {
            os.write_uint32(5, self.DBJHEMIPPIM)?;
        }
        if self.OBOKGLCMKKE != 0 {
            os.write_uint32(4, self.OBOKGLCMKKE)?;
        }
        os.write_repeated_packed_uint32(7, &self.CIGACGHPDGK)?;
        for v in &self.EOHBBEAKODF {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.EEBNAAPBKCN != 0 {
            os.write_uint32(10, self.EEBNAAPBKCN)?;
        }
        if self.CNAJOIGNMLJ != 0 {
            os.write_uint32(15, self.CNAJOIGNMLJ)?;
        }
        for v in &self.LLEPHOELGDA {
            ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
        };
        if self.PPFFKFGOLLJ != 0 {
            os.write_uint32(8, self.PPFFKFGOLLJ)?;
        }
        if self.FLBNEKGIDBO != 0 {
            os.write_uint32(2, self.FLBNEKGIDBO)?;
        }
        os.write_repeated_packed_uint32(13, &self.MCFMAEPOKBK)?;
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> TrainPartyBuildInfo {
        TrainPartyBuildInfo::new()
    }

    fn clear(&mut self) {
        self.DBJHEMIPPIM = 0;
        self.OBOKGLCMKKE = 0;
        self.CIGACGHPDGK.clear();
        self.EOHBBEAKODF.clear();
        self.EEBNAAPBKCN = 0;
        self.CNAJOIGNMLJ = 0;
        self.LLEPHOELGDA.clear();
        self.PPFFKFGOLLJ = 0;
        self.FLBNEKGIDBO = 0;
        self.MCFMAEPOKBK.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static TrainPartyBuildInfo {
        static instance: TrainPartyBuildInfo = TrainPartyBuildInfo {
            DBJHEMIPPIM: 0,
            OBOKGLCMKKE: 0,
            CIGACGHPDGK: ::std::vec::Vec::new(),
            EOHBBEAKODF: ::std::vec::Vec::new(),
            EEBNAAPBKCN: 0,
            CNAJOIGNMLJ: 0,
            LLEPHOELGDA: ::std::vec::Vec::new(),
            PPFFKFGOLLJ: 0,
            FLBNEKGIDBO: 0,
            MCFMAEPOKBK: ::std::vec::Vec::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for TrainPartyBuildInfo {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("TrainPartyBuildInfo").unwrap()).clone()
    }
}

impl ::std::fmt::Display for TrainPartyBuildInfo {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for TrainPartyBuildInfo {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x19TrainPartyBuildInfo.proto\x1a\x11INDFFNNHOHC.proto\x1a\x11KFLDAMAA\
    IKB.proto\"\x85\x03\n\x13TrainPartyBuildInfo\x12\x20\n\x0bDBJHEMIPPIM\
    \x18\x05\x20\x01(\rR\x0bDBJHEMIPPIM\x12\x20\n\x0bOBOKGLCMKKE\x18\x04\x20\
    \x01(\rR\x0bOBOKGLCMKKE\x12\x20\n\x0bCIGACGHPDGK\x18\x07\x20\x03(\rR\x0b\
    CIGACGHPDGK\x12.\n\x0bEOHBBEAKODF\x18\x0c\x20\x03(\x0b2\x0c.INDFFNNHOHCR\
    \x0bEOHBBEAKODF\x12\x20\n\x0bEEBNAAPBKCN\x18\n\x20\x01(\rR\x0bEEBNAAPBKC\
    N\x12\x20\n\x0bCNAJOIGNMLJ\x18\x0f\x20\x01(\rR\x0bCNAJOIGNMLJ\x12.\n\x0b\
    LLEPHOELGDA\x18\x03\x20\x03(\x0b2\x0c.KFLDAMAAIKBR\x0bLLEPHOELGDA\x12\
    \x20\n\x0bPPFFKFGOLLJ\x18\x08\x20\x01(\rR\x0bPPFFKFGOLLJ\x12\x20\n\x0bFL\
    BNEKGIDBO\x18\x02\x20\x01(\rR\x0bFLBNEKGIDBO\x12\x20\n\x0bMCFMAEPOKBK\
    \x18\r\x20\x03(\rR\x0bMCFMAEPOKBKb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::INDFFNNHOHC::file_descriptor().clone());
            deps.push(super::KFLDAMAAIKB::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(TrainPartyBuildInfo::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
