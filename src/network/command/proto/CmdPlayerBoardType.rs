// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdPlayerBoardType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdPlayerBoardType)
pub enum CmdPlayerBoardType {
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdPlayerBoardTypeNone)
    CmdPlayerBoardTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdGetPlayerBoardDataScRsp)
    CmdGetPlayerBoardDataScRsp = 2813,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetIsDisplayAvatarInfoScRsp)
    CmdSetIsDisplayAvatarInfoScRsp = 2889,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetDisplayAvatarCsReq)
    CmdSetDisplayAvatarCsReq = 2835,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetSignatureScRsp)
    CmdSetSignatureScRsp = 2895,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetIsDisplayAvatarInfoCsReq)
    CmdSetIsDisplayAvatarInfoCsReq = 2870,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdGetPlayerBoardDataCsReq)
    CmdGetPlayerBoardDataCsReq = 2811,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetPersonalCardScRsp)
    CmdSetPersonalCardScRsp = 2873,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetPersonalCardCsReq)
    CmdSetPersonalCardCsReq = 2850,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdUnlockHeadIconScNotify)
    CmdUnlockHeadIconScNotify = 2826,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetSignatureCsReq)
    CmdSetSignatureCsReq = 2830,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetDisplayAvatarScRsp)
    CmdSetDisplayAvatarScRsp = 2806,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetAssistAvatarScRsp)
    CmdSetAssistAvatarScRsp = 2836,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetHeadIconCsReq)
    CmdSetHeadIconCsReq = 2847,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetHeadIconScRsp)
    CmdSetHeadIconScRsp = 2809,
    // @@protoc_insertion_point(enum_value:CmdPlayerBoardType.CmdSetAssistAvatarCsReq)
    CmdSetAssistAvatarCsReq = 2818,
}

impl ::protobuf::Enum for CmdPlayerBoardType {
    const NAME: &'static str = "CmdPlayerBoardType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdPlayerBoardType> {
        match value {
            0 => ::std::option::Option::Some(CmdPlayerBoardType::CmdPlayerBoardTypeNone),
            2813 => ::std::option::Option::Some(CmdPlayerBoardType::CmdGetPlayerBoardDataScRsp),
            2889 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoScRsp),
            2835 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetDisplayAvatarCsReq),
            2895 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetSignatureScRsp),
            2870 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoCsReq),
            2811 => ::std::option::Option::Some(CmdPlayerBoardType::CmdGetPlayerBoardDataCsReq),
            2873 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetPersonalCardScRsp),
            2850 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetPersonalCardCsReq),
            2826 => ::std::option::Option::Some(CmdPlayerBoardType::CmdUnlockHeadIconScNotify),
            2830 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetSignatureCsReq),
            2806 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetDisplayAvatarScRsp),
            2836 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetAssistAvatarScRsp),
            2847 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetHeadIconCsReq),
            2809 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetHeadIconScRsp),
            2818 => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetAssistAvatarCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdPlayerBoardType> {
        match str {
            "CmdPlayerBoardTypeNone" => ::std::option::Option::Some(CmdPlayerBoardType::CmdPlayerBoardTypeNone),
            "CmdGetPlayerBoardDataScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdGetPlayerBoardDataScRsp),
            "CmdSetIsDisplayAvatarInfoScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoScRsp),
            "CmdSetDisplayAvatarCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetDisplayAvatarCsReq),
            "CmdSetSignatureScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetSignatureScRsp),
            "CmdSetIsDisplayAvatarInfoCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoCsReq),
            "CmdGetPlayerBoardDataCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdGetPlayerBoardDataCsReq),
            "CmdSetPersonalCardScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetPersonalCardScRsp),
            "CmdSetPersonalCardCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetPersonalCardCsReq),
            "CmdUnlockHeadIconScNotify" => ::std::option::Option::Some(CmdPlayerBoardType::CmdUnlockHeadIconScNotify),
            "CmdSetSignatureCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetSignatureCsReq),
            "CmdSetDisplayAvatarScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetDisplayAvatarScRsp),
            "CmdSetAssistAvatarScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetAssistAvatarScRsp),
            "CmdSetHeadIconCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetHeadIconCsReq),
            "CmdSetHeadIconScRsp" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetHeadIconScRsp),
            "CmdSetAssistAvatarCsReq" => ::std::option::Option::Some(CmdPlayerBoardType::CmdSetAssistAvatarCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdPlayerBoardType] = &[
        CmdPlayerBoardType::CmdPlayerBoardTypeNone,
        CmdPlayerBoardType::CmdGetPlayerBoardDataScRsp,
        CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoScRsp,
        CmdPlayerBoardType::CmdSetDisplayAvatarCsReq,
        CmdPlayerBoardType::CmdSetSignatureScRsp,
        CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoCsReq,
        CmdPlayerBoardType::CmdGetPlayerBoardDataCsReq,
        CmdPlayerBoardType::CmdSetPersonalCardScRsp,
        CmdPlayerBoardType::CmdSetPersonalCardCsReq,
        CmdPlayerBoardType::CmdUnlockHeadIconScNotify,
        CmdPlayerBoardType::CmdSetSignatureCsReq,
        CmdPlayerBoardType::CmdSetDisplayAvatarScRsp,
        CmdPlayerBoardType::CmdSetAssistAvatarScRsp,
        CmdPlayerBoardType::CmdSetHeadIconCsReq,
        CmdPlayerBoardType::CmdSetHeadIconScRsp,
        CmdPlayerBoardType::CmdSetAssistAvatarCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdPlayerBoardType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdPlayerBoardType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdPlayerBoardType::CmdPlayerBoardTypeNone => 0,
            CmdPlayerBoardType::CmdGetPlayerBoardDataScRsp => 1,
            CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoScRsp => 2,
            CmdPlayerBoardType::CmdSetDisplayAvatarCsReq => 3,
            CmdPlayerBoardType::CmdSetSignatureScRsp => 4,
            CmdPlayerBoardType::CmdSetIsDisplayAvatarInfoCsReq => 5,
            CmdPlayerBoardType::CmdGetPlayerBoardDataCsReq => 6,
            CmdPlayerBoardType::CmdSetPersonalCardScRsp => 7,
            CmdPlayerBoardType::CmdSetPersonalCardCsReq => 8,
            CmdPlayerBoardType::CmdUnlockHeadIconScNotify => 9,
            CmdPlayerBoardType::CmdSetSignatureCsReq => 10,
            CmdPlayerBoardType::CmdSetDisplayAvatarScRsp => 11,
            CmdPlayerBoardType::CmdSetAssistAvatarScRsp => 12,
            CmdPlayerBoardType::CmdSetHeadIconCsReq => 13,
            CmdPlayerBoardType::CmdSetHeadIconScRsp => 14,
            CmdPlayerBoardType::CmdSetAssistAvatarCsReq => 15,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdPlayerBoardType {
    fn default() -> Self {
        CmdPlayerBoardType::CmdPlayerBoardTypeNone
    }
}

impl CmdPlayerBoardType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdPlayerBoardType>("CmdPlayerBoardType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x18CmdPlayerBoardType.proto*\xfc\x03\n\x12CmdPlayerBoardType\x12\x1a\
    \n\x16CmdPlayerBoardTypeNone\x10\0\x12\x1f\n\x1aCmdGetPlayerBoardDataScR\
    sp\x10\xfd\x15\x12#\n\x1eCmdSetIsDisplayAvatarInfoScRsp\x10\xc9\x16\x12\
    \x1d\n\x18CmdSetDisplayAvatarCsReq\x10\x93\x16\x12\x19\n\x14CmdSetSignat\
    ureScRsp\x10\xcf\x16\x12#\n\x1eCmdSetIsDisplayAvatarInfoCsReq\x10\xb6\
    \x16\x12\x1f\n\x1aCmdGetPlayerBoardDataCsReq\x10\xfb\x15\x12\x1c\n\x17Cm\
    dSetPersonalCardScRsp\x10\xb9\x16\x12\x1c\n\x17CmdSetPersonalCardCsReq\
    \x10\xa2\x16\x12\x1e\n\x19CmdUnlockHeadIconScNotify\x10\x8a\x16\x12\x19\
    \n\x14CmdSetSignatureCsReq\x10\x8e\x16\x12\x1d\n\x18CmdSetDisplayAvatarS\
    cRsp\x10\xf6\x15\x12\x1c\n\x17CmdSetAssistAvatarScRsp\x10\x94\x16\x12\
    \x18\n\x13CmdSetHeadIconCsReq\x10\x9f\x16\x12\x18\n\x13CmdSetHeadIconScR\
    sp\x10\xf9\x15\x12\x1c\n\x17CmdSetAssistAvatarCsReq\x10\x82\x16b\x06prot\
    o3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdPlayerBoardType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
