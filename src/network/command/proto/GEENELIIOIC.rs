// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `GEENELIIOIC.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:GEENELIIOIC)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct GEENELIIOIC {
    // message fields
    // @@protoc_insertion_point(field:GEENELIIOIC.JIDFMGIEIFG)
    pub JIDFMGIEIFG: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.DENLMLCJLPG)
    pub DENLMLCJLPG: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.FPHEEMNELNP)
    pub FPHEEMNELNP: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.DPFMJEDHJEL)
    pub DPFMJEDHJEL: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.PCKFCGALKHF)
    pub PCKFCGALKHF: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.IDGEOIOPJOC)
    pub IDGEOIOPJOC: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.ENHLGCCBIBK)
    pub ENHLGCCBIBK: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.PKEFKEEAEPO)
    pub PKEFKEEAEPO: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.LHGDGHDDKFO)
    pub LHGDGHDDKFO: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.ACNPCLJAEHM)
    pub ACNPCLJAEHM: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.EJCMKOCJNKG)
    pub EJCMKOCJNKG: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.IBLPOMNHLKH)
    pub IBLPOMNHLKH: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.POOOLGFKKJL)
    pub POOOLGFKKJL: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.CKIOFJNKEMN)
    pub CKIOFJNKEMN: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MIBPHKFMPHO)
    pub MIBPHKFMPHO: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MIBMPLMOHFJ)
    pub MIBMPLMOHFJ: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MJAGKMJGCGJ)
    pub MJAGKMJGCGJ: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MPNJIKPKOHJ)
    pub MPNJIKPKOHJ: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.AEDFFNFCKOB)
    pub AEDFFNFCKOB: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.NKONNCPILND)
    pub NKONNCPILND: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.AAJMLANMHOL)
    pub AAJMLANMHOL: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.EGOJBFDCCCB)
    pub EGOJBFDCCCB: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.ip)
    pub ip: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.BNDNBGGHGHM)
    pub BNDNBGGHGHM: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.IKAPCFDLECF)
    pub IKAPCFDLECF: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.GAFBCAPLKOE)
    pub GAFBCAPLKOE: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MMOGGEGNJOO)
    pub MMOGGEGNJOO: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.GMKKGACPKLN)
    pub GMKKGACPKLN: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.NEHIFOGIGFC)
    pub NEHIFOGIGFC: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.NCFAPCCLPMO)
    pub NCFAPCCLPMO: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.ECFINAHPDHK)
    pub ECFINAHPDHK: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.KHFHCNKCGHP)
    pub KHFHCNKCGHP: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.KHJNCLIHFAJ)
    pub KHJNCLIHFAJ: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.DFBLBPKACCF)
    pub DFBLBPKACCF: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.KPNGODENJHM)
    pub KPNGODENJHM: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.HNKCDHPHKPE)
    pub HNKCDHPHKPE: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.HOFGCINGKDN)
    pub HOFGCINGKDN: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.AIPKBCMFNJE)
    pub AIPKBCMFNJE: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.IBJJKDDDDJM)
    pub IBJJKDDDDJM: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.LHOOFMAIHPC)
    pub LHOOFMAIHPC: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.CCEOGPCAAIF)
    pub CCEOGPCAAIF: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.GLABCPGPIIE)
    pub GLABCPGPIIE: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.HBCOJKAEAMK)
    pub HBCOJKAEAMK: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.retcode)
    pub retcode: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.stop_begin_time)
    pub stop_begin_time: i64,
    // @@protoc_insertion_point(field:GEENELIIOIC.NDDLCGGIGJD)
    pub NDDLCGGIGJD: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.msg)
    pub msg: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.OOHFGAAOIHE)
    pub OOHFGAAOIHE: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.IPBBIIFGLLD)
    pub IPBBIIFGLLD: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.NNIHJBMMPPK)
    pub NNIHJBMMPPK: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.PBPNOMOFMFP)
    pub PBPNOMOFMFP: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.OPCCFFNILMF)
    pub OPCCFFNILMF: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.PMLGFNOOMHI)
    pub PMLGFNOOMHI: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.EHIMAOFLGIL)
    pub EHIMAOFLGIL: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.LGHNNOOFEKH)
    pub LGHNNOOFEKH: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.LBFNDEALALK)
    pub LBFNDEALALK: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.FEIOJDDGGDI)
    pub FEIOJDDGGDI: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.AEMMEDODJLI)
    pub AEMMEDODJLI: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.port)
    pub port: u32,
    // @@protoc_insertion_point(field:GEENELIIOIC.EFCPBKAIJPB)
    pub EFCPBKAIJPB: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.ECBFEHFPOFJ)
    pub ECBFEHFPOFJ: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.EMKHFJDLIFI)
    pub EMKHFJDLIFI: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.NGCIMHOLJBA)
    pub NGCIMHOLJBA: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.IDNLKBGIFHP)
    pub IDNLKBGIFHP: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.LFGDMMEKOIP)
    pub LFGDMMEKOIP: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.MODIBFHPMCP)
    pub MODIBFHPMCP: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.NIFOEECNMOG)
    pub NIFOEECNMOG: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.LBOBFDKCOCK)
    pub LBOBFDKCOCK: bool,
    // @@protoc_insertion_point(field:GEENELIIOIC.OAOHIECDGCC)
    pub OAOHIECDGCC: ::std::vec::Vec<::std::string::String>,
    // @@protoc_insertion_point(field:GEENELIIOIC.COIEAMEIOKD)
    pub COIEAMEIOKD: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.BPCLCOHBDKI)
    pub BPCLCOHBDKI: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.stop_end_time)
    pub stop_end_time: i64,
    // @@protoc_insertion_point(field:GEENELIIOIC.NKCBGLKPEKA)
    pub NKCBGLKPEKA: ::std::string::String,
    // @@protoc_insertion_point(field:GEENELIIOIC.CFAMGPIFBGB)
    pub CFAMGPIFBGB: ::std::string::String,
    // special fields
    // @@protoc_insertion_point(special_field:GEENELIIOIC.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a GEENELIIOIC {
    fn default() -> &'a GEENELIIOIC {
        <GEENELIIOIC as ::protobuf::Message>::default_instance()
    }
}

impl GEENELIIOIC {
    pub fn new() -> GEENELIIOIC {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(74);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIDFMGIEIFG",
            |m: &GEENELIIOIC| { &m.JIDFMGIEIFG },
            |m: &mut GEENELIIOIC| { &mut m.JIDFMGIEIFG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DENLMLCJLPG",
            |m: &GEENELIIOIC| { &m.DENLMLCJLPG },
            |m: &mut GEENELIIOIC| { &mut m.DENLMLCJLPG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FPHEEMNELNP",
            |m: &GEENELIIOIC| { &m.FPHEEMNELNP },
            |m: &mut GEENELIIOIC| { &mut m.FPHEEMNELNP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DPFMJEDHJEL",
            |m: &GEENELIIOIC| { &m.DPFMJEDHJEL },
            |m: &mut GEENELIIOIC| { &mut m.DPFMJEDHJEL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PCKFCGALKHF",
            |m: &GEENELIIOIC| { &m.PCKFCGALKHF },
            |m: &mut GEENELIIOIC| { &mut m.PCKFCGALKHF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IDGEOIOPJOC",
            |m: &GEENELIIOIC| { &m.IDGEOIOPJOC },
            |m: &mut GEENELIIOIC| { &mut m.IDGEOIOPJOC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ENHLGCCBIBK",
            |m: &GEENELIIOIC| { &m.ENHLGCCBIBK },
            |m: &mut GEENELIIOIC| { &mut m.ENHLGCCBIBK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PKEFKEEAEPO",
            |m: &GEENELIIOIC| { &m.PKEFKEEAEPO },
            |m: &mut GEENELIIOIC| { &mut m.PKEFKEEAEPO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LHGDGHDDKFO",
            |m: &GEENELIIOIC| { &m.LHGDGHDDKFO },
            |m: &mut GEENELIIOIC| { &mut m.LHGDGHDDKFO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ACNPCLJAEHM",
            |m: &GEENELIIOIC| { &m.ACNPCLJAEHM },
            |m: &mut GEENELIIOIC| { &mut m.ACNPCLJAEHM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EJCMKOCJNKG",
            |m: &GEENELIIOIC| { &m.EJCMKOCJNKG },
            |m: &mut GEENELIIOIC| { &mut m.EJCMKOCJNKG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IBLPOMNHLKH",
            |m: &GEENELIIOIC| { &m.IBLPOMNHLKH },
            |m: &mut GEENELIIOIC| { &mut m.IBLPOMNHLKH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "POOOLGFKKJL",
            |m: &GEENELIIOIC| { &m.POOOLGFKKJL },
            |m: &mut GEENELIIOIC| { &mut m.POOOLGFKKJL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CKIOFJNKEMN",
            |m: &GEENELIIOIC| { &m.CKIOFJNKEMN },
            |m: &mut GEENELIIOIC| { &mut m.CKIOFJNKEMN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MIBPHKFMPHO",
            |m: &GEENELIIOIC| { &m.MIBPHKFMPHO },
            |m: &mut GEENELIIOIC| { &mut m.MIBPHKFMPHO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MIBMPLMOHFJ",
            |m: &GEENELIIOIC| { &m.MIBMPLMOHFJ },
            |m: &mut GEENELIIOIC| { &mut m.MIBMPLMOHFJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MJAGKMJGCGJ",
            |m: &GEENELIIOIC| { &m.MJAGKMJGCGJ },
            |m: &mut GEENELIIOIC| { &mut m.MJAGKMJGCGJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MPNJIKPKOHJ",
            |m: &GEENELIIOIC| { &m.MPNJIKPKOHJ },
            |m: &mut GEENELIIOIC| { &mut m.MPNJIKPKOHJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AEDFFNFCKOB",
            |m: &GEENELIIOIC| { &m.AEDFFNFCKOB },
            |m: &mut GEENELIIOIC| { &mut m.AEDFFNFCKOB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NKONNCPILND",
            |m: &GEENELIIOIC| { &m.NKONNCPILND },
            |m: &mut GEENELIIOIC| { &mut m.NKONNCPILND },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AAJMLANMHOL",
            |m: &GEENELIIOIC| { &m.AAJMLANMHOL },
            |m: &mut GEENELIIOIC| { &mut m.AAJMLANMHOL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EGOJBFDCCCB",
            |m: &GEENELIIOIC| { &m.EGOJBFDCCCB },
            |m: &mut GEENELIIOIC| { &mut m.EGOJBFDCCCB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ip",
            |m: &GEENELIIOIC| { &m.ip },
            |m: &mut GEENELIIOIC| { &mut m.ip },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BNDNBGGHGHM",
            |m: &GEENELIIOIC| { &m.BNDNBGGHGHM },
            |m: &mut GEENELIIOIC| { &mut m.BNDNBGGHGHM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IKAPCFDLECF",
            |m: &GEENELIIOIC| { &m.IKAPCFDLECF },
            |m: &mut GEENELIIOIC| { &mut m.IKAPCFDLECF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GAFBCAPLKOE",
            |m: &GEENELIIOIC| { &m.GAFBCAPLKOE },
            |m: &mut GEENELIIOIC| { &mut m.GAFBCAPLKOE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MMOGGEGNJOO",
            |m: &GEENELIIOIC| { &m.MMOGGEGNJOO },
            |m: &mut GEENELIIOIC| { &mut m.MMOGGEGNJOO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GMKKGACPKLN",
            |m: &GEENELIIOIC| { &m.GMKKGACPKLN },
            |m: &mut GEENELIIOIC| { &mut m.GMKKGACPKLN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NEHIFOGIGFC",
            |m: &GEENELIIOIC| { &m.NEHIFOGIGFC },
            |m: &mut GEENELIIOIC| { &mut m.NEHIFOGIGFC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NCFAPCCLPMO",
            |m: &GEENELIIOIC| { &m.NCFAPCCLPMO },
            |m: &mut GEENELIIOIC| { &mut m.NCFAPCCLPMO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ECFINAHPDHK",
            |m: &GEENELIIOIC| { &m.ECFINAHPDHK },
            |m: &mut GEENELIIOIC| { &mut m.ECFINAHPDHK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KHFHCNKCGHP",
            |m: &GEENELIIOIC| { &m.KHFHCNKCGHP },
            |m: &mut GEENELIIOIC| { &mut m.KHFHCNKCGHP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KHJNCLIHFAJ",
            |m: &GEENELIIOIC| { &m.KHJNCLIHFAJ },
            |m: &mut GEENELIIOIC| { &mut m.KHJNCLIHFAJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DFBLBPKACCF",
            |m: &GEENELIIOIC| { &m.DFBLBPKACCF },
            |m: &mut GEENELIIOIC| { &mut m.DFBLBPKACCF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KPNGODENJHM",
            |m: &GEENELIIOIC| { &m.KPNGODENJHM },
            |m: &mut GEENELIIOIC| { &mut m.KPNGODENJHM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HNKCDHPHKPE",
            |m: &GEENELIIOIC| { &m.HNKCDHPHKPE },
            |m: &mut GEENELIIOIC| { &mut m.HNKCDHPHKPE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HOFGCINGKDN",
            |m: &GEENELIIOIC| { &m.HOFGCINGKDN },
            |m: &mut GEENELIIOIC| { &mut m.HOFGCINGKDN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AIPKBCMFNJE",
            |m: &GEENELIIOIC| { &m.AIPKBCMFNJE },
            |m: &mut GEENELIIOIC| { &mut m.AIPKBCMFNJE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IBJJKDDDDJM",
            |m: &GEENELIIOIC| { &m.IBJJKDDDDJM },
            |m: &mut GEENELIIOIC| { &mut m.IBJJKDDDDJM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LHOOFMAIHPC",
            |m: &GEENELIIOIC| { &m.LHOOFMAIHPC },
            |m: &mut GEENELIIOIC| { &mut m.LHOOFMAIHPC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CCEOGPCAAIF",
            |m: &GEENELIIOIC| { &m.CCEOGPCAAIF },
            |m: &mut GEENELIIOIC| { &mut m.CCEOGPCAAIF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "GLABCPGPIIE",
            |m: &GEENELIIOIC| { &m.GLABCPGPIIE },
            |m: &mut GEENELIIOIC| { &mut m.GLABCPGPIIE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HBCOJKAEAMK",
            |m: &GEENELIIOIC| { &m.HBCOJKAEAMK },
            |m: &mut GEENELIIOIC| { &mut m.HBCOJKAEAMK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "retcode",
            |m: &GEENELIIOIC| { &m.retcode },
            |m: &mut GEENELIIOIC| { &mut m.retcode },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "stop_begin_time",
            |m: &GEENELIIOIC| { &m.stop_begin_time },
            |m: &mut GEENELIIOIC| { &mut m.stop_begin_time },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NDDLCGGIGJD",
            |m: &GEENELIIOIC| { &m.NDDLCGGIGJD },
            |m: &mut GEENELIIOIC| { &mut m.NDDLCGGIGJD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "msg",
            |m: &GEENELIIOIC| { &m.msg },
            |m: &mut GEENELIIOIC| { &mut m.msg },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OOHFGAAOIHE",
            |m: &GEENELIIOIC| { &m.OOHFGAAOIHE },
            |m: &mut GEENELIIOIC| { &mut m.OOHFGAAOIHE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IPBBIIFGLLD",
            |m: &GEENELIIOIC| { &m.IPBBIIFGLLD },
            |m: &mut GEENELIIOIC| { &mut m.IPBBIIFGLLD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NNIHJBMMPPK",
            |m: &GEENELIIOIC| { &m.NNIHJBMMPPK },
            |m: &mut GEENELIIOIC| { &mut m.NNIHJBMMPPK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PBPNOMOFMFP",
            |m: &GEENELIIOIC| { &m.PBPNOMOFMFP },
            |m: &mut GEENELIIOIC| { &mut m.PBPNOMOFMFP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "OPCCFFNILMF",
            |m: &GEENELIIOIC| { &m.OPCCFFNILMF },
            |m: &mut GEENELIIOIC| { &mut m.OPCCFFNILMF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PMLGFNOOMHI",
            |m: &GEENELIIOIC| { &m.PMLGFNOOMHI },
            |m: &mut GEENELIIOIC| { &mut m.PMLGFNOOMHI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EHIMAOFLGIL",
            |m: &GEENELIIOIC| { &m.EHIMAOFLGIL },
            |m: &mut GEENELIIOIC| { &mut m.EHIMAOFLGIL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LGHNNOOFEKH",
            |m: &GEENELIIOIC| { &m.LGHNNOOFEKH },
            |m: &mut GEENELIIOIC| { &mut m.LGHNNOOFEKH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LBFNDEALALK",
            |m: &GEENELIIOIC| { &m.LBFNDEALALK },
            |m: &mut GEENELIIOIC| { &mut m.LBFNDEALALK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FEIOJDDGGDI",
            |m: &GEENELIIOIC| { &m.FEIOJDDGGDI },
            |m: &mut GEENELIIOIC| { &mut m.FEIOJDDGGDI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "AEMMEDODJLI",
            |m: &GEENELIIOIC| { &m.AEMMEDODJLI },
            |m: &mut GEENELIIOIC| { &mut m.AEMMEDODJLI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "port",
            |m: &GEENELIIOIC| { &m.port },
            |m: &mut GEENELIIOIC| { &mut m.port },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EFCPBKAIJPB",
            |m: &GEENELIIOIC| { &m.EFCPBKAIJPB },
            |m: &mut GEENELIIOIC| { &mut m.EFCPBKAIJPB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "ECBFEHFPOFJ",
            |m: &GEENELIIOIC| { &m.ECBFEHFPOFJ },
            |m: &mut GEENELIIOIC| { &mut m.ECBFEHFPOFJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EMKHFJDLIFI",
            |m: &GEENELIIOIC| { &m.EMKHFJDLIFI },
            |m: &mut GEENELIIOIC| { &mut m.EMKHFJDLIFI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NGCIMHOLJBA",
            |m: &GEENELIIOIC| { &m.NGCIMHOLJBA },
            |m: &mut GEENELIIOIC| { &mut m.NGCIMHOLJBA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "IDNLKBGIFHP",
            |m: &GEENELIIOIC| { &m.IDNLKBGIFHP },
            |m: &mut GEENELIIOIC| { &mut m.IDNLKBGIFHP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LFGDMMEKOIP",
            |m: &GEENELIIOIC| { &m.LFGDMMEKOIP },
            |m: &mut GEENELIIOIC| { &mut m.LFGDMMEKOIP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MODIBFHPMCP",
            |m: &GEENELIIOIC| { &m.MODIBFHPMCP },
            |m: &mut GEENELIIOIC| { &mut m.MODIBFHPMCP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NIFOEECNMOG",
            |m: &GEENELIIOIC| { &m.NIFOEECNMOG },
            |m: &mut GEENELIIOIC| { &mut m.NIFOEECNMOG },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LBOBFDKCOCK",
            |m: &GEENELIIOIC| { &m.LBOBFDKCOCK },
            |m: &mut GEENELIIOIC| { &mut m.LBOBFDKCOCK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "OAOHIECDGCC",
            |m: &GEENELIIOIC| { &m.OAOHIECDGCC },
            |m: &mut GEENELIIOIC| { &mut m.OAOHIECDGCC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "COIEAMEIOKD",
            |m: &GEENELIIOIC| { &m.COIEAMEIOKD },
            |m: &mut GEENELIIOIC| { &mut m.COIEAMEIOKD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BPCLCOHBDKI",
            |m: &GEENELIIOIC| { &m.BPCLCOHBDKI },
            |m: &mut GEENELIIOIC| { &mut m.BPCLCOHBDKI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "stop_end_time",
            |m: &GEENELIIOIC| { &m.stop_end_time },
            |m: &mut GEENELIIOIC| { &mut m.stop_end_time },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NKCBGLKPEKA",
            |m: &GEENELIIOIC| { &m.NKCBGLKPEKA },
            |m: &mut GEENELIIOIC| { &mut m.NKCBGLKPEKA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CFAMGPIFBGB",
            |m: &GEENELIIOIC| { &m.CFAMGPIFBGB },
            |m: &mut GEENELIIOIC| { &mut m.CFAMGPIFBGB },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<GEENELIIOIC>(
            "GEENELIIOIC",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for GEENELIIOIC {
    const NAME: &'static str = "GEENELIIOIC";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                3762 => {
                    self.JIDFMGIEIFG = is.read_string()?;
                },
                13146 => {
                    self.DENLMLCJLPG = is.read_string()?;
                },
                7418 => {
                    self.FPHEEMNELNP = is.read_string()?;
                },
                14954 => {
                    self.DPFMJEDHJEL = is.read_string()?;
                },
                1392 => {
                    self.PCKFCGALKHF = is.read_bool()?;
                },
                2128 => {
                    self.IDGEOIOPJOC = is.read_bool()?;
                },
                13794 => {
                    self.ENHLGCCBIBK = is.read_string()?;
                },
                4946 => {
                    self.PKEFKEEAEPO = is.read_string()?;
                },
                3274 => {
                    self.LHGDGHDDKFO = is.read_string()?;
                },
                12930 => {
                    self.ACNPCLJAEHM = is.read_string()?;
                },
                15008 => {
                    self.EJCMKOCJNKG = is.read_bool()?;
                },
                14400 => {
                    self.IBLPOMNHLKH = is.read_uint32()?;
                },
                16002 => {
                    self.POOOLGFKKJL = is.read_string()?;
                },
                954 => {
                    self.CKIOFJNKEMN = is.read_string()?;
                },
                6322 => {
                    self.MIBPHKFMPHO = is.read_string()?;
                },
                330 => {
                    self.MIBMPLMOHFJ = is.read_string()?;
                },
                10410 => {
                    self.MJAGKMJGCGJ = is.read_string()?;
                },
                13050 => {
                    self.MPNJIKPKOHJ = is.read_string()?;
                },
                15130 => {
                    self.AEDFFNFCKOB = is.read_string()?;
                },
                6088 => {
                    self.NKONNCPILND = is.read_bool()?;
                },
                96 => {
                    self.AAJMLANMHOL = is.read_uint32()?;
                },
                14394 => {
                    self.EGOJBFDCCCB = is.read_string()?;
                },
                26 => {
                    self.ip = is.read_string()?;
                },
                5858 => {
                    self.BNDNBGGHGHM = is.read_string()?;
                },
                16 => {
                    self.IKAPCFDLECF = is.read_bool()?;
                },
                6946 => {
                    self.GAFBCAPLKOE = is.read_string()?;
                },
                56 => {
                    self.MMOGGEGNJOO = is.read_uint32()?;
                },
                82 => {
                    self.GMKKGACPKLN = is.read_string()?;
                },
                7816 => {
                    self.NEHIFOGIGFC = is.read_bool()?;
                },
                90 => {
                    self.NCFAPCCLPMO = is.read_string()?;
                },
                5312 => {
                    self.ECFINAHPDHK = is.read_uint32()?;
                },
                650 => {
                    self.KHFHCNKCGHP = is.read_string()?;
                },
                2234 => {
                    self.KHJNCLIHFAJ = is.read_string()?;
                },
                1730 => {
                    self.DFBLBPKACCF = is.read_string()?;
                },
                12536 => {
                    self.KPNGODENJHM = is.read_bool()?;
                },
                16088 => {
                    self.HNKCDHPHKPE = is.read_bool()?;
                },
                5768 => {
                    self.HOFGCINGKDN = is.read_bool()?;
                },
                4962 => {
                    self.AIPKBCMFNJE = is.read_string()?;
                },
                11320 => {
                    self.IBJJKDDDDJM = is.read_uint32()?;
                },
                570 => {
                    self.LHOOFMAIHPC = is.read_string()?;
                },
                1178 => {
                    self.CCEOGPCAAIF = is.read_string()?;
                },
                3434 => {
                    self.GLABCPGPIIE = is.read_string()?;
                },
                10754 => {
                    self.HBCOJKAEAMK = is.read_string()?;
                },
                32 => {
                    self.retcode = is.read_uint32()?;
                },
                72 => {
                    self.stop_begin_time = is.read_int64()?;
                },
                6402 => {
                    self.NDDLCGGIGJD = is.read_string()?;
                },
                122 => {
                    self.msg = is.read_string()?;
                },
                9682 => {
                    self.OOHFGAAOIHE = is.read_string()?;
                },
                106 => {
                    self.IPBBIIFGLLD = is.read_string()?;
                },
                2640 => {
                    self.NNIHJBMMPPK = is.read_bool()?;
                },
                11786 => {
                    self.PBPNOMOFMFP = is.read_string()?;
                },
                7122 => {
                    self.OPCCFFNILMF = is.read_string()?;
                },
                11442 => {
                    self.PMLGFNOOMHI = is.read_string()?;
                },
                11586 => {
                    self.EHIMAOFLGIL = is.read_string()?;
                },
                4874 => {
                    self.LGHNNOOFEKH = is.read_string()?;
                },
                9770 => {
                    self.LBFNDEALALK = is.read_string()?;
                },
                6768 => {
                    self.FEIOJDDGGDI = is.read_bool()?;
                },
                12138 => {
                    self.AEMMEDODJLI = is.read_string()?;
                },
                40 => {
                    self.port = is.read_uint32()?;
                },
                48 => {
                    self.EFCPBKAIJPB = is.read_bool()?;
                },
                5776 => {
                    self.ECBFEHFPOFJ = is.read_bool()?;
                },
                114 => {
                    self.EMKHFJDLIFI = is.read_string()?;
                },
                1722 => {
                    self.NGCIMHOLJBA = is.read_string()?;
                },
                15368 => {
                    self.IDNLKBGIFHP = is.read_bool()?;
                },
                13826 => {
                    self.LFGDMMEKOIP = is.read_string()?;
                },
                8752 => {
                    self.MODIBFHPMCP = is.read_bool()?;
                },
                2722 => {
                    self.NIFOEECNMOG = is.read_string()?;
                },
                2272 => {
                    self.LBOBFDKCOCK = is.read_bool()?;
                },
                11538 => {
                    self.OAOHIECDGCC.push(is.read_string()?);
                },
                10 => {
                    self.COIEAMEIOKD = is.read_string()?;
                },
                13930 => {
                    self.BPCLCOHBDKI = is.read_string()?;
                },
                64 => {
                    self.stop_end_time = is.read_int64()?;
                },
                12210 => {
                    self.NKCBGLKPEKA = is.read_string()?;
                },
                16234 => {
                    self.CFAMGPIFBGB = is.read_string()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if !self.JIDFMGIEIFG.is_empty() {
            my_size += ::protobuf::rt::string_size(470, &self.JIDFMGIEIFG);
        }
        if !self.DENLMLCJLPG.is_empty() {
            my_size += ::protobuf::rt::string_size(1643, &self.DENLMLCJLPG);
        }
        if !self.FPHEEMNELNP.is_empty() {
            my_size += ::protobuf::rt::string_size(927, &self.FPHEEMNELNP);
        }
        if !self.DPFMJEDHJEL.is_empty() {
            my_size += ::protobuf::rt::string_size(1869, &self.DPFMJEDHJEL);
        }
        if self.PCKFCGALKHF != false {
            my_size += 2 + 1;
        }
        if self.IDGEOIOPJOC != false {
            my_size += 2 + 1;
        }
        if !self.ENHLGCCBIBK.is_empty() {
            my_size += ::protobuf::rt::string_size(1724, &self.ENHLGCCBIBK);
        }
        if !self.PKEFKEEAEPO.is_empty() {
            my_size += ::protobuf::rt::string_size(618, &self.PKEFKEEAEPO);
        }
        if !self.LHGDGHDDKFO.is_empty() {
            my_size += ::protobuf::rt::string_size(409, &self.LHGDGHDDKFO);
        }
        if !self.ACNPCLJAEHM.is_empty() {
            my_size += ::protobuf::rt::string_size(1616, &self.ACNPCLJAEHM);
        }
        if self.EJCMKOCJNKG != false {
            my_size += 2 + 1;
        }
        if self.IBLPOMNHLKH != 0 {
            my_size += ::protobuf::rt::uint32_size(1800, self.IBLPOMNHLKH);
        }
        if !self.POOOLGFKKJL.is_empty() {
            my_size += ::protobuf::rt::string_size(2000, &self.POOOLGFKKJL);
        }
        if !self.CKIOFJNKEMN.is_empty() {
            my_size += ::protobuf::rt::string_size(119, &self.CKIOFJNKEMN);
        }
        if !self.MIBPHKFMPHO.is_empty() {
            my_size += ::protobuf::rt::string_size(790, &self.MIBPHKFMPHO);
        }
        if !self.MIBMPLMOHFJ.is_empty() {
            my_size += ::protobuf::rt::string_size(41, &self.MIBMPLMOHFJ);
        }
        if !self.MJAGKMJGCGJ.is_empty() {
            my_size += ::protobuf::rt::string_size(1301, &self.MJAGKMJGCGJ);
        }
        if !self.MPNJIKPKOHJ.is_empty() {
            my_size += ::protobuf::rt::string_size(1631, &self.MPNJIKPKOHJ);
        }
        if !self.AEDFFNFCKOB.is_empty() {
            my_size += ::protobuf::rt::string_size(1891, &self.AEDFFNFCKOB);
        }
        if self.NKONNCPILND != false {
            my_size += 2 + 1;
        }
        if self.AAJMLANMHOL != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.AAJMLANMHOL);
        }
        if !self.EGOJBFDCCCB.is_empty() {
            my_size += ::protobuf::rt::string_size(1799, &self.EGOJBFDCCCB);
        }
        if !self.ip.is_empty() {
            my_size += ::protobuf::rt::string_size(3, &self.ip);
        }
        if !self.BNDNBGGHGHM.is_empty() {
            my_size += ::protobuf::rt::string_size(732, &self.BNDNBGGHGHM);
        }
        if self.IKAPCFDLECF != false {
            my_size += 1 + 1;
        }
        if !self.GAFBCAPLKOE.is_empty() {
            my_size += ::protobuf::rt::string_size(868, &self.GAFBCAPLKOE);
        }
        if self.MMOGGEGNJOO != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.MMOGGEGNJOO);
        }
        if !self.GMKKGACPKLN.is_empty() {
            my_size += ::protobuf::rt::string_size(10, &self.GMKKGACPKLN);
        }
        if self.NEHIFOGIGFC != false {
            my_size += 2 + 1;
        }
        if !self.NCFAPCCLPMO.is_empty() {
            my_size += ::protobuf::rt::string_size(11, &self.NCFAPCCLPMO);
        }
        if self.ECFINAHPDHK != 0 {
            my_size += ::protobuf::rt::uint32_size(664, self.ECFINAHPDHK);
        }
        if !self.KHFHCNKCGHP.is_empty() {
            my_size += ::protobuf::rt::string_size(81, &self.KHFHCNKCGHP);
        }
        if !self.KHJNCLIHFAJ.is_empty() {
            my_size += ::protobuf::rt::string_size(279, &self.KHJNCLIHFAJ);
        }
        if !self.DFBLBPKACCF.is_empty() {
            my_size += ::protobuf::rt::string_size(216, &self.DFBLBPKACCF);
        }
        if self.KPNGODENJHM != false {
            my_size += 2 + 1;
        }
        if self.HNKCDHPHKPE != false {
            my_size += 2 + 1;
        }
        if self.HOFGCINGKDN != false {
            my_size += 2 + 1;
        }
        if !self.AIPKBCMFNJE.is_empty() {
            my_size += ::protobuf::rt::string_size(620, &self.AIPKBCMFNJE);
        }
        if self.IBJJKDDDDJM != 0 {
            my_size += ::protobuf::rt::uint32_size(1415, self.IBJJKDDDDJM);
        }
        if !self.LHOOFMAIHPC.is_empty() {
            my_size += ::protobuf::rt::string_size(71, &self.LHOOFMAIHPC);
        }
        if !self.CCEOGPCAAIF.is_empty() {
            my_size += ::protobuf::rt::string_size(147, &self.CCEOGPCAAIF);
        }
        if !self.GLABCPGPIIE.is_empty() {
            my_size += ::protobuf::rt::string_size(429, &self.GLABCPGPIIE);
        }
        if !self.HBCOJKAEAMK.is_empty() {
            my_size += ::protobuf::rt::string_size(1344, &self.HBCOJKAEAMK);
        }
        if self.retcode != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.retcode);
        }
        if self.stop_begin_time != 0 {
            my_size += ::protobuf::rt::int64_size(9, self.stop_begin_time);
        }
        if !self.NDDLCGGIGJD.is_empty() {
            my_size += ::protobuf::rt::string_size(800, &self.NDDLCGGIGJD);
        }
        if !self.msg.is_empty() {
            my_size += ::protobuf::rt::string_size(15, &self.msg);
        }
        if !self.OOHFGAAOIHE.is_empty() {
            my_size += ::protobuf::rt::string_size(1210, &self.OOHFGAAOIHE);
        }
        if !self.IPBBIIFGLLD.is_empty() {
            my_size += ::protobuf::rt::string_size(13, &self.IPBBIIFGLLD);
        }
        if self.NNIHJBMMPPK != false {
            my_size += 2 + 1;
        }
        if !self.PBPNOMOFMFP.is_empty() {
            my_size += ::protobuf::rt::string_size(1473, &self.PBPNOMOFMFP);
        }
        if !self.OPCCFFNILMF.is_empty() {
            my_size += ::protobuf::rt::string_size(890, &self.OPCCFFNILMF);
        }
        if !self.PMLGFNOOMHI.is_empty() {
            my_size += ::protobuf::rt::string_size(1430, &self.PMLGFNOOMHI);
        }
        if !self.EHIMAOFLGIL.is_empty() {
            my_size += ::protobuf::rt::string_size(1448, &self.EHIMAOFLGIL);
        }
        if !self.LGHNNOOFEKH.is_empty() {
            my_size += ::protobuf::rt::string_size(609, &self.LGHNNOOFEKH);
        }
        if !self.LBFNDEALALK.is_empty() {
            my_size += ::protobuf::rt::string_size(1221, &self.LBFNDEALALK);
        }
        if self.FEIOJDDGGDI != false {
            my_size += 2 + 1;
        }
        if !self.AEMMEDODJLI.is_empty() {
            my_size += ::protobuf::rt::string_size(1517, &self.AEMMEDODJLI);
        }
        if self.port != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.port);
        }
        if self.EFCPBKAIJPB != false {
            my_size += 1 + 1;
        }
        if self.ECBFEHFPOFJ != false {
            my_size += 2 + 1;
        }
        if !self.EMKHFJDLIFI.is_empty() {
            my_size += ::protobuf::rt::string_size(14, &self.EMKHFJDLIFI);
        }
        if !self.NGCIMHOLJBA.is_empty() {
            my_size += ::protobuf::rt::string_size(215, &self.NGCIMHOLJBA);
        }
        if self.IDNLKBGIFHP != false {
            my_size += 2 + 1;
        }
        if !self.LFGDMMEKOIP.is_empty() {
            my_size += ::protobuf::rt::string_size(1728, &self.LFGDMMEKOIP);
        }
        if self.MODIBFHPMCP != false {
            my_size += 2 + 1;
        }
        if !self.NIFOEECNMOG.is_empty() {
            my_size += ::protobuf::rt::string_size(340, &self.NIFOEECNMOG);
        }
        if self.LBOBFDKCOCK != false {
            my_size += 2 + 1;
        }
        for value in &self.OAOHIECDGCC {
            my_size += ::protobuf::rt::string_size(1442, &value);
        };
        if !self.COIEAMEIOKD.is_empty() {
            my_size += ::protobuf::rt::string_size(1, &self.COIEAMEIOKD);
        }
        if !self.BPCLCOHBDKI.is_empty() {
            my_size += ::protobuf::rt::string_size(1741, &self.BPCLCOHBDKI);
        }
        if self.stop_end_time != 0 {
            my_size += ::protobuf::rt::int64_size(8, self.stop_end_time);
        }
        if !self.NKCBGLKPEKA.is_empty() {
            my_size += ::protobuf::rt::string_size(1526, &self.NKCBGLKPEKA);
        }
        if !self.CFAMGPIFBGB.is_empty() {
            my_size += ::protobuf::rt::string_size(2029, &self.CFAMGPIFBGB);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if !self.JIDFMGIEIFG.is_empty() {
            os.write_string(470, &self.JIDFMGIEIFG)?;
        }
        if !self.DENLMLCJLPG.is_empty() {
            os.write_string(1643, &self.DENLMLCJLPG)?;
        }
        if !self.FPHEEMNELNP.is_empty() {
            os.write_string(927, &self.FPHEEMNELNP)?;
        }
        if !self.DPFMJEDHJEL.is_empty() {
            os.write_string(1869, &self.DPFMJEDHJEL)?;
        }
        if self.PCKFCGALKHF != false {
            os.write_bool(174, self.PCKFCGALKHF)?;
        }
        if self.IDGEOIOPJOC != false {
            os.write_bool(266, self.IDGEOIOPJOC)?;
        }
        if !self.ENHLGCCBIBK.is_empty() {
            os.write_string(1724, &self.ENHLGCCBIBK)?;
        }
        if !self.PKEFKEEAEPO.is_empty() {
            os.write_string(618, &self.PKEFKEEAEPO)?;
        }
        if !self.LHGDGHDDKFO.is_empty() {
            os.write_string(409, &self.LHGDGHDDKFO)?;
        }
        if !self.ACNPCLJAEHM.is_empty() {
            os.write_string(1616, &self.ACNPCLJAEHM)?;
        }
        if self.EJCMKOCJNKG != false {
            os.write_bool(1876, self.EJCMKOCJNKG)?;
        }
        if self.IBLPOMNHLKH != 0 {
            os.write_uint32(1800, self.IBLPOMNHLKH)?;
        }
        if !self.POOOLGFKKJL.is_empty() {
            os.write_string(2000, &self.POOOLGFKKJL)?;
        }
        if !self.CKIOFJNKEMN.is_empty() {
            os.write_string(119, &self.CKIOFJNKEMN)?;
        }
        if !self.MIBPHKFMPHO.is_empty() {
            os.write_string(790, &self.MIBPHKFMPHO)?;
        }
        if !self.MIBMPLMOHFJ.is_empty() {
            os.write_string(41, &self.MIBMPLMOHFJ)?;
        }
        if !self.MJAGKMJGCGJ.is_empty() {
            os.write_string(1301, &self.MJAGKMJGCGJ)?;
        }
        if !self.MPNJIKPKOHJ.is_empty() {
            os.write_string(1631, &self.MPNJIKPKOHJ)?;
        }
        if !self.AEDFFNFCKOB.is_empty() {
            os.write_string(1891, &self.AEDFFNFCKOB)?;
        }
        if self.NKONNCPILND != false {
            os.write_bool(761, self.NKONNCPILND)?;
        }
        if self.AAJMLANMHOL != 0 {
            os.write_uint32(12, self.AAJMLANMHOL)?;
        }
        if !self.EGOJBFDCCCB.is_empty() {
            os.write_string(1799, &self.EGOJBFDCCCB)?;
        }
        if !self.ip.is_empty() {
            os.write_string(3, &self.ip)?;
        }
        if !self.BNDNBGGHGHM.is_empty() {
            os.write_string(732, &self.BNDNBGGHGHM)?;
        }
        if self.IKAPCFDLECF != false {
            os.write_bool(2, self.IKAPCFDLECF)?;
        }
        if !self.GAFBCAPLKOE.is_empty() {
            os.write_string(868, &self.GAFBCAPLKOE)?;
        }
        if self.MMOGGEGNJOO != 0 {
            os.write_uint32(7, self.MMOGGEGNJOO)?;
        }
        if !self.GMKKGACPKLN.is_empty() {
            os.write_string(10, &self.GMKKGACPKLN)?;
        }
        if self.NEHIFOGIGFC != false {
            os.write_bool(977, self.NEHIFOGIGFC)?;
        }
        if !self.NCFAPCCLPMO.is_empty() {
            os.write_string(11, &self.NCFAPCCLPMO)?;
        }
        if self.ECFINAHPDHK != 0 {
            os.write_uint32(664, self.ECFINAHPDHK)?;
        }
        if !self.KHFHCNKCGHP.is_empty() {
            os.write_string(81, &self.KHFHCNKCGHP)?;
        }
        if !self.KHJNCLIHFAJ.is_empty() {
            os.write_string(279, &self.KHJNCLIHFAJ)?;
        }
        if !self.DFBLBPKACCF.is_empty() {
            os.write_string(216, &self.DFBLBPKACCF)?;
        }
        if self.KPNGODENJHM != false {
            os.write_bool(1567, self.KPNGODENJHM)?;
        }
        if self.HNKCDHPHKPE != false {
            os.write_bool(2011, self.HNKCDHPHKPE)?;
        }
        if self.HOFGCINGKDN != false {
            os.write_bool(721, self.HOFGCINGKDN)?;
        }
        if !self.AIPKBCMFNJE.is_empty() {
            os.write_string(620, &self.AIPKBCMFNJE)?;
        }
        if self.IBJJKDDDDJM != 0 {
            os.write_uint32(1415, self.IBJJKDDDDJM)?;
        }
        if !self.LHOOFMAIHPC.is_empty() {
            os.write_string(71, &self.LHOOFMAIHPC)?;
        }
        if !self.CCEOGPCAAIF.is_empty() {
            os.write_string(147, &self.CCEOGPCAAIF)?;
        }
        if !self.GLABCPGPIIE.is_empty() {
            os.write_string(429, &self.GLABCPGPIIE)?;
        }
        if !self.HBCOJKAEAMK.is_empty() {
            os.write_string(1344, &self.HBCOJKAEAMK)?;
        }
        if self.retcode != 0 {
            os.write_uint32(4, self.retcode)?;
        }
        if self.stop_begin_time != 0 {
            os.write_int64(9, self.stop_begin_time)?;
        }
        if !self.NDDLCGGIGJD.is_empty() {
            os.write_string(800, &self.NDDLCGGIGJD)?;
        }
        if !self.msg.is_empty() {
            os.write_string(15, &self.msg)?;
        }
        if !self.OOHFGAAOIHE.is_empty() {
            os.write_string(1210, &self.OOHFGAAOIHE)?;
        }
        if !self.IPBBIIFGLLD.is_empty() {
            os.write_string(13, &self.IPBBIIFGLLD)?;
        }
        if self.NNIHJBMMPPK != false {
            os.write_bool(330, self.NNIHJBMMPPK)?;
        }
        if !self.PBPNOMOFMFP.is_empty() {
            os.write_string(1473, &self.PBPNOMOFMFP)?;
        }
        if !self.OPCCFFNILMF.is_empty() {
            os.write_string(890, &self.OPCCFFNILMF)?;
        }
        if !self.PMLGFNOOMHI.is_empty() {
            os.write_string(1430, &self.PMLGFNOOMHI)?;
        }
        if !self.EHIMAOFLGIL.is_empty() {
            os.write_string(1448, &self.EHIMAOFLGIL)?;
        }
        if !self.LGHNNOOFEKH.is_empty() {
            os.write_string(609, &self.LGHNNOOFEKH)?;
        }
        if !self.LBFNDEALALK.is_empty() {
            os.write_string(1221, &self.LBFNDEALALK)?;
        }
        if self.FEIOJDDGGDI != false {
            os.write_bool(846, self.FEIOJDDGGDI)?;
        }
        if !self.AEMMEDODJLI.is_empty() {
            os.write_string(1517, &self.AEMMEDODJLI)?;
        }
        if self.port != 0 {
            os.write_uint32(5, self.port)?;
        }
        if self.EFCPBKAIJPB != false {
            os.write_bool(6, self.EFCPBKAIJPB)?;
        }
        if self.ECBFEHFPOFJ != false {
            os.write_bool(722, self.ECBFEHFPOFJ)?;
        }
        if !self.EMKHFJDLIFI.is_empty() {
            os.write_string(14, &self.EMKHFJDLIFI)?;
        }
        if !self.NGCIMHOLJBA.is_empty() {
            os.write_string(215, &self.NGCIMHOLJBA)?;
        }
        if self.IDNLKBGIFHP != false {
            os.write_bool(1921, self.IDNLKBGIFHP)?;
        }
        if !self.LFGDMMEKOIP.is_empty() {
            os.write_string(1728, &self.LFGDMMEKOIP)?;
        }
        if self.MODIBFHPMCP != false {
            os.write_bool(1094, self.MODIBFHPMCP)?;
        }
        if !self.NIFOEECNMOG.is_empty() {
            os.write_string(340, &self.NIFOEECNMOG)?;
        }
        if self.LBOBFDKCOCK != false {
            os.write_bool(284, self.LBOBFDKCOCK)?;
        }
        for v in &self.OAOHIECDGCC {
            os.write_string(1442, &v)?;
        };
        if !self.COIEAMEIOKD.is_empty() {
            os.write_string(1, &self.COIEAMEIOKD)?;
        }
        if !self.BPCLCOHBDKI.is_empty() {
            os.write_string(1741, &self.BPCLCOHBDKI)?;
        }
        if self.stop_end_time != 0 {
            os.write_int64(8, self.stop_end_time)?;
        }
        if !self.NKCBGLKPEKA.is_empty() {
            os.write_string(1526, &self.NKCBGLKPEKA)?;
        }
        if !self.CFAMGPIFBGB.is_empty() {
            os.write_string(2029, &self.CFAMGPIFBGB)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> GEENELIIOIC {
        GEENELIIOIC::new()
    }

    fn clear(&mut self) {
        self.JIDFMGIEIFG.clear();
        self.DENLMLCJLPG.clear();
        self.FPHEEMNELNP.clear();
        self.DPFMJEDHJEL.clear();
        self.PCKFCGALKHF = false;
        self.IDGEOIOPJOC = false;
        self.ENHLGCCBIBK.clear();
        self.PKEFKEEAEPO.clear();
        self.LHGDGHDDKFO.clear();
        self.ACNPCLJAEHM.clear();
        self.EJCMKOCJNKG = false;
        self.IBLPOMNHLKH = 0;
        self.POOOLGFKKJL.clear();
        self.CKIOFJNKEMN.clear();
        self.MIBPHKFMPHO.clear();
        self.MIBMPLMOHFJ.clear();
        self.MJAGKMJGCGJ.clear();
        self.MPNJIKPKOHJ.clear();
        self.AEDFFNFCKOB.clear();
        self.NKONNCPILND = false;
        self.AAJMLANMHOL = 0;
        self.EGOJBFDCCCB.clear();
        self.ip.clear();
        self.BNDNBGGHGHM.clear();
        self.IKAPCFDLECF = false;
        self.GAFBCAPLKOE.clear();
        self.MMOGGEGNJOO = 0;
        self.GMKKGACPKLN.clear();
        self.NEHIFOGIGFC = false;
        self.NCFAPCCLPMO.clear();
        self.ECFINAHPDHK = 0;
        self.KHFHCNKCGHP.clear();
        self.KHJNCLIHFAJ.clear();
        self.DFBLBPKACCF.clear();
        self.KPNGODENJHM = false;
        self.HNKCDHPHKPE = false;
        self.HOFGCINGKDN = false;
        self.AIPKBCMFNJE.clear();
        self.IBJJKDDDDJM = 0;
        self.LHOOFMAIHPC.clear();
        self.CCEOGPCAAIF.clear();
        self.GLABCPGPIIE.clear();
        self.HBCOJKAEAMK.clear();
        self.retcode = 0;
        self.stop_begin_time = 0;
        self.NDDLCGGIGJD.clear();
        self.msg.clear();
        self.OOHFGAAOIHE.clear();
        self.IPBBIIFGLLD.clear();
        self.NNIHJBMMPPK = false;
        self.PBPNOMOFMFP.clear();
        self.OPCCFFNILMF.clear();
        self.PMLGFNOOMHI.clear();
        self.EHIMAOFLGIL.clear();
        self.LGHNNOOFEKH.clear();
        self.LBFNDEALALK.clear();
        self.FEIOJDDGGDI = false;
        self.AEMMEDODJLI.clear();
        self.port = 0;
        self.EFCPBKAIJPB = false;
        self.ECBFEHFPOFJ = false;
        self.EMKHFJDLIFI.clear();
        self.NGCIMHOLJBA.clear();
        self.IDNLKBGIFHP = false;
        self.LFGDMMEKOIP.clear();
        self.MODIBFHPMCP = false;
        self.NIFOEECNMOG.clear();
        self.LBOBFDKCOCK = false;
        self.OAOHIECDGCC.clear();
        self.COIEAMEIOKD.clear();
        self.BPCLCOHBDKI.clear();
        self.stop_end_time = 0;
        self.NKCBGLKPEKA.clear();
        self.CFAMGPIFBGB.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static GEENELIIOIC {
        static instance: GEENELIIOIC = GEENELIIOIC {
            JIDFMGIEIFG: ::std::string::String::new(),
            DENLMLCJLPG: ::std::string::String::new(),
            FPHEEMNELNP: ::std::string::String::new(),
            DPFMJEDHJEL: ::std::string::String::new(),
            PCKFCGALKHF: false,
            IDGEOIOPJOC: false,
            ENHLGCCBIBK: ::std::string::String::new(),
            PKEFKEEAEPO: ::std::string::String::new(),
            LHGDGHDDKFO: ::std::string::String::new(),
            ACNPCLJAEHM: ::std::string::String::new(),
            EJCMKOCJNKG: false,
            IBLPOMNHLKH: 0,
            POOOLGFKKJL: ::std::string::String::new(),
            CKIOFJNKEMN: ::std::string::String::new(),
            MIBPHKFMPHO: ::std::string::String::new(),
            MIBMPLMOHFJ: ::std::string::String::new(),
            MJAGKMJGCGJ: ::std::string::String::new(),
            MPNJIKPKOHJ: ::std::string::String::new(),
            AEDFFNFCKOB: ::std::string::String::new(),
            NKONNCPILND: false,
            AAJMLANMHOL: 0,
            EGOJBFDCCCB: ::std::string::String::new(),
            ip: ::std::string::String::new(),
            BNDNBGGHGHM: ::std::string::String::new(),
            IKAPCFDLECF: false,
            GAFBCAPLKOE: ::std::string::String::new(),
            MMOGGEGNJOO: 0,
            GMKKGACPKLN: ::std::string::String::new(),
            NEHIFOGIGFC: false,
            NCFAPCCLPMO: ::std::string::String::new(),
            ECFINAHPDHK: 0,
            KHFHCNKCGHP: ::std::string::String::new(),
            KHJNCLIHFAJ: ::std::string::String::new(),
            DFBLBPKACCF: ::std::string::String::new(),
            KPNGODENJHM: false,
            HNKCDHPHKPE: false,
            HOFGCINGKDN: false,
            AIPKBCMFNJE: ::std::string::String::new(),
            IBJJKDDDDJM: 0,
            LHOOFMAIHPC: ::std::string::String::new(),
            CCEOGPCAAIF: ::std::string::String::new(),
            GLABCPGPIIE: ::std::string::String::new(),
            HBCOJKAEAMK: ::std::string::String::new(),
            retcode: 0,
            stop_begin_time: 0,
            NDDLCGGIGJD: ::std::string::String::new(),
            msg: ::std::string::String::new(),
            OOHFGAAOIHE: ::std::string::String::new(),
            IPBBIIFGLLD: ::std::string::String::new(),
            NNIHJBMMPPK: false,
            PBPNOMOFMFP: ::std::string::String::new(),
            OPCCFFNILMF: ::std::string::String::new(),
            PMLGFNOOMHI: ::std::string::String::new(),
            EHIMAOFLGIL: ::std::string::String::new(),
            LGHNNOOFEKH: ::std::string::String::new(),
            LBFNDEALALK: ::std::string::String::new(),
            FEIOJDDGGDI: false,
            AEMMEDODJLI: ::std::string::String::new(),
            port: 0,
            EFCPBKAIJPB: false,
            ECBFEHFPOFJ: false,
            EMKHFJDLIFI: ::std::string::String::new(),
            NGCIMHOLJBA: ::std::string::String::new(),
            IDNLKBGIFHP: false,
            LFGDMMEKOIP: ::std::string::String::new(),
            MODIBFHPMCP: false,
            NIFOEECNMOG: ::std::string::String::new(),
            LBOBFDKCOCK: false,
            OAOHIECDGCC: ::std::vec::Vec::new(),
            COIEAMEIOKD: ::std::string::String::new(),
            BPCLCOHBDKI: ::std::string::String::new(),
            stop_end_time: 0,
            NKCBGLKPEKA: ::std::string::String::new(),
            CFAMGPIFBGB: ::std::string::String::new(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for GEENELIIOIC {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("GEENELIIOIC").unwrap()).clone()
    }
}

impl ::std::fmt::Display for GEENELIIOIC {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for GEENELIIOIC {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11GEENELIIOIC.proto\"\xe8\x13\n\x0bGEENELIIOIC\x12!\n\x0bJIDFMGIEIFG\
    \x18\xd6\x03\x20\x01(\tR\x0bJIDFMGIEIFG\x12!\n\x0bDENLMLCJLPG\x18\xeb\
    \x0c\x20\x01(\tR\x0bDENLMLCJLPG\x12!\n\x0bFPHEEMNELNP\x18\x9f\x07\x20\
    \x01(\tR\x0bFPHEEMNELNP\x12!\n\x0bDPFMJEDHJEL\x18\xcd\x0e\x20\x01(\tR\
    \x0bDPFMJEDHJEL\x12!\n\x0bPCKFCGALKHF\x18\xae\x01\x20\x01(\x08R\x0bPCKFC\
    GALKHF\x12!\n\x0bIDGEOIOPJOC\x18\x8a\x02\x20\x01(\x08R\x0bIDGEOIOPJOC\
    \x12!\n\x0bENHLGCCBIBK\x18\xbc\r\x20\x01(\tR\x0bENHLGCCBIBK\x12!\n\x0bPK\
    EFKEEAEPO\x18\xea\x04\x20\x01(\tR\x0bPKEFKEEAEPO\x12!\n\x0bLHGDGHDDKFO\
    \x18\x99\x03\x20\x01(\tR\x0bLHGDGHDDKFO\x12!\n\x0bACNPCLJAEHM\x18\xd0\
    \x0c\x20\x01(\tR\x0bACNPCLJAEHM\x12!\n\x0bEJCMKOCJNKG\x18\xd4\x0e\x20\
    \x01(\x08R\x0bEJCMKOCJNKG\x12!\n\x0bIBLPOMNHLKH\x18\x88\x0e\x20\x01(\rR\
    \x0bIBLPOMNHLKH\x12!\n\x0bPOOOLGFKKJL\x18\xd0\x0f\x20\x01(\tR\x0bPOOOLGF\
    KKJL\x12\x20\n\x0bCKIOFJNKEMN\x18w\x20\x01(\tR\x0bCKIOFJNKEMN\x12!\n\x0b\
    MIBPHKFMPHO\x18\x96\x06\x20\x01(\tR\x0bMIBPHKFMPHO\x12\x20\n\x0bMIBMPLMO\
    HFJ\x18)\x20\x01(\tR\x0bMIBMPLMOHFJ\x12!\n\x0bMJAGKMJGCGJ\x18\x95\n\x20\
    \x01(\tR\x0bMJAGKMJGCGJ\x12!\n\x0bMPNJIKPKOHJ\x18\xdf\x0c\x20\x01(\tR\
    \x0bMPNJIKPKOHJ\x12!\n\x0bAEDFFNFCKOB\x18\xe3\x0e\x20\x01(\tR\x0bAEDFFNF\
    CKOB\x12!\n\x0bNKONNCPILND\x18\xf9\x05\x20\x01(\x08R\x0bNKONNCPILND\x12\
    \x20\n\x0bAAJMLANMHOL\x18\x0c\x20\x01(\rR\x0bAAJMLANMHOL\x12!\n\x0bEGOJB\
    FDCCCB\x18\x87\x0e\x20\x01(\tR\x0bEGOJBFDCCCB\x12\x0e\n\x02ip\x18\x03\
    \x20\x01(\tR\x02ip\x12!\n\x0bBNDNBGGHGHM\x18\xdc\x05\x20\x01(\tR\x0bBNDN\
    BGGHGHM\x12\x20\n\x0bIKAPCFDLECF\x18\x02\x20\x01(\x08R\x0bIKAPCFDLECF\
    \x12!\n\x0bGAFBCAPLKOE\x18\xe4\x06\x20\x01(\tR\x0bGAFBCAPLKOE\x12\x20\n\
    \x0bMMOGGEGNJOO\x18\x07\x20\x01(\rR\x0bMMOGGEGNJOO\x12\x20\n\x0bGMKKGACP\
    KLN\x18\n\x20\x01(\tR\x0bGMKKGACPKLN\x12!\n\x0bNEHIFOGIGFC\x18\xd1\x07\
    \x20\x01(\x08R\x0bNEHIFOGIGFC\x12\x20\n\x0bNCFAPCCLPMO\x18\x0b\x20\x01(\
    \tR\x0bNCFAPCCLPMO\x12!\n\x0bECFINAHPDHK\x18\x98\x05\x20\x01(\rR\x0bECFI\
    NAHPDHK\x12\x20\n\x0bKHFHCNKCGHP\x18Q\x20\x01(\tR\x0bKHFHCNKCGHP\x12!\n\
    \x0bKHJNCLIHFAJ\x18\x97\x02\x20\x01(\tR\x0bKHJNCLIHFAJ\x12!\n\x0bDFBLBPK\
    ACCF\x18\xd8\x01\x20\x01(\tR\x0bDFBLBPKACCF\x12!\n\x0bKPNGODENJHM\x18\
    \x9f\x0c\x20\x01(\x08R\x0bKPNGODENJHM\x12!\n\x0bHNKCDHPHKPE\x18\xdb\x0f\
    \x20\x01(\x08R\x0bHNKCDHPHKPE\x12!\n\x0bHOFGCINGKDN\x18\xd1\x05\x20\x01(\
    \x08R\x0bHOFGCINGKDN\x12!\n\x0bAIPKBCMFNJE\x18\xec\x04\x20\x01(\tR\x0bAI\
    PKBCMFNJE\x12!\n\x0bIBJJKDDDDJM\x18\x87\x0b\x20\x01(\rR\x0bIBJJKDDDDJM\
    \x12\x20\n\x0bLHOOFMAIHPC\x18G\x20\x01(\tR\x0bLHOOFMAIHPC\x12!\n\x0bCCEO\
    GPCAAIF\x18\x93\x01\x20\x01(\tR\x0bCCEOGPCAAIF\x12!\n\x0bGLABCPGPIIE\x18\
    \xad\x03\x20\x01(\tR\x0bGLABCPGPIIE\x12!\n\x0bHBCOJKAEAMK\x18\xc0\n\x20\
    \x01(\tR\x0bHBCOJKAEAMK\x12\x18\n\x07retcode\x18\x04\x20\x01(\rR\x07retc\
    ode\x12&\n\x0fstop_begin_time\x18\t\x20\x01(\x03R\rstopBeginTime\x12!\n\
    \x0bNDDLCGGIGJD\x18\xa0\x06\x20\x01(\tR\x0bNDDLCGGIGJD\x12\x10\n\x03msg\
    \x18\x0f\x20\x01(\tR\x03msg\x12!\n\x0bOOHFGAAOIHE\x18\xba\t\x20\x01(\tR\
    \x0bOOHFGAAOIHE\x12\x20\n\x0bIPBBIIFGLLD\x18\r\x20\x01(\tR\x0bIPBBIIFGLL\
    D\x12!\n\x0bNNIHJBMMPPK\x18\xca\x02\x20\x01(\x08R\x0bNNIHJBMMPPK\x12!\n\
    \x0bPBPNOMOFMFP\x18\xc1\x0b\x20\x01(\tR\x0bPBPNOMOFMFP\x12!\n\x0bOPCCFFN\
    ILMF\x18\xfa\x06\x20\x01(\tR\x0bOPCCFFNILMF\x12!\n\x0bPMLGFNOOMHI\x18\
    \x96\x0b\x20\x01(\tR\x0bPMLGFNOOMHI\x12!\n\x0bEHIMAOFLGIL\x18\xa8\x0b\
    \x20\x01(\tR\x0bEHIMAOFLGIL\x12!\n\x0bLGHNNOOFEKH\x18\xe1\x04\x20\x01(\t\
    R\x0bLGHNNOOFEKH\x12!\n\x0bLBFNDEALALK\x18\xc5\t\x20\x01(\tR\x0bLBFNDEAL\
    ALK\x12!\n\x0bFEIOJDDGGDI\x18\xce\x06\x20\x01(\x08R\x0bFEIOJDDGGDI\x12!\
    \n\x0bAEMMEDODJLI\x18\xed\x0b\x20\x01(\tR\x0bAEMMEDODJLI\x12\x12\n\x04po\
    rt\x18\x05\x20\x01(\rR\x04port\x12\x20\n\x0bEFCPBKAIJPB\x18\x06\x20\x01(\
    \x08R\x0bEFCPBKAIJPB\x12!\n\x0bECBFEHFPOFJ\x18\xd2\x05\x20\x01(\x08R\x0b\
    ECBFEHFPOFJ\x12\x20\n\x0bEMKHFJDLIFI\x18\x0e\x20\x01(\tR\x0bEMKHFJDLIFI\
    \x12!\n\x0bNGCIMHOLJBA\x18\xd7\x01\x20\x01(\tR\x0bNGCIMHOLJBA\x12!\n\x0b\
    IDNLKBGIFHP\x18\x81\x0f\x20\x01(\x08R\x0bIDNLKBGIFHP\x12!\n\x0bLFGDMMEKO\
    IP\x18\xc0\r\x20\x01(\tR\x0bLFGDMMEKOIP\x12!\n\x0bMODIBFHPMCP\x18\xc6\
    \x08\x20\x01(\x08R\x0bMODIBFHPMCP\x12!\n\x0bNIFOEECNMOG\x18\xd4\x02\x20\
    \x01(\tR\x0bNIFOEECNMOG\x12!\n\x0bLBOBFDKCOCK\x18\x9c\x02\x20\x01(\x08R\
    \x0bLBOBFDKCOCK\x12!\n\x0bOAOHIECDGCC\x18\xa2\x0b\x20\x03(\tR\x0bOAOHIEC\
    DGCC\x12\x20\n\x0bCOIEAMEIOKD\x18\x01\x20\x01(\tR\x0bCOIEAMEIOKD\x12!\n\
    \x0bBPCLCOHBDKI\x18\xcd\r\x20\x01(\tR\x0bBPCLCOHBDKI\x12\"\n\rstop_end_t\
    ime\x18\x08\x20\x01(\x03R\x0bstopEndTime\x12!\n\x0bNKCBGLKPEKA\x18\xf6\
    \x0b\x20\x01(\tR\x0bNKCBGLKPEKA\x12!\n\x0bCFAMGPIFBGB\x18\xed\x0f\x20\
    \x01(\tR\x0bCFAMGPIFBGBb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(GEENELIIOIC::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
