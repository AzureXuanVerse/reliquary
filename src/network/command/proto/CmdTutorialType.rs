// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdTutorialType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdTutorialType)
pub enum CmdTutorialType {
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdTutorialTypeNone)
    CmdTutorialTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdFinishTutorialCsReq)
    CmdFinishTutorialCsReq = 1654,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdFinishTutorialScRsp)
    CmdFinishTutorialScRsp = 1677,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdGetTutorialCsReq)
    CmdGetTutorialCsReq = 1620,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdGetTutorialGuideScRsp)
    CmdGetTutorialGuideScRsp = 1639,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdGetTutorialScRsp)
    CmdGetTutorialScRsp = 1691,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdGetTutorialGuideCsReq)
    CmdGetTutorialGuideCsReq = 1667,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdUnlockTutorialCsReq)
    CmdUnlockTutorialCsReq = 1627,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdUnlockTutorialScRsp)
    CmdUnlockTutorialScRsp = 1621,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdFinishTutorialGuideScRsp)
    CmdFinishTutorialGuideScRsp = 1602,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdUnlockTutorialGuideScRsp)
    CmdUnlockTutorialGuideScRsp = 1659,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdFinishTutorialGuideCsReq)
    CmdFinishTutorialGuideCsReq = 1680,
    // @@protoc_insertion_point(enum_value:CmdTutorialType.CmdUnlockTutorialGuideCsReq)
    CmdUnlockTutorialGuideCsReq = 1670,
}

impl ::protobuf::Enum for CmdTutorialType {
    const NAME: &'static str = "CmdTutorialType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdTutorialType> {
        match value {
            0 => ::std::option::Option::Some(CmdTutorialType::CmdTutorialTypeNone),
            1654 => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialCsReq),
            1677 => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialScRsp),
            1620 => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialCsReq),
            1639 => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialGuideScRsp),
            1691 => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialScRsp),
            1667 => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialGuideCsReq),
            1627 => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialCsReq),
            1621 => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialScRsp),
            1602 => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialGuideScRsp),
            1659 => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialGuideScRsp),
            1680 => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialGuideCsReq),
            1670 => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialGuideCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdTutorialType> {
        match str {
            "CmdTutorialTypeNone" => ::std::option::Option::Some(CmdTutorialType::CmdTutorialTypeNone),
            "CmdFinishTutorialCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialCsReq),
            "CmdFinishTutorialScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialScRsp),
            "CmdGetTutorialCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialCsReq),
            "CmdGetTutorialGuideScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialGuideScRsp),
            "CmdGetTutorialScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialScRsp),
            "CmdGetTutorialGuideCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdGetTutorialGuideCsReq),
            "CmdUnlockTutorialCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialCsReq),
            "CmdUnlockTutorialScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialScRsp),
            "CmdFinishTutorialGuideScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialGuideScRsp),
            "CmdUnlockTutorialGuideScRsp" => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialGuideScRsp),
            "CmdFinishTutorialGuideCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdFinishTutorialGuideCsReq),
            "CmdUnlockTutorialGuideCsReq" => ::std::option::Option::Some(CmdTutorialType::CmdUnlockTutorialGuideCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdTutorialType] = &[
        CmdTutorialType::CmdTutorialTypeNone,
        CmdTutorialType::CmdFinishTutorialCsReq,
        CmdTutorialType::CmdFinishTutorialScRsp,
        CmdTutorialType::CmdGetTutorialCsReq,
        CmdTutorialType::CmdGetTutorialGuideScRsp,
        CmdTutorialType::CmdGetTutorialScRsp,
        CmdTutorialType::CmdGetTutorialGuideCsReq,
        CmdTutorialType::CmdUnlockTutorialCsReq,
        CmdTutorialType::CmdUnlockTutorialScRsp,
        CmdTutorialType::CmdFinishTutorialGuideScRsp,
        CmdTutorialType::CmdUnlockTutorialGuideScRsp,
        CmdTutorialType::CmdFinishTutorialGuideCsReq,
        CmdTutorialType::CmdUnlockTutorialGuideCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdTutorialType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdTutorialType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdTutorialType::CmdTutorialTypeNone => 0,
            CmdTutorialType::CmdFinishTutorialCsReq => 1,
            CmdTutorialType::CmdFinishTutorialScRsp => 2,
            CmdTutorialType::CmdGetTutorialCsReq => 3,
            CmdTutorialType::CmdGetTutorialGuideScRsp => 4,
            CmdTutorialType::CmdGetTutorialScRsp => 5,
            CmdTutorialType::CmdGetTutorialGuideCsReq => 6,
            CmdTutorialType::CmdUnlockTutorialCsReq => 7,
            CmdTutorialType::CmdUnlockTutorialScRsp => 8,
            CmdTutorialType::CmdFinishTutorialGuideScRsp => 9,
            CmdTutorialType::CmdUnlockTutorialGuideScRsp => 10,
            CmdTutorialType::CmdFinishTutorialGuideCsReq => 11,
            CmdTutorialType::CmdUnlockTutorialGuideCsReq => 12,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdTutorialType {
    fn default() -> Self {
        CmdTutorialType::CmdTutorialTypeNone
    }
}

impl CmdTutorialType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdTutorialType>("CmdTutorialType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x15CmdTutorialType.proto*\x98\x03\n\x0fCmdTutorialType\x12\x17\n\x13C\
    mdTutorialTypeNone\x10\0\x12\x1b\n\x16CmdFinishTutorialCsReq\x10\xf6\x0c\
    \x12\x1b\n\x16CmdFinishTutorialScRsp\x10\x8d\r\x12\x18\n\x13CmdGetTutori\
    alCsReq\x10\xd4\x0c\x12\x1d\n\x18CmdGetTutorialGuideScRsp\x10\xe7\x0c\
    \x12\x18\n\x13CmdGetTutorialScRsp\x10\x9b\r\x12\x1d\n\x18CmdGetTutorialG\
    uideCsReq\x10\x83\r\x12\x1b\n\x16CmdUnlockTutorialCsReq\x10\xdb\x0c\x12\
    \x1b\n\x16CmdUnlockTutorialScRsp\x10\xd5\x0c\x12\x20\n\x1bCmdFinishTutor\
    ialGuideScRsp\x10\xc2\x0c\x12\x20\n\x1bCmdUnlockTutorialGuideScRsp\x10\
    \xfb\x0c\x12\x20\n\x1bCmdFinishTutorialGuideCsReq\x10\x90\r\x12\x20\n\
    \x1bCmdUnlockTutorialGuideCsReq\x10\x86\rb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdTutorialType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
