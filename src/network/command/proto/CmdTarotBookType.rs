// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdTarotBookType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdTarotBookType)
pub enum CmdTarotBookType {
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookTypeNone)
    CmdTarotBookTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookFinishStoryCsReq)
    CmdTarotBookFinishStoryCsReq = 8160,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookFinishInteractionCsReq)
    CmdTarotBookFinishInteractionCsReq = 8143,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookGetDataCsReq)
    CmdTarotBookGetDataCsReq = 8154,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookFinishStoryScRsp)
    CmdTarotBookFinishStoryScRsp = 8149,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookUnlockStoryScRsp)
    CmdTarotBookUnlockStoryScRsp = 8142,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookModifyEnergyScNotify)
    CmdTarotBookModifyEnergyScNotify = 8147,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookFinishInteractionScRsp)
    CmdTarotBookFinishInteractionScRsp = 8145,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookOpenPackScRsp)
    CmdTarotBookOpenPackScRsp = 8150,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookGetDataScRsp)
    CmdTarotBookGetDataScRsp = 8153,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookUnlockStoryCsReq)
    CmdTarotBookUnlockStoryCsReq = 8144,
    // @@protoc_insertion_point(enum_value:CmdTarotBookType.CmdTarotBookOpenPackCsReq)
    CmdTarotBookOpenPackCsReq = 8148,
}

impl ::protobuf::Enum for CmdTarotBookType {
    const NAME: &'static str = "CmdTarotBookType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdTarotBookType> {
        match value {
            0 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookTypeNone),
            8160 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishStoryCsReq),
            8143 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishInteractionCsReq),
            8154 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookGetDataCsReq),
            8149 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishStoryScRsp),
            8142 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookUnlockStoryScRsp),
            8147 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookModifyEnergyScNotify),
            8145 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishInteractionScRsp),
            8150 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookOpenPackScRsp),
            8153 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookGetDataScRsp),
            8144 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookUnlockStoryCsReq),
            8148 => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookOpenPackCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdTarotBookType> {
        match str {
            "CmdTarotBookTypeNone" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookTypeNone),
            "CmdTarotBookFinishStoryCsReq" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishStoryCsReq),
            "CmdTarotBookFinishInteractionCsReq" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishInteractionCsReq),
            "CmdTarotBookGetDataCsReq" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookGetDataCsReq),
            "CmdTarotBookFinishStoryScRsp" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishStoryScRsp),
            "CmdTarotBookUnlockStoryScRsp" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookUnlockStoryScRsp),
            "CmdTarotBookModifyEnergyScNotify" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookModifyEnergyScNotify),
            "CmdTarotBookFinishInteractionScRsp" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookFinishInteractionScRsp),
            "CmdTarotBookOpenPackScRsp" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookOpenPackScRsp),
            "CmdTarotBookGetDataScRsp" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookGetDataScRsp),
            "CmdTarotBookUnlockStoryCsReq" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookUnlockStoryCsReq),
            "CmdTarotBookOpenPackCsReq" => ::std::option::Option::Some(CmdTarotBookType::CmdTarotBookOpenPackCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdTarotBookType] = &[
        CmdTarotBookType::CmdTarotBookTypeNone,
        CmdTarotBookType::CmdTarotBookFinishStoryCsReq,
        CmdTarotBookType::CmdTarotBookFinishInteractionCsReq,
        CmdTarotBookType::CmdTarotBookGetDataCsReq,
        CmdTarotBookType::CmdTarotBookFinishStoryScRsp,
        CmdTarotBookType::CmdTarotBookUnlockStoryScRsp,
        CmdTarotBookType::CmdTarotBookModifyEnergyScNotify,
        CmdTarotBookType::CmdTarotBookFinishInteractionScRsp,
        CmdTarotBookType::CmdTarotBookOpenPackScRsp,
        CmdTarotBookType::CmdTarotBookGetDataScRsp,
        CmdTarotBookType::CmdTarotBookUnlockStoryCsReq,
        CmdTarotBookType::CmdTarotBookOpenPackCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdTarotBookType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdTarotBookType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdTarotBookType::CmdTarotBookTypeNone => 0,
            CmdTarotBookType::CmdTarotBookFinishStoryCsReq => 1,
            CmdTarotBookType::CmdTarotBookFinishInteractionCsReq => 2,
            CmdTarotBookType::CmdTarotBookGetDataCsReq => 3,
            CmdTarotBookType::CmdTarotBookFinishStoryScRsp => 4,
            CmdTarotBookType::CmdTarotBookUnlockStoryScRsp => 5,
            CmdTarotBookType::CmdTarotBookModifyEnergyScNotify => 6,
            CmdTarotBookType::CmdTarotBookFinishInteractionScRsp => 7,
            CmdTarotBookType::CmdTarotBookOpenPackScRsp => 8,
            CmdTarotBookType::CmdTarotBookGetDataScRsp => 9,
            CmdTarotBookType::CmdTarotBookUnlockStoryCsReq => 10,
            CmdTarotBookType::CmdTarotBookOpenPackCsReq => 11,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdTarotBookType {
    fn default() -> Self {
        CmdTarotBookType::CmdTarotBookTypeNone
    }
}

impl CmdTarotBookType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdTarotBookType>("CmdTarotBookType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x16CmdTarotBookType.proto*\xaf\x03\n\x10CmdTarotBookType\x12\x18\n\
    \x14CmdTarotBookTypeNone\x10\0\x12!\n\x1cCmdTarotBookFinishStoryCsReq\
    \x10\xe0?\x12'\n\"CmdTarotBookFinishInteractionCsReq\x10\xcf?\x12\x1d\n\
    \x18CmdTarotBookGetDataCsReq\x10\xda?\x12!\n\x1cCmdTarotBookFinishStoryS\
    cRsp\x10\xd5?\x12!\n\x1cCmdTarotBookUnlockStoryScRsp\x10\xce?\x12%\n\x20\
    CmdTarotBookModifyEnergyScNotify\x10\xd3?\x12'\n\"CmdTarotBookFinishInte\
    ractionScRsp\x10\xd1?\x12\x1e\n\x19CmdTarotBookOpenPackScRsp\x10\xd6?\
    \x12\x1d\n\x18CmdTarotBookGetDataScRsp\x10\xd9?\x12!\n\x1cCmdTarotBookUn\
    lockStoryCsReq\x10\xd0?\x12\x1e\n\x19CmdTarotBookOpenPackCsReq\x10\xd4?b\
    \x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdTarotBookType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
