// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `HDHAPALLLMK.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:HDHAPALLLMK)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct HDHAPALLLMK {
    // message fields
    // @@protoc_insertion_point(field:HDHAPALLLMK.FBFJMPFBCHB)
    pub FBFJMPFBCHB: ::std::vec::Vec<super::LOMJKOBDJFP::LOMJKOBDJFP>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.DEAJILAEAKO)
    pub DEAJILAEAKO: ::protobuf::MessageField<super::BMMLAFJKNLH::BMMLAFJKNLH>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.pending_action)
    pub pending_action: ::protobuf::MessageField<super::KADINMKCJBH::KADINMKCJBH>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.CBFHIDMKFLB)
    pub CBFHIDMKFLB: u32,
    // @@protoc_insertion_point(field:HDHAPALLLMK.JBPMIBFMCPL)
    pub JBPMIBFMCPL: ::protobuf::MessageField<super::MMEFNOCBBBC::MMEFNOCBBBC>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.difficulty_level)
    pub difficulty_level: u32,
    // @@protoc_insertion_point(field:HDHAPALLLMK.DHCLLAANEEF)
    pub DHCLLAANEEF: ::protobuf::MessageField<super::MAKGEEHGPOH::MAKGEEHGPOH>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.NLMHPLDMCMD)
    pub NLMHPLDMCMD: ::std::vec::Vec<super::MBLNBBODELL::MBLNBBODELL>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.area_id)
    pub area_id: u32,
    // @@protoc_insertion_point(field:HDHAPALLLMK.CJCDNDKHMNK)
    pub CJCDNDKHMNK: ::protobuf::MessageField<super::CAHIHNJIAJB::CAHIHNJIAJB>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.DPJEGIBDDPC)
    pub DPJEGIBDDPC: ::protobuf::MessageField<super::MLKOINJENMH::MLKOINJENMH>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.status)
    pub status: ::protobuf::EnumOrUnknown<super::GHHDMEMLKPO::GHHDMEMLKPO>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.JCOODGOENPM)
    pub JCOODGOENPM: ::protobuf::MessageField<super::FBFBMDEPCBP::FBFBMDEPCBP>,
    // @@protoc_insertion_point(field:HDHAPALLLMK.DGNAMOELMGK)
    pub DGNAMOELMGK: ::protobuf::MessageField<super::PNNAEEAKHOF::PNNAEEAKHOF>,
    // special fields
    // @@protoc_insertion_point(special_field:HDHAPALLLMK.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a HDHAPALLLMK {
    fn default() -> &'a HDHAPALLLMK {
        <HDHAPALLLMK as ::protobuf::Message>::default_instance()
    }
}

impl HDHAPALLLMK {
    pub fn new() -> HDHAPALLLMK {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(14);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "FBFJMPFBCHB",
            |m: &HDHAPALLLMK| { &m.FBFJMPFBCHB },
            |m: &mut HDHAPALLLMK| { &mut m.FBFJMPFBCHB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::BMMLAFJKNLH::BMMLAFJKNLH>(
            "DEAJILAEAKO",
            |m: &HDHAPALLLMK| { &m.DEAJILAEAKO },
            |m: &mut HDHAPALLLMK| { &mut m.DEAJILAEAKO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::KADINMKCJBH::KADINMKCJBH>(
            "pending_action",
            |m: &HDHAPALLLMK| { &m.pending_action },
            |m: &mut HDHAPALLLMK| { &mut m.pending_action },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CBFHIDMKFLB",
            |m: &HDHAPALLLMK| { &m.CBFHIDMKFLB },
            |m: &mut HDHAPALLLMK| { &mut m.CBFHIDMKFLB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::MMEFNOCBBBC::MMEFNOCBBBC>(
            "JBPMIBFMCPL",
            |m: &HDHAPALLLMK| { &m.JBPMIBFMCPL },
            |m: &mut HDHAPALLLMK| { &mut m.JBPMIBFMCPL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "difficulty_level",
            |m: &HDHAPALLLMK| { &m.difficulty_level },
            |m: &mut HDHAPALLLMK| { &mut m.difficulty_level },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::MAKGEEHGPOH::MAKGEEHGPOH>(
            "DHCLLAANEEF",
            |m: &HDHAPALLLMK| { &m.DHCLLAANEEF },
            |m: &mut HDHAPALLLMK| { &mut m.DHCLLAANEEF },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "NLMHPLDMCMD",
            |m: &HDHAPALLLMK| { &m.NLMHPLDMCMD },
            |m: &mut HDHAPALLLMK| { &mut m.NLMHPLDMCMD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "area_id",
            |m: &HDHAPALLLMK| { &m.area_id },
            |m: &mut HDHAPALLLMK| { &mut m.area_id },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::CAHIHNJIAJB::CAHIHNJIAJB>(
            "CJCDNDKHMNK",
            |m: &HDHAPALLLMK| { &m.CJCDNDKHMNK },
            |m: &mut HDHAPALLLMK| { &mut m.CJCDNDKHMNK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::MLKOINJENMH::MLKOINJENMH>(
            "DPJEGIBDDPC",
            |m: &HDHAPALLLMK| { &m.DPJEGIBDDPC },
            |m: &mut HDHAPALLLMK| { &mut m.DPJEGIBDDPC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "status",
            |m: &HDHAPALLLMK| { &m.status },
            |m: &mut HDHAPALLLMK| { &mut m.status },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::FBFBMDEPCBP::FBFBMDEPCBP>(
            "JCOODGOENPM",
            |m: &HDHAPALLLMK| { &m.JCOODGOENPM },
            |m: &mut HDHAPALLLMK| { &mut m.JCOODGOENPM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_message_field_accessor::<_, super::PNNAEEAKHOF::PNNAEEAKHOF>(
            "DGNAMOELMGK",
            |m: &HDHAPALLLMK| { &m.DGNAMOELMGK },
            |m: &mut HDHAPALLLMK| { &mut m.DGNAMOELMGK },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<HDHAPALLLMK>(
            "HDHAPALLLMK",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for HDHAPALLLMK {
    const NAME: &'static str = "HDHAPALLLMK";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                114 => {
                    self.FBFJMPFBCHB.push(is.read_message()?);
                },
                34 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DEAJILAEAKO)?;
                },
                10 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.pending_action)?;
                },
                24 => {
                    self.CBFHIDMKFLB = is.read_uint32()?;
                },
                66 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JBPMIBFMCPL)?;
                },
                96 => {
                    self.difficulty_level = is.read_uint32()?;
                },
                106 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DHCLLAANEEF)?;
                },
                18 => {
                    self.NLMHPLDMCMD.push(is.read_message()?);
                },
                56 => {
                    self.area_id = is.read_uint32()?;
                },
                42 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.CJCDNDKHMNK)?;
                },
                74 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DPJEGIBDDPC)?;
                },
                120 => {
                    self.status = is.read_enum_or_unknown()?;
                },
                1082 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.JCOODGOENPM)?;
                },
                3466 => {
                    ::protobuf::rt::read_singular_message_into_field(is, &mut self.DGNAMOELMGK)?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.FBFJMPFBCHB {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if let Some(v) = self.DEAJILAEAKO.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.pending_action.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.CBFHIDMKFLB != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.CBFHIDMKFLB);
        }
        if let Some(v) = self.JBPMIBFMCPL.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.difficulty_level != 0 {
            my_size += ::protobuf::rt::uint32_size(12, self.difficulty_level);
        }
        if let Some(v) = self.DHCLLAANEEF.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        for value in &self.NLMHPLDMCMD {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.area_id != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.area_id);
        }
        if let Some(v) = self.CJCDNDKHMNK.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.DPJEGIBDDPC.as_ref() {
            let len = v.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if self.status != ::protobuf::EnumOrUnknown::new(super::GHHDMEMLKPO::GHHDMEMLKPO::FATE_LEVEL_STATUS_TYPE_NONE) {
            my_size += ::protobuf::rt::int32_size(15, self.status.value());
        }
        if let Some(v) = self.JCOODGOENPM.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        if let Some(v) = self.DGNAMOELMGK.as_ref() {
            let len = v.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.FBFJMPFBCHB {
            ::protobuf::rt::write_message_field_with_cached_size(14, v, os)?;
        };
        if let Some(v) = self.DEAJILAEAKO.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(4, v, os)?;
        }
        if let Some(v) = self.pending_action.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
        }
        if self.CBFHIDMKFLB != 0 {
            os.write_uint32(3, self.CBFHIDMKFLB)?;
        }
        if let Some(v) = self.JBPMIBFMCPL.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(8, v, os)?;
        }
        if self.difficulty_level != 0 {
            os.write_uint32(12, self.difficulty_level)?;
        }
        if let Some(v) = self.DHCLLAANEEF.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        }
        for v in &self.NLMHPLDMCMD {
            ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
        };
        if self.area_id != 0 {
            os.write_uint32(7, self.area_id)?;
        }
        if let Some(v) = self.CJCDNDKHMNK.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(5, v, os)?;
        }
        if let Some(v) = self.DPJEGIBDDPC.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(9, v, os)?;
        }
        if self.status != ::protobuf::EnumOrUnknown::new(super::GHHDMEMLKPO::GHHDMEMLKPO::FATE_LEVEL_STATUS_TYPE_NONE) {
            os.write_enum(15, ::protobuf::EnumOrUnknown::value(&self.status))?;
        }
        if let Some(v) = self.JCOODGOENPM.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(135, v, os)?;
        }
        if let Some(v) = self.DGNAMOELMGK.as_ref() {
            ::protobuf::rt::write_message_field_with_cached_size(433, v, os)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> HDHAPALLLMK {
        HDHAPALLLMK::new()
    }

    fn clear(&mut self) {
        self.FBFJMPFBCHB.clear();
        self.DEAJILAEAKO.clear();
        self.pending_action.clear();
        self.CBFHIDMKFLB = 0;
        self.JBPMIBFMCPL.clear();
        self.difficulty_level = 0;
        self.DHCLLAANEEF.clear();
        self.NLMHPLDMCMD.clear();
        self.area_id = 0;
        self.CJCDNDKHMNK.clear();
        self.DPJEGIBDDPC.clear();
        self.status = ::protobuf::EnumOrUnknown::new(super::GHHDMEMLKPO::GHHDMEMLKPO::FATE_LEVEL_STATUS_TYPE_NONE);
        self.JCOODGOENPM.clear();
        self.DGNAMOELMGK.clear();
        self.special_fields.clear();
    }

    fn default_instance() -> &'static HDHAPALLLMK {
        static instance: HDHAPALLLMK = HDHAPALLLMK {
            FBFJMPFBCHB: ::std::vec::Vec::new(),
            DEAJILAEAKO: ::protobuf::MessageField::none(),
            pending_action: ::protobuf::MessageField::none(),
            CBFHIDMKFLB: 0,
            JBPMIBFMCPL: ::protobuf::MessageField::none(),
            difficulty_level: 0,
            DHCLLAANEEF: ::protobuf::MessageField::none(),
            NLMHPLDMCMD: ::std::vec::Vec::new(),
            area_id: 0,
            CJCDNDKHMNK: ::protobuf::MessageField::none(),
            DPJEGIBDDPC: ::protobuf::MessageField::none(),
            status: ::protobuf::EnumOrUnknown::from_i32(0),
            JCOODGOENPM: ::protobuf::MessageField::none(),
            DGNAMOELMGK: ::protobuf::MessageField::none(),
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for HDHAPALLLMK {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("HDHAPALLLMK").unwrap()).clone()
    }
}

impl ::std::fmt::Display for HDHAPALLLMK {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for HDHAPALLLMK {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11HDHAPALLLMK.proto\x1a\x11BMMLAFJKNLH.proto\x1a\x11CAHIHNJIAJB.prot\
    o\x1a\x11FBFBMDEPCBP.proto\x1a\x11GHHDMEMLKPO.proto\x1a\x11KADINMKCJBH.p\
    roto\x1a\x11LOMJKOBDJFP.proto\x1a\x11MAKGEEHGPOH.proto\x1a\x11MBLNBBODEL\
    L.proto\x1a\x11MLKOINJENMH.proto\x1a\x11MMEFNOCBBBC.proto\x1a\x11PNNAEEA\
    KHOF.proto\"\x80\x05\n\x0bHDHAPALLLMK\x12.\n\x0bFBFJMPFBCHB\x18\x0e\x20\
    \x03(\x0b2\x0c.LOMJKOBDJFPR\x0bFBFJMPFBCHB\x12.\n\x0bDEAJILAEAKO\x18\x04\
    \x20\x01(\x0b2\x0c.BMMLAFJKNLHR\x0bDEAJILAEAKO\x123\n\x0epending_action\
    \x18\x01\x20\x01(\x0b2\x0c.KADINMKCJBHR\rpendingAction\x12\x20\n\x0bCBFH\
    IDMKFLB\x18\x03\x20\x01(\rR\x0bCBFHIDMKFLB\x12.\n\x0bJBPMIBFMCPL\x18\x08\
    \x20\x01(\x0b2\x0c.MMEFNOCBBBCR\x0bJBPMIBFMCPL\x12)\n\x10difficulty_leve\
    l\x18\x0c\x20\x01(\rR\x0fdifficultyLevel\x12.\n\x0bDHCLLAANEEF\x18\r\x20\
    \x01(\x0b2\x0c.MAKGEEHGPOHR\x0bDHCLLAANEEF\x12.\n\x0bNLMHPLDMCMD\x18\x02\
    \x20\x03(\x0b2\x0c.MBLNBBODELLR\x0bNLMHPLDMCMD\x12\x17\n\x07area_id\x18\
    \x07\x20\x01(\rR\x06areaId\x12.\n\x0bCJCDNDKHMNK\x18\x05\x20\x01(\x0b2\
    \x0c.CAHIHNJIAJBR\x0bCJCDNDKHMNK\x12.\n\x0bDPJEGIBDDPC\x18\t\x20\x01(\
    \x0b2\x0c.MLKOINJENMHR\x0bDPJEGIBDDPC\x12$\n\x06status\x18\x0f\x20\x01(\
    \x0e2\x0c.GHHDMEMLKPOR\x06status\x12/\n\x0bJCOODGOENPM\x18\x87\x01\x20\
    \x01(\x0b2\x0c.FBFBMDEPCBPR\x0bJCOODGOENPM\x12/\n\x0bDGNAMOELMGK\x18\xb1\
    \x03\x20\x01(\x0b2\x0c.PNNAEEAKHOFR\x0bDGNAMOELMGKb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(11);
            deps.push(super::BMMLAFJKNLH::file_descriptor().clone());
            deps.push(super::CAHIHNJIAJB::file_descriptor().clone());
            deps.push(super::FBFBMDEPCBP::file_descriptor().clone());
            deps.push(super::GHHDMEMLKPO::file_descriptor().clone());
            deps.push(super::KADINMKCJBH::file_descriptor().clone());
            deps.push(super::LOMJKOBDJFP::file_descriptor().clone());
            deps.push(super::MAKGEEHGPOH::file_descriptor().clone());
            deps.push(super::MBLNBBODELL::file_descriptor().clone());
            deps.push(super::MLKOINJENMH::file_descriptor().clone());
            deps.push(super::MMEFNOCBBBC::file_descriptor().clone());
            deps.push(super::PNNAEEAKHOF::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(HDHAPALLLMK::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
