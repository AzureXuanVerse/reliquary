// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `GHANGCBOEMC.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:GHANGCBOEMC)
pub enum GHANGCBOEMC {
    // @@protoc_insertion_point(enum_value:GHANGCBOEMC.PLANET_FES_CARD_PIECE_INTERACT_APPLYING)
    PLANET_FES_CARD_PIECE_INTERACT_APPLYING = 0,
    // @@protoc_insertion_point(enum_value:GHANGCBOEMC.PLANET_FES_CARD_PIECE_INTERACT_OFFERED)
    PLANET_FES_CARD_PIECE_INTERACT_OFFERED = 1,
    // @@protoc_insertion_point(enum_value:GHANGCBOEMC.PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN)
    PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN = 2,
    // @@protoc_insertion_point(enum_value:GHANGCBOEMC.PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD)
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD = 3,
    // @@protoc_insertion_point(enum_value:GHANGCBOEMC.PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED)
    PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED = 4,
}

impl ::protobuf::Enum for GHANGCBOEMC {
    const NAME: &'static str = "GHANGCBOEMC";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<GHANGCBOEMC> {
        match value {
            0 => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLYING),
            1 => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFERED),
            2 => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN),
            3 => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD),
            4 => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<GHANGCBOEMC> {
        match str {
            "PLANET_FES_CARD_PIECE_INTERACT_APPLYING" => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLYING),
            "PLANET_FES_CARD_PIECE_INTERACT_OFFERED" => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFERED),
            "PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN" => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN),
            "PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD" => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD),
            "PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED" => ::std::option::Option::Some(GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [GHANGCBOEMC] = &[
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLYING,
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFERED,
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN,
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD,
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED,
    ];
}

impl ::protobuf::EnumFull for GHANGCBOEMC {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("GHANGCBOEMC").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = *self as usize;
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for GHANGCBOEMC {
    fn default() -> Self {
        GHANGCBOEMC::PLANET_FES_CARD_PIECE_INTERACT_APPLYING
    }
}

impl GHANGCBOEMC {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<GHANGCBOEMC>("GHANGCBOEMC")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11GHANGCBOEMC.proto*\xfe\x01\n\x0bGHANGCBOEMC\x12+\n'PLANET_FES_CARD\
    _PIECE_INTERACT_APPLYING\x10\0\x12*\n&PLANET_FES_CARD_PIECE_INTERACT_OFF\
    ERED\x10\x01\x12.\n*PLANET_FES_CARD_PIECE_INTERACT_OFFER_TAKEN\x10\x02\
    \x120\n,PLANET_FES_CARD_PIECE_INTERACT_APPLY_CANCELD\x10\x03\x124\n0PLAN\
    ET_FES_CARD_PIECE_INTERACT_APPLY_COMPENSATED\x10\x04b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(GHANGCBOEMC::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
