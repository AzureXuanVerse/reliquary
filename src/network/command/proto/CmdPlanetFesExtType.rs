// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdPlanetFesExtType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdPlanetFesExtType)
pub enum CmdPlanetFesExtType {
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesExtTypeNone)
    CmdPlanetFesExtTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesHandleCardPieceApplyCsReq)
    CmdPlanetFesHandleCardPieceApplyCsReq = 8302,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesHandleCardPieceApplyScRsp)
    CmdPlanetFesHandleCardPieceApplyScRsp = 8300,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetFriendCardPieceScRsp)
    CmdPlanetFesGetFriendCardPieceScRsp = 8326,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetFriendCardPieceCsReq)
    CmdPlanetFesGetFriendCardPieceCsReq = 8308,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesApplyCardPieceScRsp)
    CmdPlanetFesApplyCardPieceScRsp = 8329,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGiveCardPieceScRsp)
    CmdPlanetFesGiveCardPieceScRsp = 8309,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesChangeCardPieceApplyPermissionScRsp)
    CmdPlanetFesChangeCardPieceApplyPermissionScRsp = 8327,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetExtraCardPieceInfoScRsp)
    CmdPlanetFesGetExtraCardPieceInfoScRsp = 8317,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetOfferedCardPieceCsReq)
    CmdPlanetFesGetOfferedCardPieceCsReq = 8335,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetOfferedCardPieceScRsp)
    CmdPlanetFesGetOfferedCardPieceScRsp = 8296,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesLargeBonusInteractCsReq)
    CmdPlanetFesLargeBonusInteractCsReq = 8316,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGiveCardPieceCsReq)
    CmdPlanetFesGiveCardPieceCsReq = 8318,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesEnterNextBusinessDayCsReq)
    CmdPlanetFesEnterNextBusinessDayCsReq = 8336,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesGetExtraCardPieceInfoCsReq)
    CmdPlanetFesGetExtraCardPieceInfoCsReq = 8339,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesApplyCardPieceCsReq)
    CmdPlanetFesApplyCardPieceCsReq = 8307,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesEnterNextBusinessDayScRsp)
    CmdPlanetFesEnterNextBusinessDayScRsp = 8312,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesLargeBonusInteractScRsp)
    CmdPlanetFesLargeBonusInteractScRsp = 8324,
    // @@protoc_insertion_point(enum_value:CmdPlanetFesExtType.CmdPlanetFesChangeCardPieceApplyPermissionCsReq)
    CmdPlanetFesChangeCardPieceApplyPermissionCsReq = 8301,
}

impl ::protobuf::Enum for CmdPlanetFesExtType {
    const NAME: &'static str = "CmdPlanetFesExtType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdPlanetFesExtType> {
        match value {
            0 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesExtTypeNone),
            8302 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyCsReq),
            8300 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyScRsp),
            8326 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceScRsp),
            8308 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceCsReq),
            8329 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceScRsp),
            8309 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceScRsp),
            8327 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionScRsp),
            8317 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoScRsp),
            8335 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceCsReq),
            8296 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceScRsp),
            8316 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractCsReq),
            8318 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceCsReq),
            8336 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayCsReq),
            8339 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoCsReq),
            8307 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceCsReq),
            8312 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayScRsp),
            8324 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractScRsp),
            8301 => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdPlanetFesExtType> {
        match str {
            "CmdPlanetFesExtTypeNone" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesExtTypeNone),
            "CmdPlanetFesHandleCardPieceApplyCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyCsReq),
            "CmdPlanetFesHandleCardPieceApplyScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyScRsp),
            "CmdPlanetFesGetFriendCardPieceScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceScRsp),
            "CmdPlanetFesGetFriendCardPieceCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceCsReq),
            "CmdPlanetFesApplyCardPieceScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceScRsp),
            "CmdPlanetFesGiveCardPieceScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceScRsp),
            "CmdPlanetFesChangeCardPieceApplyPermissionScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionScRsp),
            "CmdPlanetFesGetExtraCardPieceInfoScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoScRsp),
            "CmdPlanetFesGetOfferedCardPieceCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceCsReq),
            "CmdPlanetFesGetOfferedCardPieceScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceScRsp),
            "CmdPlanetFesLargeBonusInteractCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractCsReq),
            "CmdPlanetFesGiveCardPieceCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceCsReq),
            "CmdPlanetFesEnterNextBusinessDayCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayCsReq),
            "CmdPlanetFesGetExtraCardPieceInfoCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoCsReq),
            "CmdPlanetFesApplyCardPieceCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceCsReq),
            "CmdPlanetFesEnterNextBusinessDayScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayScRsp),
            "CmdPlanetFesLargeBonusInteractScRsp" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractScRsp),
            "CmdPlanetFesChangeCardPieceApplyPermissionCsReq" => ::std::option::Option::Some(CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdPlanetFesExtType] = &[
        CmdPlanetFesExtType::CmdPlanetFesExtTypeNone,
        CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyCsReq,
        CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyScRsp,
        CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceScRsp,
        CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceCsReq,
        CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceScRsp,
        CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceScRsp,
        CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionScRsp,
        CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoScRsp,
        CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceCsReq,
        CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceScRsp,
        CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractCsReq,
        CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceCsReq,
        CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayCsReq,
        CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoCsReq,
        CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceCsReq,
        CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayScRsp,
        CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractScRsp,
        CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdPlanetFesExtType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdPlanetFesExtType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdPlanetFesExtType::CmdPlanetFesExtTypeNone => 0,
            CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyCsReq => 1,
            CmdPlanetFesExtType::CmdPlanetFesHandleCardPieceApplyScRsp => 2,
            CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceScRsp => 3,
            CmdPlanetFesExtType::CmdPlanetFesGetFriendCardPieceCsReq => 4,
            CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceScRsp => 5,
            CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceScRsp => 6,
            CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionScRsp => 7,
            CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoScRsp => 8,
            CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceCsReq => 9,
            CmdPlanetFesExtType::CmdPlanetFesGetOfferedCardPieceScRsp => 10,
            CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractCsReq => 11,
            CmdPlanetFesExtType::CmdPlanetFesGiveCardPieceCsReq => 12,
            CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayCsReq => 13,
            CmdPlanetFesExtType::CmdPlanetFesGetExtraCardPieceInfoCsReq => 14,
            CmdPlanetFesExtType::CmdPlanetFesApplyCardPieceCsReq => 15,
            CmdPlanetFesExtType::CmdPlanetFesEnterNextBusinessDayScRsp => 16,
            CmdPlanetFesExtType::CmdPlanetFesLargeBonusInteractScRsp => 17,
            CmdPlanetFesExtType::CmdPlanetFesChangeCardPieceApplyPermissionCsReq => 18,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdPlanetFesExtType {
    fn default() -> Self {
        CmdPlanetFesExtType::CmdPlanetFesExtTypeNone
    }
}

impl CmdPlanetFesExtType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdPlanetFesExtType>("CmdPlanetFesExtType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x19CmdPlanetFesExtType.proto*\xbc\x06\n\x13CmdPlanetFesExtType\x12\
    \x1b\n\x17CmdPlanetFesExtTypeNone\x10\0\x12*\n%CmdPlanetFesHandleCardPie\
    ceApplyCsReq\x10\xee@\x12*\n%CmdPlanetFesHandleCardPieceApplyScRsp\x10\
    \xec@\x12(\n#CmdPlanetFesGetFriendCardPieceScRsp\x10\x86A\x12(\n#CmdPlan\
    etFesGetFriendCardPieceCsReq\x10\xf4@\x12$\n\x1fCmdPlanetFesApplyCardPie\
    ceScRsp\x10\x89A\x12#\n\x1eCmdPlanetFesGiveCardPieceScRsp\x10\xf5@\x124\
    \n/CmdPlanetFesChangeCardPieceApplyPermissionScRsp\x10\x87A\x12+\n&CmdPl\
    anetFesGetExtraCardPieceInfoScRsp\x10\xfd@\x12)\n$CmdPlanetFesGetOffered\
    CardPieceCsReq\x10\x8fA\x12)\n$CmdPlanetFesGetOfferedCardPieceScRsp\x10\
    \xe8@\x12(\n#CmdPlanetFesLargeBonusInteractCsReq\x10\xfc@\x12#\n\x1eCmdP\
    lanetFesGiveCardPieceCsReq\x10\xfe@\x12*\n%CmdPlanetFesEnterNextBusiness\
    DayCsReq\x10\x90A\x12+\n&CmdPlanetFesGetExtraCardPieceInfoCsReq\x10\x93A\
    \x12$\n\x1fCmdPlanetFesApplyCardPieceCsReq\x10\xf3@\x12*\n%CmdPlanetFesE\
    nterNextBusinessDayScRsp\x10\xf8@\x12(\n#CmdPlanetFesLargeBonusInteractS\
    cRsp\x10\x84A\x124\n/CmdPlanetFesChangeCardPieceApplyPermissionCsReq\x10\
    \xed@b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdPlanetFesExtType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
