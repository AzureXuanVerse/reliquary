// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `SettleElfRestaurantPlayCsReq.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:SettleElfRestaurantPlayCsReq)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct SettleElfRestaurantPlayCsReq {
    // message fields
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.DMKAHOOAMDM)
    pub DMKAHOOAMDM: ::std::vec::Vec<super::IOIHFBKLKOM::IOIHFBKLKOM>,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.cost_time)
    pub cost_time: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.FLHMAFIJONE)
    pub FLHMAFIJONE: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.AEJCOCNNKJD)
    pub AEJCOCNNKJD: ::std::vec::Vec<super::EGOIIEHKMBG::EGOIIEHKMBG>,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.FPGEDABJBHO)
    pub FPGEDABJBHO: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.HEJMEPGDHGM)
    pub HEJMEPGDHGM: ::std::vec::Vec<super::CIPHPENJCAK::CIPHPENJCAK>,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.AJJIHPFBHJI)
    pub AJJIHPFBHJI: ::std::vec::Vec<super::DBKLNGEBBID::DBKLNGEBBID>,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.MCKLEHJKCDC)
    pub MCKLEHJKCDC: ::std::vec::Vec<super::KLFHMMHGOBN::KLFHMMHGOBN>,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.NBIJIOCFKIN)
    pub NBIJIOCFKIN: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.HMKHOLPLKNI)
    pub HMKHOLPLKNI: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.JEHJLJDKBGE)
    pub JEHJLJDKBGE: u32,
    // @@protoc_insertion_point(field:SettleElfRestaurantPlayCsReq.BMLEMOBCNCM)
    pub BMLEMOBCNCM: u32,
    // special fields
    // @@protoc_insertion_point(special_field:SettleElfRestaurantPlayCsReq.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a SettleElfRestaurantPlayCsReq {
    fn default() -> &'a SettleElfRestaurantPlayCsReq {
        <SettleElfRestaurantPlayCsReq as ::protobuf::Message>::default_instance()
    }
}

impl SettleElfRestaurantPlayCsReq {
    pub fn new() -> SettleElfRestaurantPlayCsReq {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(12);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "DMKAHOOAMDM",
            |m: &SettleElfRestaurantPlayCsReq| { &m.DMKAHOOAMDM },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.DMKAHOOAMDM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "cost_time",
            |m: &SettleElfRestaurantPlayCsReq| { &m.cost_time },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.cost_time },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FLHMAFIJONE",
            |m: &SettleElfRestaurantPlayCsReq| { &m.FLHMAFIJONE },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.FLHMAFIJONE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "AEJCOCNNKJD",
            |m: &SettleElfRestaurantPlayCsReq| { &m.AEJCOCNNKJD },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.AEJCOCNNKJD },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FPGEDABJBHO",
            |m: &SettleElfRestaurantPlayCsReq| { &m.FPGEDABJBHO },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.FPGEDABJBHO },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "HEJMEPGDHGM",
            |m: &SettleElfRestaurantPlayCsReq| { &m.HEJMEPGDHGM },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.HEJMEPGDHGM },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "AJJIHPFBHJI",
            |m: &SettleElfRestaurantPlayCsReq| { &m.AJJIHPFBHJI },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.AJJIHPFBHJI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "MCKLEHJKCDC",
            |m: &SettleElfRestaurantPlayCsReq| { &m.MCKLEHJKCDC },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.MCKLEHJKCDC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NBIJIOCFKIN",
            |m: &SettleElfRestaurantPlayCsReq| { &m.NBIJIOCFKIN },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.NBIJIOCFKIN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HMKHOLPLKNI",
            |m: &SettleElfRestaurantPlayCsReq| { &m.HMKHOLPLKNI },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.HMKHOLPLKNI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JEHJLJDKBGE",
            |m: &SettleElfRestaurantPlayCsReq| { &m.JEHJLJDKBGE },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.JEHJLJDKBGE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BMLEMOBCNCM",
            |m: &SettleElfRestaurantPlayCsReq| { &m.BMLEMOBCNCM },
            |m: &mut SettleElfRestaurantPlayCsReq| { &mut m.BMLEMOBCNCM },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<SettleElfRestaurantPlayCsReq>(
            "SettleElfRestaurantPlayCsReq",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for SettleElfRestaurantPlayCsReq {
    const NAME: &'static str = "SettleElfRestaurantPlayCsReq";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                106 => {
                    self.DMKAHOOAMDM.push(is.read_message()?);
                },
                32 => {
                    self.cost_time = is.read_uint32()?;
                },
                16 => {
                    self.FLHMAFIJONE = is.read_uint32()?;
                },
                50 => {
                    self.AEJCOCNNKJD.push(is.read_message()?);
                },
                40 => {
                    self.FPGEDABJBHO = is.read_uint32()?;
                },
                122 => {
                    self.HEJMEPGDHGM.push(is.read_message()?);
                },
                90 => {
                    self.AJJIHPFBHJI.push(is.read_message()?);
                },
                98 => {
                    self.MCKLEHJKCDC.push(is.read_message()?);
                },
                64 => {
                    self.NBIJIOCFKIN = is.read_uint32()?;
                },
                8 => {
                    self.HMKHOLPLKNI = is.read_uint32()?;
                },
                80 => {
                    self.JEHJLJDKBGE = is.read_uint32()?;
                },
                56 => {
                    self.BMLEMOBCNCM = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        for value in &self.DMKAHOOAMDM {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.cost_time != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.cost_time);
        }
        if self.FLHMAFIJONE != 0 {
            my_size += ::protobuf::rt::uint32_size(2, self.FLHMAFIJONE);
        }
        for value in &self.AEJCOCNNKJD {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.FPGEDABJBHO != 0 {
            my_size += ::protobuf::rt::uint32_size(5, self.FPGEDABJBHO);
        }
        for value in &self.HEJMEPGDHGM {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.AJJIHPFBHJI {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        for value in &self.MCKLEHJKCDC {
            let len = value.compute_size();
            my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.NBIJIOCFKIN != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.NBIJIOCFKIN);
        }
        if self.HMKHOLPLKNI != 0 {
            my_size += ::protobuf::rt::uint32_size(1, self.HMKHOLPLKNI);
        }
        if self.JEHJLJDKBGE != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.JEHJLJDKBGE);
        }
        if self.BMLEMOBCNCM != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.BMLEMOBCNCM);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        for v in &self.DMKAHOOAMDM {
            ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
        };
        if self.cost_time != 0 {
            os.write_uint32(4, self.cost_time)?;
        }
        if self.FLHMAFIJONE != 0 {
            os.write_uint32(2, self.FLHMAFIJONE)?;
        }
        for v in &self.AEJCOCNNKJD {
            ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
        };
        if self.FPGEDABJBHO != 0 {
            os.write_uint32(5, self.FPGEDABJBHO)?;
        }
        for v in &self.HEJMEPGDHGM {
            ::protobuf::rt::write_message_field_with_cached_size(15, v, os)?;
        };
        for v in &self.AJJIHPFBHJI {
            ::protobuf::rt::write_message_field_with_cached_size(11, v, os)?;
        };
        for v in &self.MCKLEHJKCDC {
            ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
        };
        if self.NBIJIOCFKIN != 0 {
            os.write_uint32(8, self.NBIJIOCFKIN)?;
        }
        if self.HMKHOLPLKNI != 0 {
            os.write_uint32(1, self.HMKHOLPLKNI)?;
        }
        if self.JEHJLJDKBGE != 0 {
            os.write_uint32(10, self.JEHJLJDKBGE)?;
        }
        if self.BMLEMOBCNCM != 0 {
            os.write_uint32(7, self.BMLEMOBCNCM)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> SettleElfRestaurantPlayCsReq {
        SettleElfRestaurantPlayCsReq::new()
    }

    fn clear(&mut self) {
        self.DMKAHOOAMDM.clear();
        self.cost_time = 0;
        self.FLHMAFIJONE = 0;
        self.AEJCOCNNKJD.clear();
        self.FPGEDABJBHO = 0;
        self.HEJMEPGDHGM.clear();
        self.AJJIHPFBHJI.clear();
        self.MCKLEHJKCDC.clear();
        self.NBIJIOCFKIN = 0;
        self.HMKHOLPLKNI = 0;
        self.JEHJLJDKBGE = 0;
        self.BMLEMOBCNCM = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static SettleElfRestaurantPlayCsReq {
        static instance: SettleElfRestaurantPlayCsReq = SettleElfRestaurantPlayCsReq {
            DMKAHOOAMDM: ::std::vec::Vec::new(),
            cost_time: 0,
            FLHMAFIJONE: 0,
            AEJCOCNNKJD: ::std::vec::Vec::new(),
            FPGEDABJBHO: 0,
            HEJMEPGDHGM: ::std::vec::Vec::new(),
            AJJIHPFBHJI: ::std::vec::Vec::new(),
            MCKLEHJKCDC: ::std::vec::Vec::new(),
            NBIJIOCFKIN: 0,
            HMKHOLPLKNI: 0,
            JEHJLJDKBGE: 0,
            BMLEMOBCNCM: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for SettleElfRestaurantPlayCsReq {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("SettleElfRestaurantPlayCsReq").unwrap()).clone()
    }
}

impl ::std::fmt::Display for SettleElfRestaurantPlayCsReq {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for SettleElfRestaurantPlayCsReq {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\"SettleElfRestaurantPlayCsReq.proto\x1a\x11CIPHPENJCAK.proto\x1a\x11D\
    BKLNGEBBID.proto\x1a\x11EGOIIEHKMBG.proto\x1a\x11IOIHFBKLKOM.proto\x1a\
    \x11KLFHMMHGOBN.proto\"\xf7\x03\n\x1cSettleElfRestaurantPlayCsReq\x12.\n\
    \x0bDMKAHOOAMDM\x18\r\x20\x03(\x0b2\x0c.IOIHFBKLKOMR\x0bDMKAHOOAMDM\x12\
    \x1b\n\tcost_time\x18\x04\x20\x01(\rR\x08costTime\x12\x20\n\x0bFLHMAFIJO\
    NE\x18\x02\x20\x01(\rR\x0bFLHMAFIJONE\x12.\n\x0bAEJCOCNNKJD\x18\x06\x20\
    \x03(\x0b2\x0c.EGOIIEHKMBGR\x0bAEJCOCNNKJD\x12\x20\n\x0bFPGEDABJBHO\x18\
    \x05\x20\x01(\rR\x0bFPGEDABJBHO\x12.\n\x0bHEJMEPGDHGM\x18\x0f\x20\x03(\
    \x0b2\x0c.CIPHPENJCAKR\x0bHEJMEPGDHGM\x12.\n\x0bAJJIHPFBHJI\x18\x0b\x20\
    \x03(\x0b2\x0c.DBKLNGEBBIDR\x0bAJJIHPFBHJI\x12.\n\x0bMCKLEHJKCDC\x18\x0c\
    \x20\x03(\x0b2\x0c.KLFHMMHGOBNR\x0bMCKLEHJKCDC\x12\x20\n\x0bNBIJIOCFKIN\
    \x18\x08\x20\x01(\rR\x0bNBIJIOCFKIN\x12\x20\n\x0bHMKHOLPLKNI\x18\x01\x20\
    \x01(\rR\x0bHMKHOLPLKNI\x12\x20\n\x0bJEHJLJDKBGE\x18\n\x20\x01(\rR\x0bJE\
    HJLJDKBGE\x12\x20\n\x0bBMLEMOBCNCM\x18\x07\x20\x01(\rR\x0bBMLEMOBCNCMb\
    \x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(5);
            deps.push(super::CIPHPENJCAK::file_descriptor().clone());
            deps.push(super::DBKLNGEBBID::file_descriptor().clone());
            deps.push(super::EGOIIEHKMBG::file_descriptor().clone());
            deps.push(super::IOIHFBKLKOM::file_descriptor().clone());
            deps.push(super::KLFHMMHGOBN::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(SettleElfRestaurantPlayCsReq::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
