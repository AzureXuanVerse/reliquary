// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdTreasureDungeonType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdTreasureDungeonType)
pub enum CmdTreasureDungeonType {
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdTreasureDungeonTypeNone)
    CmdTreasureDungeonTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdEnterTreasureDungeonCsReq)
    CmdEnterTreasureDungeonCsReq = 4405,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdInteractTreasureDungeonGridCsReq)
    CmdInteractTreasureDungeonGridCsReq = 4452,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdUseTreasureDungeonItemScRsp)
    CmdUseTreasureDungeonItemScRsp = 4436,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdEnterTreasureDungeonScRsp)
    CmdEnterTreasureDungeonScRsp = 4474,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdQuitTreasureDungeonCsReq)
    CmdQuitTreasureDungeonCsReq = 4487,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdTreasureDungeonFinishScNotify)
    CmdTreasureDungeonFinishScNotify = 4491,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdGetTreasureDungeonActivityDataScRsp)
    CmdGetTreasureDungeonActivityDataScRsp = 4402,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdTreasureDungeonDataScNotify)
    CmdTreasureDungeonDataScNotify = 4420,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdGetTreasureDungeonActivityDataCsReq)
    CmdGetTreasureDungeonActivityDataCsReq = 4480,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdOpenTreasureDungeonGridCsReq)
    CmdOpenTreasureDungeonGridCsReq = 4473,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdInteractTreasureDungeonGridScRsp)
    CmdInteractTreasureDungeonGridScRsp = 4468,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdOpenTreasureDungeonGridScRsp)
    CmdOpenTreasureDungeonGridScRsp = 4498,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdUseTreasureDungeonItemCsReq)
    CmdUseTreasureDungeonItemCsReq = 4494,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdFightTreasureDungeonMonsterScRsp)
    CmdFightTreasureDungeonMonsterScRsp = 4438,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdFightTreasureDungeonMonsterCsReq)
    CmdFightTreasureDungeonMonsterCsReq = 4485,
    // @@protoc_insertion_point(enum_value:CmdTreasureDungeonType.CmdQuitTreasureDungeonScRsp)
    CmdQuitTreasureDungeonScRsp = 4409,
}

impl ::protobuf::Enum for CmdTreasureDungeonType {
    const NAME: &'static str = "CmdTreasureDungeonType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdTreasureDungeonType> {
        match value {
            0 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonTypeNone),
            4405 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdEnterTreasureDungeonCsReq),
            4452 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdInteractTreasureDungeonGridCsReq),
            4436 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdUseTreasureDungeonItemScRsp),
            4474 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdEnterTreasureDungeonScRsp),
            4487 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdQuitTreasureDungeonCsReq),
            4491 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonFinishScNotify),
            4402 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataScRsp),
            4420 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonDataScNotify),
            4480 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataCsReq),
            4473 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdOpenTreasureDungeonGridCsReq),
            4468 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdInteractTreasureDungeonGridScRsp),
            4498 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdOpenTreasureDungeonGridScRsp),
            4494 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdUseTreasureDungeonItemCsReq),
            4438 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterScRsp),
            4485 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterCsReq),
            4409 => ::std::option::Option::Some(CmdTreasureDungeonType::CmdQuitTreasureDungeonScRsp),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdTreasureDungeonType> {
        match str {
            "CmdTreasureDungeonTypeNone" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonTypeNone),
            "CmdEnterTreasureDungeonCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdEnterTreasureDungeonCsReq),
            "CmdInteractTreasureDungeonGridCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdInteractTreasureDungeonGridCsReq),
            "CmdUseTreasureDungeonItemScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdUseTreasureDungeonItemScRsp),
            "CmdEnterTreasureDungeonScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdEnterTreasureDungeonScRsp),
            "CmdQuitTreasureDungeonCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdQuitTreasureDungeonCsReq),
            "CmdTreasureDungeonFinishScNotify" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonFinishScNotify),
            "CmdGetTreasureDungeonActivityDataScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataScRsp),
            "CmdTreasureDungeonDataScNotify" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdTreasureDungeonDataScNotify),
            "CmdGetTreasureDungeonActivityDataCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataCsReq),
            "CmdOpenTreasureDungeonGridCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdOpenTreasureDungeonGridCsReq),
            "CmdInteractTreasureDungeonGridScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdInteractTreasureDungeonGridScRsp),
            "CmdOpenTreasureDungeonGridScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdOpenTreasureDungeonGridScRsp),
            "CmdUseTreasureDungeonItemCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdUseTreasureDungeonItemCsReq),
            "CmdFightTreasureDungeonMonsterScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterScRsp),
            "CmdFightTreasureDungeonMonsterCsReq" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterCsReq),
            "CmdQuitTreasureDungeonScRsp" => ::std::option::Option::Some(CmdTreasureDungeonType::CmdQuitTreasureDungeonScRsp),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdTreasureDungeonType] = &[
        CmdTreasureDungeonType::CmdTreasureDungeonTypeNone,
        CmdTreasureDungeonType::CmdEnterTreasureDungeonCsReq,
        CmdTreasureDungeonType::CmdInteractTreasureDungeonGridCsReq,
        CmdTreasureDungeonType::CmdUseTreasureDungeonItemScRsp,
        CmdTreasureDungeonType::CmdEnterTreasureDungeonScRsp,
        CmdTreasureDungeonType::CmdQuitTreasureDungeonCsReq,
        CmdTreasureDungeonType::CmdTreasureDungeonFinishScNotify,
        CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataScRsp,
        CmdTreasureDungeonType::CmdTreasureDungeonDataScNotify,
        CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataCsReq,
        CmdTreasureDungeonType::CmdOpenTreasureDungeonGridCsReq,
        CmdTreasureDungeonType::CmdInteractTreasureDungeonGridScRsp,
        CmdTreasureDungeonType::CmdOpenTreasureDungeonGridScRsp,
        CmdTreasureDungeonType::CmdUseTreasureDungeonItemCsReq,
        CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterScRsp,
        CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterCsReq,
        CmdTreasureDungeonType::CmdQuitTreasureDungeonScRsp,
    ];
}

impl ::protobuf::EnumFull for CmdTreasureDungeonType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdTreasureDungeonType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdTreasureDungeonType::CmdTreasureDungeonTypeNone => 0,
            CmdTreasureDungeonType::CmdEnterTreasureDungeonCsReq => 1,
            CmdTreasureDungeonType::CmdInteractTreasureDungeonGridCsReq => 2,
            CmdTreasureDungeonType::CmdUseTreasureDungeonItemScRsp => 3,
            CmdTreasureDungeonType::CmdEnterTreasureDungeonScRsp => 4,
            CmdTreasureDungeonType::CmdQuitTreasureDungeonCsReq => 5,
            CmdTreasureDungeonType::CmdTreasureDungeonFinishScNotify => 6,
            CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataScRsp => 7,
            CmdTreasureDungeonType::CmdTreasureDungeonDataScNotify => 8,
            CmdTreasureDungeonType::CmdGetTreasureDungeonActivityDataCsReq => 9,
            CmdTreasureDungeonType::CmdOpenTreasureDungeonGridCsReq => 10,
            CmdTreasureDungeonType::CmdInteractTreasureDungeonGridScRsp => 11,
            CmdTreasureDungeonType::CmdOpenTreasureDungeonGridScRsp => 12,
            CmdTreasureDungeonType::CmdUseTreasureDungeonItemCsReq => 13,
            CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterScRsp => 14,
            CmdTreasureDungeonType::CmdFightTreasureDungeonMonsterCsReq => 15,
            CmdTreasureDungeonType::CmdQuitTreasureDungeonScRsp => 16,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdTreasureDungeonType {
    fn default() -> Self {
        CmdTreasureDungeonType::CmdTreasureDungeonTypeNone
    }
}

impl CmdTreasureDungeonType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdTreasureDungeonType>("CmdTreasureDungeonType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1cCmdTreasureDungeonType.proto*\xa6\x05\n\x16CmdTreasureDungeonType\
    \x12\x1e\n\x1aCmdTreasureDungeonTypeNone\x10\0\x12!\n\x1cCmdEnterTreasur\
    eDungeonCsReq\x10\xb5\"\x12(\n#CmdInteractTreasureDungeonGridCsReq\x10\
    \xe4\"\x12#\n\x1eCmdUseTreasureDungeonItemScRsp\x10\xd4\"\x12!\n\x1cCmdE\
    nterTreasureDungeonScRsp\x10\xfa\"\x12\x20\n\x1bCmdQuitTreasureDungeonCs\
    Req\x10\x87#\x12%\n\x20CmdTreasureDungeonFinishScNotify\x10\x8b#\x12+\n&\
    CmdGetTreasureDungeonActivityDataScRsp\x10\xb2\"\x12#\n\x1eCmdTreasureDu\
    ngeonDataScNotify\x10\xc4\"\x12+\n&CmdGetTreasureDungeonActivityDataCsRe\
    q\x10\x80#\x12$\n\x1fCmdOpenTreasureDungeonGridCsReq\x10\xf9\"\x12(\n#Cm\
    dInteractTreasureDungeonGridScRsp\x10\xf4\"\x12$\n\x1fCmdOpenTreasureDun\
    geonGridScRsp\x10\x92#\x12#\n\x1eCmdUseTreasureDungeonItemCsReq\x10\x8e#\
    \x12(\n#CmdFightTreasureDungeonMonsterScRsp\x10\xd6\"\x12(\n#CmdFightTre\
    asureDungeonMonsterCsReq\x10\x85#\x12\x20\n\x1bCmdQuitTreasureDungeonScR\
    sp\x10\xb9\"b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdTreasureDungeonType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
