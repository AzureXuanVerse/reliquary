// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `JOFGDAIADBO.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:JOFGDAIADBO)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct JOFGDAIADBO {
    // message fields
    // @@protoc_insertion_point(field:JOFGDAIADBO.HOIOKBKGFDN)
    pub HOIOKBKGFDN: u32,
    // @@protoc_insertion_point(field:JOFGDAIADBO.BKMAMGAPEGH)
    pub BKMAMGAPEGH: u32,
    // @@protoc_insertion_point(field:JOFGDAIADBO.PKLCNHICGIA)
    pub PKLCNHICGIA: bool,
    // @@protoc_insertion_point(field:JOFGDAIADBO.CHNLIOKGLBP)
    pub CHNLIOKGLBP: bool,
    // @@protoc_insertion_point(field:JOFGDAIADBO.LJHEOCHHCAB)
    pub LJHEOCHHCAB: i64,
    // @@protoc_insertion_point(field:JOFGDAIADBO.DAJJJFCHOOJ)
    pub DAJJJFCHOOJ: u32,
    // @@protoc_insertion_point(field:JOFGDAIADBO.FOMJLFJCKDB)
    pub FOMJLFJCKDB: bool,
    // message oneof groups
    pub MLOOHMIMIOF: ::std::option::Option<jofgdaiadbo::MLOOHMIMIOF>,
    // special fields
    // @@protoc_insertion_point(special_field:JOFGDAIADBO.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a JOFGDAIADBO {
    fn default() -> &'a JOFGDAIADBO {
        <JOFGDAIADBO as ::protobuf::Message>::default_instance()
    }
}

impl JOFGDAIADBO {
    pub fn new() -> JOFGDAIADBO {
        ::std::default::Default::default()
    }

    // .DLLJMIAGHDD PGMBLLOOBMA = 12;

    pub fn PGMBLLOOBMA(&self) -> &super::DLLJMIAGHDD::DLLJMIAGHDD {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(ref v)) => v,
            _ => <super::DLLJMIAGHDD::DLLJMIAGHDD as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_PGMBLLOOBMA(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_PGMBLLOOBMA(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_PGMBLLOOBMA(&mut self, v: super::DLLJMIAGHDD::DLLJMIAGHDD) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(v))
    }

    // Mutable pointer to the field.
    pub fn mut_PGMBLLOOBMA(&mut self) -> &mut super::DLLJMIAGHDD::DLLJMIAGHDD {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(super::DLLJMIAGHDD::DLLJMIAGHDD::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_PGMBLLOOBMA(&mut self) -> super::DLLJMIAGHDD::DLLJMIAGHDD {
        if self.has_PGMBLLOOBMA() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(v)) => v,
                _ => panic!(),
            }
        } else {
            super::DLLJMIAGHDD::DLLJMIAGHDD::new()
        }
    }

    // .EFHABDOFKDE GILDJPKDPNN = 2;

    pub fn GILDJPKDPNN(&self) -> &super::EFHABDOFKDE::EFHABDOFKDE {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(ref v)) => v,
            _ => <super::EFHABDOFKDE::EFHABDOFKDE as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_GILDJPKDPNN(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_GILDJPKDPNN(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_GILDJPKDPNN(&mut self, v: super::EFHABDOFKDE::EFHABDOFKDE) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(v))
    }

    // Mutable pointer to the field.
    pub fn mut_GILDJPKDPNN(&mut self) -> &mut super::EFHABDOFKDE::EFHABDOFKDE {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(super::EFHABDOFKDE::EFHABDOFKDE::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_GILDJPKDPNN(&mut self) -> super::EFHABDOFKDE::EFHABDOFKDE {
        if self.has_GILDJPKDPNN() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(v)) => v,
                _ => panic!(),
            }
        } else {
            super::EFHABDOFKDE::EFHABDOFKDE::new()
        }
    }

    // .CGOMNLBLJGH BOLAIPLEFPI = 10;

    pub fn BOLAIPLEFPI(&self) -> &super::CGOMNLBLJGH::CGOMNLBLJGH {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(ref v)) => v,
            _ => <super::CGOMNLBLJGH::CGOMNLBLJGH as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_BOLAIPLEFPI(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_BOLAIPLEFPI(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_BOLAIPLEFPI(&mut self, v: super::CGOMNLBLJGH::CGOMNLBLJGH) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(v))
    }

    // Mutable pointer to the field.
    pub fn mut_BOLAIPLEFPI(&mut self) -> &mut super::CGOMNLBLJGH::CGOMNLBLJGH {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(super::CGOMNLBLJGH::CGOMNLBLJGH::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_BOLAIPLEFPI(&mut self) -> super::CGOMNLBLJGH::CGOMNLBLJGH {
        if self.has_BOLAIPLEFPI() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(v)) => v,
                _ => panic!(),
            }
        } else {
            super::CGOMNLBLJGH::CGOMNLBLJGH::new()
        }
    }

    // .POHNIIFLCGE GENPKDAEIHC = 6;

    pub fn GENPKDAEIHC(&self) -> &super::POHNIIFLCGE::POHNIIFLCGE {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(ref v)) => v,
            _ => <super::POHNIIFLCGE::POHNIIFLCGE as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_GENPKDAEIHC(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_GENPKDAEIHC(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_GENPKDAEIHC(&mut self, v: super::POHNIIFLCGE::POHNIIFLCGE) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(v))
    }

    // Mutable pointer to the field.
    pub fn mut_GENPKDAEIHC(&mut self) -> &mut super::POHNIIFLCGE::POHNIIFLCGE {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(super::POHNIIFLCGE::POHNIIFLCGE::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_GENPKDAEIHC(&mut self) -> super::POHNIIFLCGE::POHNIIFLCGE {
        if self.has_GENPKDAEIHC() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(v)) => v,
                _ => panic!(),
            }
        } else {
            super::POHNIIFLCGE::POHNIIFLCGE::new()
        }
    }

    // .BKODHAEECJH JFNHPIEGMMM = 1;

    pub fn JFNHPIEGMMM(&self) -> &super::BKODHAEECJH::BKODHAEECJH {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(ref v)) => v,
            _ => <super::BKODHAEECJH::BKODHAEECJH as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_JFNHPIEGMMM(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_JFNHPIEGMMM(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_JFNHPIEGMMM(&mut self, v: super::BKODHAEECJH::BKODHAEECJH) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(v))
    }

    // Mutable pointer to the field.
    pub fn mut_JFNHPIEGMMM(&mut self) -> &mut super::BKODHAEECJH::BKODHAEECJH {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(super::BKODHAEECJH::BKODHAEECJH::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_JFNHPIEGMMM(&mut self) -> super::BKODHAEECJH::BKODHAEECJH {
        if self.has_JFNHPIEGMMM() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(v)) => v,
                _ => panic!(),
            }
        } else {
            super::BKODHAEECJH::BKODHAEECJH::new()
        }
    }

    // .CBOEMEJIFFE JLEFNHIKFOC = 13;

    pub fn JLEFNHIKFOC(&self) -> &super::CBOEMEJIFFE::CBOEMEJIFFE {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(ref v)) => v,
            _ => <super::CBOEMEJIFFE::CBOEMEJIFFE as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_JLEFNHIKFOC(&mut self) {
        self.MLOOHMIMIOF = ::std::option::Option::None;
    }

    pub fn has_JLEFNHIKFOC(&self) -> bool {
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_JLEFNHIKFOC(&mut self, v: super::CBOEMEJIFFE::CBOEMEJIFFE) {
        self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(v))
    }

    // Mutable pointer to the field.
    pub fn mut_JLEFNHIKFOC(&mut self) -> &mut super::CBOEMEJIFFE::CBOEMEJIFFE {
        if let ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(_)) = self.MLOOHMIMIOF {
        } else {
            self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(super::CBOEMEJIFFE::CBOEMEJIFFE::new()));
        }
        match self.MLOOHMIMIOF {
            ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_JLEFNHIKFOC(&mut self) -> super::CBOEMEJIFFE::CBOEMEJIFFE {
        if self.has_JLEFNHIKFOC() {
            match self.MLOOHMIMIOF.take() {
                ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(v)) => v,
                _ => panic!(),
            }
        } else {
            super::CBOEMEJIFFE::CBOEMEJIFFE::new()
        }
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(13);
        let mut oneofs = ::std::vec::Vec::with_capacity(1);
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HOIOKBKGFDN",
            |m: &JOFGDAIADBO| { &m.HOIOKBKGFDN },
            |m: &mut JOFGDAIADBO| { &mut m.HOIOKBKGFDN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BKMAMGAPEGH",
            |m: &JOFGDAIADBO| { &m.BKMAMGAPEGH },
            |m: &mut JOFGDAIADBO| { &mut m.BKMAMGAPEGH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PKLCNHICGIA",
            |m: &JOFGDAIADBO| { &m.PKLCNHICGIA },
            |m: &mut JOFGDAIADBO| { &mut m.PKLCNHICGIA },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CHNLIOKGLBP",
            |m: &JOFGDAIADBO| { &m.CHNLIOKGLBP },
            |m: &mut JOFGDAIADBO| { &mut m.CHNLIOKGLBP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LJHEOCHHCAB",
            |m: &JOFGDAIADBO| { &m.LJHEOCHHCAB },
            |m: &mut JOFGDAIADBO| { &mut m.LJHEOCHHCAB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DAJJJFCHOOJ",
            |m: &JOFGDAIADBO| { &m.DAJJJFCHOOJ },
            |m: &mut JOFGDAIADBO| { &mut m.DAJJJFCHOOJ },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "FOMJLFJCKDB",
            |m: &JOFGDAIADBO| { &m.FOMJLFJCKDB },
            |m: &mut JOFGDAIADBO| { &mut m.FOMJLFJCKDB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::DLLJMIAGHDD::DLLJMIAGHDD>(
            "PGMBLLOOBMA",
            JOFGDAIADBO::has_PGMBLLOOBMA,
            JOFGDAIADBO::PGMBLLOOBMA,
            JOFGDAIADBO::mut_PGMBLLOOBMA,
            JOFGDAIADBO::set_PGMBLLOOBMA,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::EFHABDOFKDE::EFHABDOFKDE>(
            "GILDJPKDPNN",
            JOFGDAIADBO::has_GILDJPKDPNN,
            JOFGDAIADBO::GILDJPKDPNN,
            JOFGDAIADBO::mut_GILDJPKDPNN,
            JOFGDAIADBO::set_GILDJPKDPNN,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::CGOMNLBLJGH::CGOMNLBLJGH>(
            "BOLAIPLEFPI",
            JOFGDAIADBO::has_BOLAIPLEFPI,
            JOFGDAIADBO::BOLAIPLEFPI,
            JOFGDAIADBO::mut_BOLAIPLEFPI,
            JOFGDAIADBO::set_BOLAIPLEFPI,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::POHNIIFLCGE::POHNIIFLCGE>(
            "GENPKDAEIHC",
            JOFGDAIADBO::has_GENPKDAEIHC,
            JOFGDAIADBO::GENPKDAEIHC,
            JOFGDAIADBO::mut_GENPKDAEIHC,
            JOFGDAIADBO::set_GENPKDAEIHC,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::BKODHAEECJH::BKODHAEECJH>(
            "JFNHPIEGMMM",
            JOFGDAIADBO::has_JFNHPIEGMMM,
            JOFGDAIADBO::JFNHPIEGMMM,
            JOFGDAIADBO::mut_JFNHPIEGMMM,
            JOFGDAIADBO::set_JFNHPIEGMMM,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::CBOEMEJIFFE::CBOEMEJIFFE>(
            "JLEFNHIKFOC",
            JOFGDAIADBO::has_JLEFNHIKFOC,
            JOFGDAIADBO::JLEFNHIKFOC,
            JOFGDAIADBO::mut_JLEFNHIKFOC,
            JOFGDAIADBO::set_JLEFNHIKFOC,
        ));
        oneofs.push(jofgdaiadbo::MLOOHMIMIOF::generated_oneof_descriptor_data());
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<JOFGDAIADBO>(
            "JOFGDAIADBO",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for JOFGDAIADBO {
    const NAME: &'static str = "JOFGDAIADBO";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                88 => {
                    self.HOIOKBKGFDN = is.read_uint32()?;
                },
                64 => {
                    self.BKMAMGAPEGH = is.read_uint32()?;
                },
                120 => {
                    self.PKLCNHICGIA = is.read_bool()?;
                },
                40 => {
                    self.CHNLIOKGLBP = is.read_bool()?;
                },
                72 => {
                    self.LJHEOCHHCAB = is.read_int64()?;
                },
                56 => {
                    self.DAJJJFCHOOJ = is.read_uint32()?;
                },
                112 => {
                    self.FOMJLFJCKDB = is.read_bool()?;
                },
                98 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(is.read_message()?));
                },
                18 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(is.read_message()?));
                },
                82 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(is.read_message()?));
                },
                50 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(is.read_message()?));
                },
                10 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(is.read_message()?));
                },
                106 => {
                    self.MLOOHMIMIOF = ::std::option::Option::Some(jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(is.read_message()?));
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if self.HOIOKBKGFDN != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.HOIOKBKGFDN);
        }
        if self.BKMAMGAPEGH != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.BKMAMGAPEGH);
        }
        if self.PKLCNHICGIA != false {
            my_size += 1 + 1;
        }
        if self.CHNLIOKGLBP != false {
            my_size += 1 + 1;
        }
        if self.LJHEOCHHCAB != 0 {
            my_size += ::protobuf::rt::int64_size(9, self.LJHEOCHHCAB);
        }
        if self.DAJJJFCHOOJ != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.DAJJJFCHOOJ);
        }
        if self.FOMJLFJCKDB != false {
            my_size += 1 + 1;
        }
        if let ::std::option::Option::Some(ref v) = self.MLOOHMIMIOF {
            match v {
                &jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
            };
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if self.HOIOKBKGFDN != 0 {
            os.write_uint32(11, self.HOIOKBKGFDN)?;
        }
        if self.BKMAMGAPEGH != 0 {
            os.write_uint32(8, self.BKMAMGAPEGH)?;
        }
        if self.PKLCNHICGIA != false {
            os.write_bool(15, self.PKLCNHICGIA)?;
        }
        if self.CHNLIOKGLBP != false {
            os.write_bool(5, self.CHNLIOKGLBP)?;
        }
        if self.LJHEOCHHCAB != 0 {
            os.write_int64(9, self.LJHEOCHHCAB)?;
        }
        if self.DAJJJFCHOOJ != 0 {
            os.write_uint32(7, self.DAJJJFCHOOJ)?;
        }
        if self.FOMJLFJCKDB != false {
            os.write_bool(14, self.FOMJLFJCKDB)?;
        }
        if let ::std::option::Option::Some(ref v) = self.MLOOHMIMIOF {
            match v {
                &jofgdaiadbo::MLOOHMIMIOF::PGMBLLOOBMA(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(12, v, os)?;
                },
                &jofgdaiadbo::MLOOHMIMIOF::GILDJPKDPNN(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(2, v, os)?;
                },
                &jofgdaiadbo::MLOOHMIMIOF::BOLAIPLEFPI(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(10, v, os)?;
                },
                &jofgdaiadbo::MLOOHMIMIOF::GENPKDAEIHC(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(6, v, os)?;
                },
                &jofgdaiadbo::MLOOHMIMIOF::JFNHPIEGMMM(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1, v, os)?;
                },
                &jofgdaiadbo::MLOOHMIMIOF::JLEFNHIKFOC(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(13, v, os)?;
                },
            };
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> JOFGDAIADBO {
        JOFGDAIADBO::new()
    }

    fn clear(&mut self) {
        self.HOIOKBKGFDN = 0;
        self.BKMAMGAPEGH = 0;
        self.PKLCNHICGIA = false;
        self.CHNLIOKGLBP = false;
        self.LJHEOCHHCAB = 0;
        self.DAJJJFCHOOJ = 0;
        self.FOMJLFJCKDB = false;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.MLOOHMIMIOF = ::std::option::Option::None;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static JOFGDAIADBO {
        static instance: JOFGDAIADBO = JOFGDAIADBO {
            HOIOKBKGFDN: 0,
            BKMAMGAPEGH: 0,
            PKLCNHICGIA: false,
            CHNLIOKGLBP: false,
            LJHEOCHHCAB: 0,
            DAJJJFCHOOJ: 0,
            FOMJLFJCKDB: false,
            MLOOHMIMIOF: ::std::option::Option::None,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for JOFGDAIADBO {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("JOFGDAIADBO").unwrap()).clone()
    }
}

impl ::std::fmt::Display for JOFGDAIADBO {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for JOFGDAIADBO {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

/// Nested message and enums of message `JOFGDAIADBO`
pub mod jofgdaiadbo {

    #[derive(Clone,PartialEq,Debug)]
    #[non_exhaustive]
    // @@protoc_insertion_point(oneof:JOFGDAIADBO.MLOOHMIMIOF)
    pub enum MLOOHMIMIOF {
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.PGMBLLOOBMA)
        PGMBLLOOBMA(super::super::DLLJMIAGHDD::DLLJMIAGHDD),
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.GILDJPKDPNN)
        GILDJPKDPNN(super::super::EFHABDOFKDE::EFHABDOFKDE),
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.BOLAIPLEFPI)
        BOLAIPLEFPI(super::super::CGOMNLBLJGH::CGOMNLBLJGH),
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.GENPKDAEIHC)
        GENPKDAEIHC(super::super::POHNIIFLCGE::POHNIIFLCGE),
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.JFNHPIEGMMM)
        JFNHPIEGMMM(super::super::BKODHAEECJH::BKODHAEECJH),
        // @@protoc_insertion_point(oneof_field:JOFGDAIADBO.JLEFNHIKFOC)
        JLEFNHIKFOC(super::super::CBOEMEJIFFE::CBOEMEJIFFE),
    }

    impl ::protobuf::Oneof for MLOOHMIMIOF {
    }

    impl ::protobuf::OneofFull for MLOOHMIMIOF {
        fn descriptor() -> ::protobuf::reflect::OneofDescriptor {
            static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::OneofDescriptor> = ::protobuf::rt::Lazy::new();
            descriptor.get(|| <super::JOFGDAIADBO as ::protobuf::MessageFull>::descriptor().oneof_by_name("MLOOHMIMIOF").unwrap()).clone()
        }
    }

    impl MLOOHMIMIOF {
        pub(in super) fn generated_oneof_descriptor_data() -> ::protobuf::reflect::GeneratedOneofDescriptorData {
            ::protobuf::reflect::GeneratedOneofDescriptorData::new::<MLOOHMIMIOF>("MLOOHMIMIOF")
        }
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11JOFGDAIADBO.proto\x1a\x11BKODHAEECJH.proto\x1a\x11CBOEMEJIFFE.prot\
    o\x1a\x11CGOMNLBLJGH.proto\x1a\x11DLLJMIAGHDD.proto\x1a\x11EFHABDOFKDE.p\
    roto\x1a\x11POHNIIFLCGE.proto\"\xb6\x04\n\x0bJOFGDAIADBO\x12\x20\n\x0bHO\
    IOKBKGFDN\x18\x0b\x20\x01(\rR\x0bHOIOKBKGFDN\x12\x20\n\x0bBKMAMGAPEGH\
    \x18\x08\x20\x01(\rR\x0bBKMAMGAPEGH\x12\x20\n\x0bPKLCNHICGIA\x18\x0f\x20\
    \x01(\x08R\x0bPKLCNHICGIA\x12\x20\n\x0bCHNLIOKGLBP\x18\x05\x20\x01(\x08R\
    \x0bCHNLIOKGLBP\x12\x20\n\x0bLJHEOCHHCAB\x18\t\x20\x01(\x03R\x0bLJHEOCHH\
    CAB\x12\x20\n\x0bDAJJJFCHOOJ\x18\x07\x20\x01(\rR\x0bDAJJJFCHOOJ\x12\x20\
    \n\x0bFOMJLFJCKDB\x18\x0e\x20\x01(\x08R\x0bFOMJLFJCKDB\x120\n\x0bPGMBLLO\
    OBMA\x18\x0c\x20\x01(\x0b2\x0c.DLLJMIAGHDDH\0R\x0bPGMBLLOOBMA\x120\n\x0b\
    GILDJPKDPNN\x18\x02\x20\x01(\x0b2\x0c.EFHABDOFKDEH\0R\x0bGILDJPKDPNN\x12\
    0\n\x0bBOLAIPLEFPI\x18\n\x20\x01(\x0b2\x0c.CGOMNLBLJGHH\0R\x0bBOLAIPLEFP\
    I\x120\n\x0bGENPKDAEIHC\x18\x06\x20\x01(\x0b2\x0c.POHNIIFLCGEH\0R\x0bGEN\
    PKDAEIHC\x120\n\x0bJFNHPIEGMMM\x18\x01\x20\x01(\x0b2\x0c.BKODHAEECJHH\0R\
    \x0bJFNHPIEGMMM\x120\n\x0bJLEFNHIKFOC\x18\r\x20\x01(\x0b2\x0c.CBOEMEJIFF\
    EH\0R\x0bJLEFNHIKFOCB\r\n\x0bMLOOHMIMIOFb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(6);
            deps.push(super::BKODHAEECJH::file_descriptor().clone());
            deps.push(super::CBOEMEJIFFE::file_descriptor().clone());
            deps.push(super::CGOMNLBLJGH::file_descriptor().clone());
            deps.push(super::DLLJMIAGHDD::file_descriptor().clone());
            deps.push(super::EFHABDOFKDE::file_descriptor().clone());
            deps.push(super::POHNIIFLCGE::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(JOFGDAIADBO::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
