// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `RogueCommonActionResultData.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:RogueCommonActionResultData)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct RogueCommonActionResultData {
    // message oneof groups
    pub KFELKJLDKEH: ::std::option::Option<rogue_common_action_result_data::KFELKJLDKEH>,
    // special fields
    // @@protoc_insertion_point(special_field:RogueCommonActionResultData.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a RogueCommonActionResultData {
    fn default() -> &'a RogueCommonActionResultData {
        <RogueCommonActionResultData as ::protobuf::Message>::default_instance()
    }
}

impl RogueCommonActionResultData {
    pub fn new() -> RogueCommonActionResultData {
        ::std::default::Default::default()
    }

    // .RogueCommonMoney get_item_list = 3;

    pub fn get_item_list(&self) -> &super::RogueCommonMoney::RogueCommonMoney {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(ref v)) => v,
            _ => <super::RogueCommonMoney::RogueCommonMoney as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_item_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_item_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_item_list(&mut self, v: super::RogueCommonMoney::RogueCommonMoney) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_item_list(&mut self) -> &mut super::RogueCommonMoney::RogueCommonMoney {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(super::RogueCommonMoney::RogueCommonMoney::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_item_list(&mut self) -> super::RogueCommonMoney::RogueCommonMoney {
        if self.has_get_item_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonMoney::RogueCommonMoney::new()
        }
    }

    // .RogueCommonMoney remove_item_list = 7;

    pub fn remove_item_list(&self) -> &super::RogueCommonMoney::RogueCommonMoney {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(ref v)) => v,
            _ => <super::RogueCommonMoney::RogueCommonMoney as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_item_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_item_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_item_list(&mut self, v: super::RogueCommonMoney::RogueCommonMoney) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_item_list(&mut self) -> &mut super::RogueCommonMoney::RogueCommonMoney {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(super::RogueCommonMoney::RogueCommonMoney::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_item_list(&mut self) -> super::RogueCommonMoney::RogueCommonMoney {
        if self.has_remove_item_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonMoney::RogueCommonMoney::new()
        }
    }

    // .RogueCommonBuff get_buff_list = 1987;

    pub fn get_buff_list(&self) -> &super::RogueCommonBuff::RogueCommonBuff {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(ref v)) => v,
            _ => <super::RogueCommonBuff::RogueCommonBuff as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_buff_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_buff_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_buff_list(&mut self, v: super::RogueCommonBuff::RogueCommonBuff) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_buff_list(&mut self) -> &mut super::RogueCommonBuff::RogueCommonBuff {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(super::RogueCommonBuff::RogueCommonBuff::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_buff_list(&mut self) -> super::RogueCommonBuff::RogueCommonBuff {
        if self.has_get_buff_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonBuff::RogueCommonBuff::new()
        }
    }

    // .RogueCommonBuff remove_buff_list = 241;

    pub fn remove_buff_list(&self) -> &super::RogueCommonBuff::RogueCommonBuff {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(ref v)) => v,
            _ => <super::RogueCommonBuff::RogueCommonBuff as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_buff_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_buff_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_buff_list(&mut self, v: super::RogueCommonBuff::RogueCommonBuff) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_buff_list(&mut self) -> &mut super::RogueCommonBuff::RogueCommonBuff {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(super::RogueCommonBuff::RogueCommonBuff::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_buff_list(&mut self) -> super::RogueCommonBuff::RogueCommonBuff {
        if self.has_remove_buff_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonBuff::RogueCommonBuff::new()
        }
    }

    // .RogueCommonMiracle get_miracle_list = 1521;

    pub fn get_miracle_list(&self) -> &super::RogueCommonMiracle::RogueCommonMiracle {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(ref v)) => v,
            _ => <super::RogueCommonMiracle::RogueCommonMiracle as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_miracle_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_miracle_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_miracle_list(&mut self, v: super::RogueCommonMiracle::RogueCommonMiracle) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_miracle_list(&mut self) -> &mut super::RogueCommonMiracle::RogueCommonMiracle {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(super::RogueCommonMiracle::RogueCommonMiracle::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_miracle_list(&mut self) -> super::RogueCommonMiracle::RogueCommonMiracle {
        if self.has_get_miracle_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonMiracle::RogueCommonMiracle::new()
        }
    }

    // .RogueCommonRemoveMiracle remove_miracle_list = 55;

    pub fn remove_miracle_list(&self) -> &super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(ref v)) => v,
            _ => <super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_miracle_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_miracle_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_miracle_list(&mut self, v: super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_miracle_list(&mut self) -> &mut super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_miracle_list(&mut self) -> super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle {
        if self.has_remove_miracle_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle::new()
        }
    }

    // .IBIBPOOPDEN APFMFBBDCJK = 104;

    pub fn APFMFBBDCJK(&self) -> &super::IBIBPOOPDEN::IBIBPOOPDEN {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(ref v)) => v,
            _ => <super::IBIBPOOPDEN::IBIBPOOPDEN as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_APFMFBBDCJK(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_APFMFBBDCJK(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_APFMFBBDCJK(&mut self, v: super::IBIBPOOPDEN::IBIBPOOPDEN) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(v))
    }

    // Mutable pointer to the field.
    pub fn mut_APFMFBBDCJK(&mut self) -> &mut super::IBIBPOOPDEN::IBIBPOOPDEN {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(super::IBIBPOOPDEN::IBIBPOOPDEN::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_APFMFBBDCJK(&mut self) -> super::IBIBPOOPDEN::IBIBPOOPDEN {
        if self.has_APFMFBBDCJK() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(v)) => v,
                _ => panic!(),
            }
        } else {
            super::IBIBPOOPDEN::IBIBPOOPDEN::new()
        }
    }

    // .MAAAAGPJJFE BMDJOPGHLCA = 1700;

    pub fn BMDJOPGHLCA(&self) -> &super::MAAAAGPJJFE::MAAAAGPJJFE {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(ref v)) => v,
            _ => <super::MAAAAGPJJFE::MAAAAGPJJFE as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_BMDJOPGHLCA(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_BMDJOPGHLCA(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_BMDJOPGHLCA(&mut self, v: super::MAAAAGPJJFE::MAAAAGPJJFE) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(v))
    }

    // Mutable pointer to the field.
    pub fn mut_BMDJOPGHLCA(&mut self) -> &mut super::MAAAAGPJJFE::MAAAAGPJJFE {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(super::MAAAAGPJJFE::MAAAAGPJJFE::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_BMDJOPGHLCA(&mut self) -> super::MAAAAGPJJFE::MAAAAGPJJFE {
        if self.has_BMDJOPGHLCA() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(v)) => v,
                _ => panic!(),
            }
        } else {
            super::MAAAAGPJJFE::MAAAAGPJJFE::new()
        }
    }

    // .PBALOEJCGFN OMPBJJOHPOO = 1918;

    pub fn OMPBJJOHPOO(&self) -> &super::PBALOEJCGFN::PBALOEJCGFN {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(ref v)) => v,
            _ => <super::PBALOEJCGFN::PBALOEJCGFN as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_OMPBJJOHPOO(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_OMPBJJOHPOO(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_OMPBJJOHPOO(&mut self, v: super::PBALOEJCGFN::PBALOEJCGFN) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(v))
    }

    // Mutable pointer to the field.
    pub fn mut_OMPBJJOHPOO(&mut self) -> &mut super::PBALOEJCGFN::PBALOEJCGFN {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(super::PBALOEJCGFN::PBALOEJCGFN::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_OMPBJJOHPOO(&mut self) -> super::PBALOEJCGFN::PBALOEJCGFN {
        if self.has_OMPBJJOHPOO() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(v)) => v,
                _ => panic!(),
            }
        } else {
            super::PBALOEJCGFN::PBALOEJCGFN::new()
        }
    }

    // .HBLNHGANBAB IOMJMEAOMFI = 1443;

    pub fn IOMJMEAOMFI(&self) -> &super::HBLNHGANBAB::HBLNHGANBAB {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(ref v)) => v,
            _ => <super::HBLNHGANBAB::HBLNHGANBAB as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_IOMJMEAOMFI(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_IOMJMEAOMFI(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_IOMJMEAOMFI(&mut self, v: super::HBLNHGANBAB::HBLNHGANBAB) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(v))
    }

    // Mutable pointer to the field.
    pub fn mut_IOMJMEAOMFI(&mut self) -> &mut super::HBLNHGANBAB::HBLNHGANBAB {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(super::HBLNHGANBAB::HBLNHGANBAB::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_IOMJMEAOMFI(&mut self) -> super::HBLNHGANBAB::HBLNHGANBAB {
        if self.has_IOMJMEAOMFI() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(v)) => v,
                _ => panic!(),
            }
        } else {
            super::HBLNHGANBAB::HBLNHGANBAB::new()
        }
    }

    // .MDGJIKLJDDE BBLGEEMHIIM = 1398;

    pub fn BBLGEEMHIIM(&self) -> &super::MDGJIKLJDDE::MDGJIKLJDDE {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(ref v)) => v,
            _ => <super::MDGJIKLJDDE::MDGJIKLJDDE as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_BBLGEEMHIIM(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_BBLGEEMHIIM(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_BBLGEEMHIIM(&mut self, v: super::MDGJIKLJDDE::MDGJIKLJDDE) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(v))
    }

    // Mutable pointer to the field.
    pub fn mut_BBLGEEMHIIM(&mut self) -> &mut super::MDGJIKLJDDE::MDGJIKLJDDE {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(super::MDGJIKLJDDE::MDGJIKLJDDE::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_BBLGEEMHIIM(&mut self) -> super::MDGJIKLJDDE::MDGJIKLJDDE {
        if self.has_BBLGEEMHIIM() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(v)) => v,
                _ => panic!(),
            }
        } else {
            super::MDGJIKLJDDE::MDGJIKLJDDE::new()
        }
    }

    // .RogueCommonFormula get_formula_list = 240;

    pub fn get_formula_list(&self) -> &super::RogueCommonFormula::RogueCommonFormula {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(ref v)) => v,
            _ => <super::RogueCommonFormula::RogueCommonFormula as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_formula_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_formula_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_formula_list(&mut self, v: super::RogueCommonFormula::RogueCommonFormula) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_formula_list(&mut self) -> &mut super::RogueCommonFormula::RogueCommonFormula {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(super::RogueCommonFormula::RogueCommonFormula::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_formula_list(&mut self) -> super::RogueCommonFormula::RogueCommonFormula {
        if self.has_get_formula_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonFormula::RogueCommonFormula::new()
        }
    }

    // .RogueCommonRemoveFormula remove_formula_list = 744;

    pub fn remove_formula_list(&self) -> &super::RogueCommonRemoveFormula::RogueCommonRemoveFormula {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(ref v)) => v,
            _ => <super::RogueCommonRemoveFormula::RogueCommonRemoveFormula as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_formula_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_formula_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_formula_list(&mut self, v: super::RogueCommonRemoveFormula::RogueCommonRemoveFormula) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_formula_list(&mut self) -> &mut super::RogueCommonRemoveFormula::RogueCommonRemoveFormula {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(super::RogueCommonRemoveFormula::RogueCommonRemoveFormula::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_formula_list(&mut self) -> super::RogueCommonRemoveFormula::RogueCommonRemoveFormula {
        if self.has_remove_formula_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonRemoveFormula::RogueCommonRemoveFormula::new()
        }
    }

    // .RogueCommonExpandedFormula expand_formula_list = 1055;

    pub fn expand_formula_list(&self) -> &super::RogueCommonExpandedFormula::RogueCommonExpandedFormula {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(ref v)) => v,
            _ => <super::RogueCommonExpandedFormula::RogueCommonExpandedFormula as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_expand_formula_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_expand_formula_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_expand_formula_list(&mut self, v: super::RogueCommonExpandedFormula::RogueCommonExpandedFormula) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_expand_formula_list(&mut self) -> &mut super::RogueCommonExpandedFormula::RogueCommonExpandedFormula {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(super::RogueCommonExpandedFormula::RogueCommonExpandedFormula::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_expand_formula_list(&mut self) -> super::RogueCommonExpandedFormula::RogueCommonExpandedFormula {
        if self.has_expand_formula_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonExpandedFormula::RogueCommonExpandedFormula::new()
        }
    }

    // .RogueCommonContractFormula contract_formula_list = 775;

    pub fn contract_formula_list(&self) -> &super::RogueCommonContractFormula::RogueCommonContractFormula {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(ref v)) => v,
            _ => <super::RogueCommonContractFormula::RogueCommonContractFormula as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_contract_formula_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_contract_formula_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_contract_formula_list(&mut self, v: super::RogueCommonContractFormula::RogueCommonContractFormula) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_contract_formula_list(&mut self) -> &mut super::RogueCommonContractFormula::RogueCommonContractFormula {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(super::RogueCommonContractFormula::RogueCommonContractFormula::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_contract_formula_list(&mut self) -> super::RogueCommonContractFormula::RogueCommonContractFormula {
        if self.has_contract_formula_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonContractFormula::RogueCommonContractFormula::new()
        }
    }

    // .FIPFPHBPHLH DMKGEBHPIPJ = 227;

    pub fn DMKGEBHPIPJ(&self) -> &super::FIPFPHBPHLH::FIPFPHBPHLH {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(ref v)) => v,
            _ => <super::FIPFPHBPHLH::FIPFPHBPHLH as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_DMKGEBHPIPJ(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_DMKGEBHPIPJ(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_DMKGEBHPIPJ(&mut self, v: super::FIPFPHBPHLH::FIPFPHBPHLH) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(v))
    }

    // Mutable pointer to the field.
    pub fn mut_DMKGEBHPIPJ(&mut self) -> &mut super::FIPFPHBPHLH::FIPFPHBPHLH {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(super::FIPFPHBPHLH::FIPFPHBPHLH::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_DMKGEBHPIPJ(&mut self) -> super::FIPFPHBPHLH::FIPFPHBPHLH {
        if self.has_DMKGEBHPIPJ() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(v)) => v,
                _ => panic!(),
            }
        } else {
            super::FIPFPHBPHLH::FIPFPHBPHLH::new()
        }
    }

    // .RogueCommonPathBuff path_buff_list = 1115;

    pub fn path_buff_list(&self) -> &super::RogueCommonPathBuff::RogueCommonPathBuff {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(ref v)) => v,
            _ => <super::RogueCommonPathBuff::RogueCommonPathBuff as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_path_buff_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_path_buff_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_path_buff_list(&mut self, v: super::RogueCommonPathBuff::RogueCommonPathBuff) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_path_buff_list(&mut self) -> &mut super::RogueCommonPathBuff::RogueCommonPathBuff {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(super::RogueCommonPathBuff::RogueCommonPathBuff::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_path_buff_list(&mut self) -> super::RogueCommonPathBuff::RogueCommonPathBuff {
        if self.has_path_buff_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonPathBuff::RogueCommonPathBuff::new()
        }
    }

    // .RogueCommonKeyword get_keyword_list = 1246;

    pub fn get_keyword_list(&self) -> &super::RogueCommonKeyword::RogueCommonKeyword {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(ref v)) => v,
            _ => <super::RogueCommonKeyword::RogueCommonKeyword as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_keyword_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_keyword_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_keyword_list(&mut self, v: super::RogueCommonKeyword::RogueCommonKeyword) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_keyword_list(&mut self) -> &mut super::RogueCommonKeyword::RogueCommonKeyword {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(super::RogueCommonKeyword::RogueCommonKeyword::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_keyword_list(&mut self) -> super::RogueCommonKeyword::RogueCommonKeyword {
        if self.has_get_keyword_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonKeyword::RogueCommonKeyword::new()
        }
    }

    // .RogueCommonRemoveKeyword remove_keyword_list = 1748;

    pub fn remove_keyword_list(&self) -> &super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(ref v)) => v,
            _ => <super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_keyword_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_keyword_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_keyword_list(&mut self, v: super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_keyword_list(&mut self) -> &mut super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_keyword_list(&mut self) -> super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword {
        if self.has_remove_keyword_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword::new()
        }
    }

    // .RogueCommonDressScepter dress_scepter_list = 341;

    pub fn dress_scepter_list(&self) -> &super::RogueCommonDressScepter::RogueCommonDressScepter {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(ref v)) => v,
            _ => <super::RogueCommonDressScepter::RogueCommonDressScepter as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_dress_scepter_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_dress_scepter_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_dress_scepter_list(&mut self, v: super::RogueCommonDressScepter::RogueCommonDressScepter) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_dress_scepter_list(&mut self) -> &mut super::RogueCommonDressScepter::RogueCommonDressScepter {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(super::RogueCommonDressScepter::RogueCommonDressScepter::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_dress_scepter_list(&mut self) -> super::RogueCommonDressScepter::RogueCommonDressScepter {
        if self.has_dress_scepter_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonDressScepter::RogueCommonDressScepter::new()
        }
    }

    // .RogueCommonGetScepter get_scepter_list = 1304;

    pub fn get_scepter_list(&self) -> &super::RogueCommonGetScepter::RogueCommonGetScepter {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(ref v)) => v,
            _ => <super::RogueCommonGetScepter::RogueCommonGetScepter as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_scepter_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_scepter_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_scepter_list(&mut self, v: super::RogueCommonGetScepter::RogueCommonGetScepter) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_scepter_list(&mut self) -> &mut super::RogueCommonGetScepter::RogueCommonGetScepter {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(super::RogueCommonGetScepter::RogueCommonGetScepter::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_scepter_list(&mut self) -> super::RogueCommonGetScepter::RogueCommonGetScepter {
        if self.has_get_scepter_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueCommonGetScepter::RogueCommonGetScepter::new()
        }
    }

    // .AEFFJLGFAMH KAAILMGCHOK = 751;

    pub fn KAAILMGCHOK(&self) -> &super::AEFFJLGFAMH::AEFFJLGFAMH {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(ref v)) => v,
            _ => <super::AEFFJLGFAMH::AEFFJLGFAMH as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_KAAILMGCHOK(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_KAAILMGCHOK(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_KAAILMGCHOK(&mut self, v: super::AEFFJLGFAMH::AEFFJLGFAMH) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(v))
    }

    // Mutable pointer to the field.
    pub fn mut_KAAILMGCHOK(&mut self) -> &mut super::AEFFJLGFAMH::AEFFJLGFAMH {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(super::AEFFJLGFAMH::AEFFJLGFAMH::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_KAAILMGCHOK(&mut self) -> super::AEFFJLGFAMH::AEFFJLGFAMH {
        if self.has_KAAILMGCHOK() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(v)) => v,
                _ => panic!(),
            }
        } else {
            super::AEFFJLGFAMH::AEFFJLGFAMH::new()
        }
    }

    // .RogueMagicGameUnitInfo get_magic_unit_list = 1268;

    pub fn get_magic_unit_list(&self) -> &super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(ref v)) => v,
            _ => <super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_get_magic_unit_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_get_magic_unit_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_get_magic_unit_list(&mut self, v: super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_get_magic_unit_list(&mut self) -> &mut super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_get_magic_unit_list(&mut self) -> super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if self.has_get_magic_unit_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()
        }
    }

    // .RogueMagicGameUnitInfo remove_magic_unit_list = 960;

    pub fn remove_magic_unit_list(&self) -> &super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(ref v)) => v,
            _ => <super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_remove_magic_unit_list(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_remove_magic_unit_list(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_remove_magic_unit_list(&mut self, v: super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(v))
    }

    // Mutable pointer to the field.
    pub fn mut_remove_magic_unit_list(&mut self) -> &mut super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_remove_magic_unit_list(&mut self) -> super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if self.has_remove_magic_unit_list() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()
        }
    }

    // .RogueMagicGameUnitInfo JGDAEBNEFKA = 1979;

    pub fn JGDAEBNEFKA(&self) -> &super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(ref v)) => v,
            _ => <super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_JGDAEBNEFKA(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_JGDAEBNEFKA(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_JGDAEBNEFKA(&mut self, v: super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(v))
    }

    // Mutable pointer to the field.
    pub fn mut_JGDAEBNEFKA(&mut self) -> &mut super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_JGDAEBNEFKA(&mut self) -> super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo {
        if self.has_JGDAEBNEFKA() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo::new()
        }
    }

    // .RogueMagicGameScepterInfo AOIBHCMANFK = 1424;

    pub fn AOIBHCMANFK(&self) -> &super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(ref v)) => v,
            _ => <super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_AOIBHCMANFK(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_AOIBHCMANFK(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_AOIBHCMANFK(&mut self, v: super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(v))
    }

    // Mutable pointer to the field.
    pub fn mut_AOIBHCMANFK(&mut self) -> &mut super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_AOIBHCMANFK(&mut self) -> super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo {
        if self.has_AOIBHCMANFK() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(v)) => v,
                _ => panic!(),
            }
        } else {
            super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo::new()
        }
    }

    // .HOBKEOICBMI ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE = 1745;

    pub fn ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&self) -> &super::HOBKEOICBMI::HOBKEOICBMI {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(ref v)) => v,
            _ => <super::HOBKEOICBMI::HOBKEOICBMI as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&mut self, v: super::HOBKEOICBMI::HOBKEOICBMI) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(v))
    }

    // Mutable pointer to the field.
    pub fn mut_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&mut self) -> &mut super::HOBKEOICBMI::HOBKEOICBMI {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(super::HOBKEOICBMI::HOBKEOICBMI::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE(&mut self) -> super::HOBKEOICBMI::HOBKEOICBMI {
        if self.has_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(v)) => v,
                _ => panic!(),
            }
        } else {
            super::HOBKEOICBMI::HOBKEOICBMI::new()
        }
    }

    // .LNAMGOMHGJB EDBPEHABHBI = 1202;

    pub fn EDBPEHABHBI(&self) -> &super::LNAMGOMHGJB::LNAMGOMHGJB {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(ref v)) => v,
            _ => <super::LNAMGOMHGJB::LNAMGOMHGJB as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_EDBPEHABHBI(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_EDBPEHABHBI(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_EDBPEHABHBI(&mut self, v: super::LNAMGOMHGJB::LNAMGOMHGJB) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(v))
    }

    // Mutable pointer to the field.
    pub fn mut_EDBPEHABHBI(&mut self) -> &mut super::LNAMGOMHGJB::LNAMGOMHGJB {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(super::LNAMGOMHGJB::LNAMGOMHGJB::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_EDBPEHABHBI(&mut self) -> super::LNAMGOMHGJB::LNAMGOMHGJB {
        if self.has_EDBPEHABHBI() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(v)) => v,
                _ => panic!(),
            }
        } else {
            super::LNAMGOMHGJB::LNAMGOMHGJB::new()
        }
    }

    // .LNAMGOMHGJB CJOHMIPJHNM = 845;

    pub fn CJOHMIPJHNM(&self) -> &super::LNAMGOMHGJB::LNAMGOMHGJB {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(ref v)) => v,
            _ => <super::LNAMGOMHGJB::LNAMGOMHGJB as ::protobuf::Message>::default_instance(),
        }
    }

    pub fn clear_CJOHMIPJHNM(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
    }

    pub fn has_CJOHMIPJHNM(&self) -> bool {
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(..)) => true,
            _ => false,
        }
    }

    // Param is passed by value, moved
    pub fn set_CJOHMIPJHNM(&mut self, v: super::LNAMGOMHGJB::LNAMGOMHGJB) {
        self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(v))
    }

    // Mutable pointer to the field.
    pub fn mut_CJOHMIPJHNM(&mut self) -> &mut super::LNAMGOMHGJB::LNAMGOMHGJB {
        if let ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(_)) = self.KFELKJLDKEH {
        } else {
            self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(super::LNAMGOMHGJB::LNAMGOMHGJB::new()));
        }
        match self.KFELKJLDKEH {
            ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(ref mut v)) => v,
            _ => panic!(),
        }
    }

    // Take field
    pub fn take_CJOHMIPJHNM(&mut self) -> super::LNAMGOMHGJB::LNAMGOMHGJB {
        if self.has_CJOHMIPJHNM() {
            match self.KFELKJLDKEH.take() {
                ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(v)) => v,
                _ => panic!(),
            }
        } else {
            super::LNAMGOMHGJB::LNAMGOMHGJB::new()
        }
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(29);
        let mut oneofs = ::std::vec::Vec::with_capacity(1);
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonMoney::RogueCommonMoney>(
            "get_item_list",
            RogueCommonActionResultData::has_get_item_list,
            RogueCommonActionResultData::get_item_list,
            RogueCommonActionResultData::mut_get_item_list,
            RogueCommonActionResultData::set_get_item_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonMoney::RogueCommonMoney>(
            "remove_item_list",
            RogueCommonActionResultData::has_remove_item_list,
            RogueCommonActionResultData::remove_item_list,
            RogueCommonActionResultData::mut_remove_item_list,
            RogueCommonActionResultData::set_remove_item_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonBuff::RogueCommonBuff>(
            "get_buff_list",
            RogueCommonActionResultData::has_get_buff_list,
            RogueCommonActionResultData::get_buff_list,
            RogueCommonActionResultData::mut_get_buff_list,
            RogueCommonActionResultData::set_get_buff_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonBuff::RogueCommonBuff>(
            "remove_buff_list",
            RogueCommonActionResultData::has_remove_buff_list,
            RogueCommonActionResultData::remove_buff_list,
            RogueCommonActionResultData::mut_remove_buff_list,
            RogueCommonActionResultData::set_remove_buff_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonMiracle::RogueCommonMiracle>(
            "get_miracle_list",
            RogueCommonActionResultData::has_get_miracle_list,
            RogueCommonActionResultData::get_miracle_list,
            RogueCommonActionResultData::mut_get_miracle_list,
            RogueCommonActionResultData::set_get_miracle_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle>(
            "remove_miracle_list",
            RogueCommonActionResultData::has_remove_miracle_list,
            RogueCommonActionResultData::remove_miracle_list,
            RogueCommonActionResultData::mut_remove_miracle_list,
            RogueCommonActionResultData::set_remove_miracle_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::IBIBPOOPDEN::IBIBPOOPDEN>(
            "APFMFBBDCJK",
            RogueCommonActionResultData::has_APFMFBBDCJK,
            RogueCommonActionResultData::APFMFBBDCJK,
            RogueCommonActionResultData::mut_APFMFBBDCJK,
            RogueCommonActionResultData::set_APFMFBBDCJK,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::MAAAAGPJJFE::MAAAAGPJJFE>(
            "BMDJOPGHLCA",
            RogueCommonActionResultData::has_BMDJOPGHLCA,
            RogueCommonActionResultData::BMDJOPGHLCA,
            RogueCommonActionResultData::mut_BMDJOPGHLCA,
            RogueCommonActionResultData::set_BMDJOPGHLCA,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::PBALOEJCGFN::PBALOEJCGFN>(
            "OMPBJJOHPOO",
            RogueCommonActionResultData::has_OMPBJJOHPOO,
            RogueCommonActionResultData::OMPBJJOHPOO,
            RogueCommonActionResultData::mut_OMPBJJOHPOO,
            RogueCommonActionResultData::set_OMPBJJOHPOO,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::HBLNHGANBAB::HBLNHGANBAB>(
            "IOMJMEAOMFI",
            RogueCommonActionResultData::has_IOMJMEAOMFI,
            RogueCommonActionResultData::IOMJMEAOMFI,
            RogueCommonActionResultData::mut_IOMJMEAOMFI,
            RogueCommonActionResultData::set_IOMJMEAOMFI,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::MDGJIKLJDDE::MDGJIKLJDDE>(
            "BBLGEEMHIIM",
            RogueCommonActionResultData::has_BBLGEEMHIIM,
            RogueCommonActionResultData::BBLGEEMHIIM,
            RogueCommonActionResultData::mut_BBLGEEMHIIM,
            RogueCommonActionResultData::set_BBLGEEMHIIM,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonFormula::RogueCommonFormula>(
            "get_formula_list",
            RogueCommonActionResultData::has_get_formula_list,
            RogueCommonActionResultData::get_formula_list,
            RogueCommonActionResultData::mut_get_formula_list,
            RogueCommonActionResultData::set_get_formula_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonRemoveFormula::RogueCommonRemoveFormula>(
            "remove_formula_list",
            RogueCommonActionResultData::has_remove_formula_list,
            RogueCommonActionResultData::remove_formula_list,
            RogueCommonActionResultData::mut_remove_formula_list,
            RogueCommonActionResultData::set_remove_formula_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonExpandedFormula::RogueCommonExpandedFormula>(
            "expand_formula_list",
            RogueCommonActionResultData::has_expand_formula_list,
            RogueCommonActionResultData::expand_formula_list,
            RogueCommonActionResultData::mut_expand_formula_list,
            RogueCommonActionResultData::set_expand_formula_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonContractFormula::RogueCommonContractFormula>(
            "contract_formula_list",
            RogueCommonActionResultData::has_contract_formula_list,
            RogueCommonActionResultData::contract_formula_list,
            RogueCommonActionResultData::mut_contract_formula_list,
            RogueCommonActionResultData::set_contract_formula_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::FIPFPHBPHLH::FIPFPHBPHLH>(
            "DMKGEBHPIPJ",
            RogueCommonActionResultData::has_DMKGEBHPIPJ,
            RogueCommonActionResultData::DMKGEBHPIPJ,
            RogueCommonActionResultData::mut_DMKGEBHPIPJ,
            RogueCommonActionResultData::set_DMKGEBHPIPJ,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonPathBuff::RogueCommonPathBuff>(
            "path_buff_list",
            RogueCommonActionResultData::has_path_buff_list,
            RogueCommonActionResultData::path_buff_list,
            RogueCommonActionResultData::mut_path_buff_list,
            RogueCommonActionResultData::set_path_buff_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonKeyword::RogueCommonKeyword>(
            "get_keyword_list",
            RogueCommonActionResultData::has_get_keyword_list,
            RogueCommonActionResultData::get_keyword_list,
            RogueCommonActionResultData::mut_get_keyword_list,
            RogueCommonActionResultData::set_get_keyword_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword>(
            "remove_keyword_list",
            RogueCommonActionResultData::has_remove_keyword_list,
            RogueCommonActionResultData::remove_keyword_list,
            RogueCommonActionResultData::mut_remove_keyword_list,
            RogueCommonActionResultData::set_remove_keyword_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonDressScepter::RogueCommonDressScepter>(
            "dress_scepter_list",
            RogueCommonActionResultData::has_dress_scepter_list,
            RogueCommonActionResultData::dress_scepter_list,
            RogueCommonActionResultData::mut_dress_scepter_list,
            RogueCommonActionResultData::set_dress_scepter_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueCommonGetScepter::RogueCommonGetScepter>(
            "get_scepter_list",
            RogueCommonActionResultData::has_get_scepter_list,
            RogueCommonActionResultData::get_scepter_list,
            RogueCommonActionResultData::mut_get_scepter_list,
            RogueCommonActionResultData::set_get_scepter_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::AEFFJLGFAMH::AEFFJLGFAMH>(
            "KAAILMGCHOK",
            RogueCommonActionResultData::has_KAAILMGCHOK,
            RogueCommonActionResultData::KAAILMGCHOK,
            RogueCommonActionResultData::mut_KAAILMGCHOK,
            RogueCommonActionResultData::set_KAAILMGCHOK,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo>(
            "get_magic_unit_list",
            RogueCommonActionResultData::has_get_magic_unit_list,
            RogueCommonActionResultData::get_magic_unit_list,
            RogueCommonActionResultData::mut_get_magic_unit_list,
            RogueCommonActionResultData::set_get_magic_unit_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo>(
            "remove_magic_unit_list",
            RogueCommonActionResultData::has_remove_magic_unit_list,
            RogueCommonActionResultData::remove_magic_unit_list,
            RogueCommonActionResultData::mut_remove_magic_unit_list,
            RogueCommonActionResultData::set_remove_magic_unit_list,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo>(
            "JGDAEBNEFKA",
            RogueCommonActionResultData::has_JGDAEBNEFKA,
            RogueCommonActionResultData::JGDAEBNEFKA,
            RogueCommonActionResultData::mut_JGDAEBNEFKA,
            RogueCommonActionResultData::set_JGDAEBNEFKA,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo>(
            "AOIBHCMANFK",
            RogueCommonActionResultData::has_AOIBHCMANFK,
            RogueCommonActionResultData::AOIBHCMANFK,
            RogueCommonActionResultData::mut_AOIBHCMANFK,
            RogueCommonActionResultData::set_AOIBHCMANFK,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::HOBKEOICBMI::HOBKEOICBMI>(
            "ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE",
            RogueCommonActionResultData::has_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE,
            RogueCommonActionResultData::ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE,
            RogueCommonActionResultData::mut_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE,
            RogueCommonActionResultData::set_ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::LNAMGOMHGJB::LNAMGOMHGJB>(
            "EDBPEHABHBI",
            RogueCommonActionResultData::has_EDBPEHABHBI,
            RogueCommonActionResultData::EDBPEHABHBI,
            RogueCommonActionResultData::mut_EDBPEHABHBI,
            RogueCommonActionResultData::set_EDBPEHABHBI,
        ));
        fields.push(::protobuf::reflect::rt::v2::make_oneof_message_has_get_mut_set_accessor::<_, super::LNAMGOMHGJB::LNAMGOMHGJB>(
            "CJOHMIPJHNM",
            RogueCommonActionResultData::has_CJOHMIPJHNM,
            RogueCommonActionResultData::CJOHMIPJHNM,
            RogueCommonActionResultData::mut_CJOHMIPJHNM,
            RogueCommonActionResultData::set_CJOHMIPJHNM,
        ));
        oneofs.push(rogue_common_action_result_data::KFELKJLDKEH::generated_oneof_descriptor_data());
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<RogueCommonActionResultData>(
            "RogueCommonActionResultData",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for RogueCommonActionResultData {
    const NAME: &'static str = "RogueCommonActionResultData";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                26 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetItemList(is.read_message()?));
                },
                58 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(is.read_message()?));
                },
                15898 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(is.read_message()?));
                },
                1930 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(is.read_message()?));
                },
                12170 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(is.read_message()?));
                },
                442 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(is.read_message()?));
                },
                834 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(is.read_message()?));
                },
                13602 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(is.read_message()?));
                },
                15346 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(is.read_message()?));
                },
                11546 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(is.read_message()?));
                },
                11186 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(is.read_message()?));
                },
                1922 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(is.read_message()?));
                },
                5954 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(is.read_message()?));
                },
                8442 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(is.read_message()?));
                },
                6202 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(is.read_message()?));
                },
                1818 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(is.read_message()?));
                },
                8922 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(is.read_message()?));
                },
                9970 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(is.read_message()?));
                },
                13986 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(is.read_message()?));
                },
                2730 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(is.read_message()?));
                },
                10434 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(is.read_message()?));
                },
                6010 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(is.read_message()?));
                },
                10146 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(is.read_message()?));
                },
                7682 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(is.read_message()?));
                },
                15834 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(is.read_message()?));
                },
                11394 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(is.read_message()?));
                },
                13962 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(is.read_message()?));
                },
                9618 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(is.read_message()?));
                },
                6762 => {
                    self.KFELKJLDKEH = ::std::option::Option::Some(rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(is.read_message()?));
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        if let ::std::option::Option::Some(ref v) = self.KFELKJLDKEH {
            match v {
                &rogue_common_action_result_data::KFELKJLDKEH::GetItemList(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(ref v) => {
                    let len = v.compute_size();
                    my_size += 1 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(ref v) => {
                    let len = v.compute_size();
                    my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
                },
            };
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        if let ::std::option::Option::Some(ref v) = self.KFELKJLDKEH {
            match v {
                &rogue_common_action_result_data::KFELKJLDKEH::GetItemList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(3, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveItemList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(7, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetBuffList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1987, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveBuffList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(241, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetMiracleList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1521, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveMiracleList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(55, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::APFMFBBDCJK(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(104, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::BMDJOPGHLCA(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1700, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::OMPBJJOHPOO(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1918, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::IOMJMEAOMFI(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1443, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::BBLGEEMHIIM(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1398, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetFormulaList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(240, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveFormulaList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(744, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ExpandFormulaList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1055, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ContractFormulaList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(775, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::DMKGEBHPIPJ(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(227, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::PathBuffList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1115, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetKeywordList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1246, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveKeywordList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1748, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::DressScepterList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(341, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetScepterList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1304, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::KAAILMGCHOK(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(751, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::GetMagicUnitList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1268, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::RemoveMagicUnitList(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(960, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::JGDAEBNEFKA(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1979, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::AOIBHCMANFK(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1424, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1745, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::EDBPEHABHBI(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(1202, v, os)?;
                },
                &rogue_common_action_result_data::KFELKJLDKEH::CJOHMIPJHNM(ref v) => {
                    ::protobuf::rt::write_message_field_with_cached_size(845, v, os)?;
                },
            };
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> RogueCommonActionResultData {
        RogueCommonActionResultData::new()
    }

    fn clear(&mut self) {
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.KFELKJLDKEH = ::std::option::Option::None;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static RogueCommonActionResultData {
        static instance: RogueCommonActionResultData = RogueCommonActionResultData {
            KFELKJLDKEH: ::std::option::Option::None,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for RogueCommonActionResultData {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("RogueCommonActionResultData").unwrap()).clone()
    }
}

impl ::std::fmt::Display for RogueCommonActionResultData {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for RogueCommonActionResultData {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

/// Nested message and enums of message `RogueCommonActionResultData`
pub mod rogue_common_action_result_data {

    #[derive(Clone,PartialEq,Debug)]
    #[non_exhaustive]
    // @@protoc_insertion_point(oneof:RogueCommonActionResultData.KFELKJLDKEH)
    pub enum KFELKJLDKEH {
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_item_list)
        GetItemList(super::super::RogueCommonMoney::RogueCommonMoney),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_item_list)
        RemoveItemList(super::super::RogueCommonMoney::RogueCommonMoney),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_buff_list)
        GetBuffList(super::super::RogueCommonBuff::RogueCommonBuff),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_buff_list)
        RemoveBuffList(super::super::RogueCommonBuff::RogueCommonBuff),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_miracle_list)
        GetMiracleList(super::super::RogueCommonMiracle::RogueCommonMiracle),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_miracle_list)
        RemoveMiracleList(super::super::RogueCommonRemoveMiracle::RogueCommonRemoveMiracle),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.APFMFBBDCJK)
        APFMFBBDCJK(super::super::IBIBPOOPDEN::IBIBPOOPDEN),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.BMDJOPGHLCA)
        BMDJOPGHLCA(super::super::MAAAAGPJJFE::MAAAAGPJJFE),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.OMPBJJOHPOO)
        OMPBJJOHPOO(super::super::PBALOEJCGFN::PBALOEJCGFN),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.IOMJMEAOMFI)
        IOMJMEAOMFI(super::super::HBLNHGANBAB::HBLNHGANBAB),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.BBLGEEMHIIM)
        BBLGEEMHIIM(super::super::MDGJIKLJDDE::MDGJIKLJDDE),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_formula_list)
        GetFormulaList(super::super::RogueCommonFormula::RogueCommonFormula),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_formula_list)
        RemoveFormulaList(super::super::RogueCommonRemoveFormula::RogueCommonRemoveFormula),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.expand_formula_list)
        ExpandFormulaList(super::super::RogueCommonExpandedFormula::RogueCommonExpandedFormula),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.contract_formula_list)
        ContractFormulaList(super::super::RogueCommonContractFormula::RogueCommonContractFormula),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.DMKGEBHPIPJ)
        DMKGEBHPIPJ(super::super::FIPFPHBPHLH::FIPFPHBPHLH),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.path_buff_list)
        PathBuffList(super::super::RogueCommonPathBuff::RogueCommonPathBuff),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_keyword_list)
        GetKeywordList(super::super::RogueCommonKeyword::RogueCommonKeyword),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_keyword_list)
        RemoveKeywordList(super::super::RogueCommonRemoveKeyword::RogueCommonRemoveKeyword),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.dress_scepter_list)
        DressScepterList(super::super::RogueCommonDressScepter::RogueCommonDressScepter),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_scepter_list)
        GetScepterList(super::super::RogueCommonGetScepter::RogueCommonGetScepter),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.KAAILMGCHOK)
        KAAILMGCHOK(super::super::AEFFJLGFAMH::AEFFJLGFAMH),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.get_magic_unit_list)
        GetMagicUnitList(super::super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.remove_magic_unit_list)
        RemoveMagicUnitList(super::super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.JGDAEBNEFKA)
        JGDAEBNEFKA(super::super::RogueMagicGameUnitInfo::RogueMagicGameUnitInfo),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.AOIBHCMANFK)
        AOIBHCMANFK(super::super::RogueMagicGameScepterInfo::RogueMagicGameScepterInfo),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE)
        ROGUECOMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE(super::super::HOBKEOICBMI::HOBKEOICBMI),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.EDBPEHABHBI)
        EDBPEHABHBI(super::super::LNAMGOMHGJB::LNAMGOMHGJB),
        // @@protoc_insertion_point(oneof_field:RogueCommonActionResultData.CJOHMIPJHNM)
        CJOHMIPJHNM(super::super::LNAMGOMHGJB::LNAMGOMHGJB),
    }

    impl ::protobuf::Oneof for KFELKJLDKEH {
    }

    impl ::protobuf::OneofFull for KFELKJLDKEH {
        fn descriptor() -> ::protobuf::reflect::OneofDescriptor {
            static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::OneofDescriptor> = ::protobuf::rt::Lazy::new();
            descriptor.get(|| <super::RogueCommonActionResultData as ::protobuf::MessageFull>::descriptor().oneof_by_name("KFELKJLDKEH").unwrap()).clone()
        }
    }

    impl KFELKJLDKEH {
        pub(in super) fn generated_oneof_descriptor_data() -> ::protobuf::reflect::GeneratedOneofDescriptorData {
            ::protobuf::reflect::GeneratedOneofDescriptorData::new::<KFELKJLDKEH>("KFELKJLDKEH")
        }
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n!RogueCommonActionResultData.proto\x1a\x11AEFFJLGFAMH.proto\x1a\x11FIP\
    FPHBPHLH.proto\x1a\x11HBLNHGANBAB.proto\x1a\x11HOBKEOICBMI.proto\x1a\x11\
    IBIBPOOPDEN.proto\x1a\x11LNAMGOMHGJB.proto\x1a\x11MAAAAGPJJFE.proto\x1a\
    \x11MDGJIKLJDDE.proto\x1a\x11PBALOEJCGFN.proto\x1a\x15RogueCommonBuff.pr\
    oto\x1a\x20RogueCommonContractFormula.proto\x1a\x1dRogueCommonDressScept\
    er.proto\x1a\x20RogueCommonExpandedFormula.proto\x1a\x18RogueCommonFormu\
    la.proto\x1a\x1bRogueCommonGetScepter.proto\x1a\x18RogueCommonKeyword.pr\
    oto\x1a\x18RogueCommonMiracle.proto\x1a\x16RogueCommonMoney.proto\x1a\
    \x19RogueCommonPathBuff.proto\x1a\x1eRogueCommonRemoveFormula.proto\x1a\
    \x1eRogueCommonRemoveKeyword.proto\x1a\x1eRogueCommonRemoveMiracle.proto\
    \x1a\x1fRogueMagicGameScepterInfo.proto\x1a\x1cRogueMagicGameUnitInfo.pr\
    oto\"\xab\x0f\n\x1bRogueCommonActionResultData\x127\n\rget_item_list\x18\
    \x03\x20\x01(\x0b2\x11.RogueCommonMoneyH\0R\x0bgetItemList\x12=\n\x10rem\
    ove_item_list\x18\x07\x20\x01(\x0b2\x11.RogueCommonMoneyH\0R\x0eremoveIt\
    emList\x127\n\rget_buff_list\x18\xc3\x0f\x20\x01(\x0b2\x10.RogueCommonBu\
    ffH\0R\x0bgetBuffList\x12=\n\x10remove_buff_list\x18\xf1\x01\x20\x01(\
    \x0b2\x10.RogueCommonBuffH\0R\x0eremoveBuffList\x12@\n\x10get_miracle_li\
    st\x18\xf1\x0b\x20\x01(\x0b2\x13.RogueCommonMiracleH\0R\x0egetMiracleLis\
    t\x12K\n\x13remove_miracle_list\x187\x20\x01(\x0b2\x19.RogueCommonRemove\
    MiracleH\0R\x11removeMiracleList\x120\n\x0bAPFMFBBDCJK\x18h\x20\x01(\x0b\
    2\x0c.IBIBPOOPDENH\0R\x0bAPFMFBBDCJK\x121\n\x0bBMDJOPGHLCA\x18\xa4\r\x20\
    \x01(\x0b2\x0c.MAAAAGPJJFEH\0R\x0bBMDJOPGHLCA\x121\n\x0bOMPBJJOHPOO\x18\
    \xfe\x0e\x20\x01(\x0b2\x0c.PBALOEJCGFNH\0R\x0bOMPBJJOHPOO\x121\n\x0bIOMJ\
    MEAOMFI\x18\xa3\x0b\x20\x01(\x0b2\x0c.HBLNHGANBABH\0R\x0bIOMJMEAOMFI\x12\
    1\n\x0bBBLGEEMHIIM\x18\xf6\n\x20\x01(\x0b2\x0c.MDGJIKLJDDEH\0R\x0bBBLGEE\
    MHIIM\x12@\n\x10get_formula_list\x18\xf0\x01\x20\x01(\x0b2\x13.RogueComm\
    onFormulaH\0R\x0egetFormulaList\x12L\n\x13remove_formula_list\x18\xe8\
    \x05\x20\x01(\x0b2\x19.RogueCommonRemoveFormulaH\0R\x11removeFormulaList\
    \x12N\n\x13expand_formula_list\x18\x9f\x08\x20\x01(\x0b2\x1b.RogueCommon\
    ExpandedFormulaH\0R\x11expandFormulaList\x12R\n\x15contract_formula_list\
    \x18\x87\x06\x20\x01(\x0b2\x1b.RogueCommonContractFormulaH\0R\x13contrac\
    tFormulaList\x121\n\x0bDMKGEBHPIPJ\x18\xe3\x01\x20\x01(\x0b2\x0c.FIPFPHB\
    PHLHH\0R\x0bDMKGEBHPIPJ\x12=\n\x0epath_buff_list\x18\xdb\x08\x20\x01(\
    \x0b2\x14.RogueCommonPathBuffH\0R\x0cpathBuffList\x12@\n\x10get_keyword_\
    list\x18\xde\t\x20\x01(\x0b2\x13.RogueCommonKeywordH\0R\x0egetKeywordLis\
    t\x12L\n\x13remove_keyword_list\x18\xd4\r\x20\x01(\x0b2\x19.RogueCommonR\
    emoveKeywordH\0R\x11removeKeywordList\x12I\n\x12dress_scepter_list\x18\
    \xd5\x02\x20\x01(\x0b2\x18.RogueCommonDressScepterH\0R\x10dressScepterLi\
    st\x12C\n\x10get_scepter_list\x18\x98\n\x20\x01(\x0b2\x16.RogueCommonGet\
    ScepterH\0R\x0egetScepterList\x121\n\x0bKAAILMGCHOK\x18\xef\x05\x20\x01(\
    \x0b2\x0c.AEFFJLGFAMHH\0R\x0bKAAILMGCHOK\x12I\n\x13get_magic_unit_list\
    \x18\xf4\t\x20\x01(\x0b2\x17.RogueMagicGameUnitInfoH\0R\x10getMagicUnitL\
    ist\x12O\n\x16remove_magic_unit_list\x18\xc0\x07\x20\x01(\x0b2\x17.Rogue\
    MagicGameUnitInfoH\0R\x13removeMagicUnitList\x12<\n\x0bJGDAEBNEFKA\x18\
    \xbb\x0f\x20\x01(\x0b2\x17.RogueMagicGameUnitInfoH\0R\x0bJGDAEBNEFKA\x12\
    ?\n\x0bAOIBHCMANFK\x18\x90\x0b\x20\x01(\x0b2\x1a.RogueMagicGameScepterIn\
    foH\0R\x0bAOIBHCMANFK\x12\x85\x01\n9ROGUE_COMMON_ACTION_RESULT_SOURCE_TY\
    PE_MAGIC_UNIT_COMPOSE\x18\xd1\r\x20\x01(\x0b2\x0c.HOBKEOICBMIH\0R1ROGUEC\
    OMMONACTIONRESULTSOURCETYPEMAGICUNITCOMPOSE\x121\n\x0bEDBPEHABHBI\x18\
    \xb2\t\x20\x01(\x0b2\x0c.LNAMGOMHGJBH\0R\x0bEDBPEHABHBI\x121\n\x0bCJOHMI\
    PJHNM\x18\xcd\x06\x20\x01(\x0b2\x0c.LNAMGOMHGJBH\0R\x0bCJOHMIPJHNMB\r\n\
    \x0bKFELKJLDKEHb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(24);
            deps.push(super::AEFFJLGFAMH::file_descriptor().clone());
            deps.push(super::FIPFPHBPHLH::file_descriptor().clone());
            deps.push(super::HBLNHGANBAB::file_descriptor().clone());
            deps.push(super::HOBKEOICBMI::file_descriptor().clone());
            deps.push(super::IBIBPOOPDEN::file_descriptor().clone());
            deps.push(super::LNAMGOMHGJB::file_descriptor().clone());
            deps.push(super::MAAAAGPJJFE::file_descriptor().clone());
            deps.push(super::MDGJIKLJDDE::file_descriptor().clone());
            deps.push(super::PBALOEJCGFN::file_descriptor().clone());
            deps.push(super::RogueCommonBuff::file_descriptor().clone());
            deps.push(super::RogueCommonContractFormula::file_descriptor().clone());
            deps.push(super::RogueCommonDressScepter::file_descriptor().clone());
            deps.push(super::RogueCommonExpandedFormula::file_descriptor().clone());
            deps.push(super::RogueCommonFormula::file_descriptor().clone());
            deps.push(super::RogueCommonGetScepter::file_descriptor().clone());
            deps.push(super::RogueCommonKeyword::file_descriptor().clone());
            deps.push(super::RogueCommonMiracle::file_descriptor().clone());
            deps.push(super::RogueCommonMoney::file_descriptor().clone());
            deps.push(super::RogueCommonPathBuff::file_descriptor().clone());
            deps.push(super::RogueCommonRemoveFormula::file_descriptor().clone());
            deps.push(super::RogueCommonRemoveKeyword::file_descriptor().clone());
            deps.push(super::RogueCommonRemoveMiracle::file_descriptor().clone());
            deps.push(super::RogueMagicGameScepterInfo::file_descriptor().clone());
            deps.push(super::RogueMagicGameUnitInfo::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(RogueCommonActionResultData::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
