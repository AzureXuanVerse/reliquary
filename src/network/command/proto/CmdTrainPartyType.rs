// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdTrainPartyType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdTrainPartyType)
pub enum CmdTrainPartyType {
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyTypeNone)
    CmdTrainPartyTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyMoveScNotify)
    CmdTrainPartyMoveScNotify = 8027,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyUpdatePosEnvCsReq)
    CmdTrainPartyUpdatePosEnvCsReq = 8078,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyBuildDiyCsReq)
    CmdTrainPartyBuildDiyCsReq = 8073,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyTakeBuildLevelAwardScRsp)
    CmdTrainPartyTakeBuildLevelAwardScRsp = 8069,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyBuildDiyScRsp)
    CmdTrainPartyBuildDiyScRsp = 8098,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyEnterScRsp)
    CmdTrainPartyEnterScRsp = 8068,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyUseCardCsReq)
    CmdTrainPartyUseCardCsReq = 8067,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyGamePlaySettleNotify)
    CmdTrainPartyGamePlaySettleNotify = 8041,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyLeaveScRsp)
    CmdTrainPartyLeaveScRsp = 8036,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartySettleNotify)
    CmdTrainPartySettleNotify = 8070,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyGetDataScRsp)
    CmdTrainPartyGetDataScRsp = 8091,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyBuildingUpdateNotify)
    CmdTrainPartyBuildingUpdateNotify = 8085,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyGetDataCsReq)
    CmdTrainPartyGetDataCsReq = 8020,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyEnterCsReq)
    CmdTrainPartyEnterCsReq = 8052,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyUpdatePosEnvScRsp)
    CmdTrainPartyUpdatePosEnvScRsp = 8034,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyHandlePendingActionScRsp)
    CmdTrainPartyHandlePendingActionScRsp = 8002,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyGamePlayStartScRsp)
    CmdTrainPartyGamePlayStartScRsp = 8049,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyBuildStartStepScRsp)
    CmdTrainPartyBuildStartStepScRsp = 8074,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyGamePlayStartCsReq)
    CmdTrainPartyGamePlayStartCsReq = 8044,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyLeaveCsReq)
    CmdTrainPartyLeaveCsReq = 8094,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyAddBuildDynamicBuffScRsp)
    CmdTrainPartyAddBuildDynamicBuffScRsp = 8024,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyAddBuildDynamicBuffCsReq)
    CmdTrainPartyAddBuildDynamicBuffCsReq = 8003,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyHandlePendingActionCsReq)
    CmdTrainPartyHandlePendingActionCsReq = 8080,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyBuildStartStepCsReq)
    CmdTrainPartyBuildStartStepCsReq = 8005,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyUseCardScRsp)
    CmdTrainPartyUseCardScRsp = 8039,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartyTakeBuildLevelAwardCsReq)
    CmdTrainPartyTakeBuildLevelAwardCsReq = 8045,
    // @@protoc_insertion_point(enum_value:CmdTrainPartyType.CmdTrainPartySyncUpdateScNotify)
    CmdTrainPartySyncUpdateScNotify = 8054,
}

impl ::protobuf::Enum for CmdTrainPartyType {
    const NAME: &'static str = "CmdTrainPartyType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdTrainPartyType> {
        match value {
            0 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTypeNone),
            8027 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyMoveScNotify),
            8078 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUpdatePosEnvCsReq),
            8073 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildDiyCsReq),
            8069 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardScRsp),
            8098 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildDiyScRsp),
            8068 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyEnterScRsp),
            8067 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUseCardCsReq),
            8041 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlaySettleNotify),
            8036 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyLeaveScRsp),
            8070 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartySettleNotify),
            8091 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGetDataScRsp),
            8085 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildingUpdateNotify),
            8020 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGetDataCsReq),
            8052 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyEnterCsReq),
            8034 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUpdatePosEnvScRsp),
            8002 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyHandlePendingActionScRsp),
            8049 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlayStartScRsp),
            8074 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildStartStepScRsp),
            8044 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlayStartCsReq),
            8094 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyLeaveCsReq),
            8024 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffScRsp),
            8003 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffCsReq),
            8080 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyHandlePendingActionCsReq),
            8005 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildStartStepCsReq),
            8039 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUseCardScRsp),
            8045 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardCsReq),
            8054 => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartySyncUpdateScNotify),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdTrainPartyType> {
        match str {
            "CmdTrainPartyTypeNone" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTypeNone),
            "CmdTrainPartyMoveScNotify" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyMoveScNotify),
            "CmdTrainPartyUpdatePosEnvCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUpdatePosEnvCsReq),
            "CmdTrainPartyBuildDiyCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildDiyCsReq),
            "CmdTrainPartyTakeBuildLevelAwardScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardScRsp),
            "CmdTrainPartyBuildDiyScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildDiyScRsp),
            "CmdTrainPartyEnterScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyEnterScRsp),
            "CmdTrainPartyUseCardCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUseCardCsReq),
            "CmdTrainPartyGamePlaySettleNotify" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlaySettleNotify),
            "CmdTrainPartyLeaveScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyLeaveScRsp),
            "CmdTrainPartySettleNotify" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartySettleNotify),
            "CmdTrainPartyGetDataScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGetDataScRsp),
            "CmdTrainPartyBuildingUpdateNotify" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildingUpdateNotify),
            "CmdTrainPartyGetDataCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGetDataCsReq),
            "CmdTrainPartyEnterCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyEnterCsReq),
            "CmdTrainPartyUpdatePosEnvScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUpdatePosEnvScRsp),
            "CmdTrainPartyHandlePendingActionScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyHandlePendingActionScRsp),
            "CmdTrainPartyGamePlayStartScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlayStartScRsp),
            "CmdTrainPartyBuildStartStepScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildStartStepScRsp),
            "CmdTrainPartyGamePlayStartCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyGamePlayStartCsReq),
            "CmdTrainPartyLeaveCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyLeaveCsReq),
            "CmdTrainPartyAddBuildDynamicBuffScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffScRsp),
            "CmdTrainPartyAddBuildDynamicBuffCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffCsReq),
            "CmdTrainPartyHandlePendingActionCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyHandlePendingActionCsReq),
            "CmdTrainPartyBuildStartStepCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyBuildStartStepCsReq),
            "CmdTrainPartyUseCardScRsp" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyUseCardScRsp),
            "CmdTrainPartyTakeBuildLevelAwardCsReq" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardCsReq),
            "CmdTrainPartySyncUpdateScNotify" => ::std::option::Option::Some(CmdTrainPartyType::CmdTrainPartySyncUpdateScNotify),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdTrainPartyType] = &[
        CmdTrainPartyType::CmdTrainPartyTypeNone,
        CmdTrainPartyType::CmdTrainPartyMoveScNotify,
        CmdTrainPartyType::CmdTrainPartyUpdatePosEnvCsReq,
        CmdTrainPartyType::CmdTrainPartyBuildDiyCsReq,
        CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardScRsp,
        CmdTrainPartyType::CmdTrainPartyBuildDiyScRsp,
        CmdTrainPartyType::CmdTrainPartyEnterScRsp,
        CmdTrainPartyType::CmdTrainPartyUseCardCsReq,
        CmdTrainPartyType::CmdTrainPartyGamePlaySettleNotify,
        CmdTrainPartyType::CmdTrainPartyLeaveScRsp,
        CmdTrainPartyType::CmdTrainPartySettleNotify,
        CmdTrainPartyType::CmdTrainPartyGetDataScRsp,
        CmdTrainPartyType::CmdTrainPartyBuildingUpdateNotify,
        CmdTrainPartyType::CmdTrainPartyGetDataCsReq,
        CmdTrainPartyType::CmdTrainPartyEnterCsReq,
        CmdTrainPartyType::CmdTrainPartyUpdatePosEnvScRsp,
        CmdTrainPartyType::CmdTrainPartyHandlePendingActionScRsp,
        CmdTrainPartyType::CmdTrainPartyGamePlayStartScRsp,
        CmdTrainPartyType::CmdTrainPartyBuildStartStepScRsp,
        CmdTrainPartyType::CmdTrainPartyGamePlayStartCsReq,
        CmdTrainPartyType::CmdTrainPartyLeaveCsReq,
        CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffScRsp,
        CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffCsReq,
        CmdTrainPartyType::CmdTrainPartyHandlePendingActionCsReq,
        CmdTrainPartyType::CmdTrainPartyBuildStartStepCsReq,
        CmdTrainPartyType::CmdTrainPartyUseCardScRsp,
        CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardCsReq,
        CmdTrainPartyType::CmdTrainPartySyncUpdateScNotify,
    ];
}

impl ::protobuf::EnumFull for CmdTrainPartyType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdTrainPartyType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdTrainPartyType::CmdTrainPartyTypeNone => 0,
            CmdTrainPartyType::CmdTrainPartyMoveScNotify => 1,
            CmdTrainPartyType::CmdTrainPartyUpdatePosEnvCsReq => 2,
            CmdTrainPartyType::CmdTrainPartyBuildDiyCsReq => 3,
            CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardScRsp => 4,
            CmdTrainPartyType::CmdTrainPartyBuildDiyScRsp => 5,
            CmdTrainPartyType::CmdTrainPartyEnterScRsp => 6,
            CmdTrainPartyType::CmdTrainPartyUseCardCsReq => 7,
            CmdTrainPartyType::CmdTrainPartyGamePlaySettleNotify => 8,
            CmdTrainPartyType::CmdTrainPartyLeaveScRsp => 9,
            CmdTrainPartyType::CmdTrainPartySettleNotify => 10,
            CmdTrainPartyType::CmdTrainPartyGetDataScRsp => 11,
            CmdTrainPartyType::CmdTrainPartyBuildingUpdateNotify => 12,
            CmdTrainPartyType::CmdTrainPartyGetDataCsReq => 13,
            CmdTrainPartyType::CmdTrainPartyEnterCsReq => 14,
            CmdTrainPartyType::CmdTrainPartyUpdatePosEnvScRsp => 15,
            CmdTrainPartyType::CmdTrainPartyHandlePendingActionScRsp => 16,
            CmdTrainPartyType::CmdTrainPartyGamePlayStartScRsp => 17,
            CmdTrainPartyType::CmdTrainPartyBuildStartStepScRsp => 18,
            CmdTrainPartyType::CmdTrainPartyGamePlayStartCsReq => 19,
            CmdTrainPartyType::CmdTrainPartyLeaveCsReq => 20,
            CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffScRsp => 21,
            CmdTrainPartyType::CmdTrainPartyAddBuildDynamicBuffCsReq => 22,
            CmdTrainPartyType::CmdTrainPartyHandlePendingActionCsReq => 23,
            CmdTrainPartyType::CmdTrainPartyBuildStartStepCsReq => 24,
            CmdTrainPartyType::CmdTrainPartyUseCardScRsp => 25,
            CmdTrainPartyType::CmdTrainPartyTakeBuildLevelAwardCsReq => 26,
            CmdTrainPartyType::CmdTrainPartySyncUpdateScNotify => 27,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdTrainPartyType {
    fn default() -> Self {
        CmdTrainPartyType::CmdTrainPartyTypeNone
    }
}

impl CmdTrainPartyType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdTrainPartyType>("CmdTrainPartyType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x17CmdTrainPartyType.proto*\x8a\x08\n\x11CmdTrainPartyType\x12\x19\n\
    \x15CmdTrainPartyTypeNone\x10\0\x12\x1e\n\x19CmdTrainPartyMoveScNotify\
    \x10\xdb>\x12#\n\x1eCmdTrainPartyUpdatePosEnvCsReq\x10\x8e?\x12\x1f\n\
    \x1aCmdTrainPartyBuildDiyCsReq\x10\x89?\x12*\n%CmdTrainPartyTakeBuildLev\
    elAwardScRsp\x10\x85?\x12\x1f\n\x1aCmdTrainPartyBuildDiyScRsp\x10\xa2?\
    \x12\x1c\n\x17CmdTrainPartyEnterScRsp\x10\x84?\x12\x1e\n\x19CmdTrainPart\
    yUseCardCsReq\x10\x83?\x12&\n!CmdTrainPartyGamePlaySettleNotify\x10\xe9>\
    \x12\x1c\n\x17CmdTrainPartyLeaveScRsp\x10\xe4>\x12\x1e\n\x19CmdTrainPart\
    ySettleNotify\x10\x86?\x12\x1e\n\x19CmdTrainPartyGetDataScRsp\x10\x9b?\
    \x12&\n!CmdTrainPartyBuildingUpdateNotify\x10\x95?\x12\x1e\n\x19CmdTrain\
    PartyGetDataCsReq\x10\xd4>\x12\x1c\n\x17CmdTrainPartyEnterCsReq\x10\xf4>\
    \x12#\n\x1eCmdTrainPartyUpdatePosEnvScRsp\x10\xe2>\x12*\n%CmdTrainPartyH\
    andlePendingActionScRsp\x10\xc2>\x12$\n\x1fCmdTrainPartyGamePlayStartScR\
    sp\x10\xf1>\x12%\n\x20CmdTrainPartyBuildStartStepScRsp\x10\x8a?\x12$\n\
    \x1fCmdTrainPartyGamePlayStartCsReq\x10\xec>\x12\x1c\n\x17CmdTrainPartyL\
    eaveCsReq\x10\x9e?\x12*\n%CmdTrainPartyAddBuildDynamicBuffScRsp\x10\xd8>\
    \x12*\n%CmdTrainPartyAddBuildDynamicBuffCsReq\x10\xc3>\x12*\n%CmdTrainPa\
    rtyHandlePendingActionCsReq\x10\x90?\x12%\n\x20CmdTrainPartyBuildStartSt\
    epCsReq\x10\xc5>\x12\x1e\n\x19CmdTrainPartyUseCardScRsp\x10\xe7>\x12*\n%\
    CmdTrainPartyTakeBuildLevelAwardCsReq\x10\xed>\x12$\n\x1fCmdTrainPartySy\
    ncUpdateScNotify\x10\xf6>b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdTrainPartyType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
