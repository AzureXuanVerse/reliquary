// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdRechargeGiftType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdRechargeGiftType)
pub enum CmdRechargeGiftType {
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdRechargeGiftTypeNone)
    CmdRechargeGiftTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdTakeRechargeBenefitRewardScRsp)
    CmdTakeRechargeBenefitRewardScRsp = 8374,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdSyncRechargeBenefitInfoScNotify)
    CmdSyncRechargeBenefitInfoScNotify = 8365,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdTakeRechargeGiftRewardCsReq)
    CmdTakeRechargeGiftRewardCsReq = 8370,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdGetRechargeGiftInfoCsReq)
    CmdGetRechargeGiftInfoCsReq = 8378,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdTakeRechargeBenefitRewardCsReq)
    CmdTakeRechargeBenefitRewardCsReq = 8363,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdGetRechargeGiftInfoScRsp)
    CmdGetRechargeGiftInfoScRsp = 8369,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdTakeRechargeGiftRewardScRsp)
    CmdTakeRechargeGiftRewardScRsp = 8376,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdGetRechargeBenefitInfoCsReq)
    CmdGetRechargeBenefitInfoCsReq = 8367,
    // @@protoc_insertion_point(enum_value:CmdRechargeGiftType.CmdGetRechargeBenefitInfoScRsp)
    CmdGetRechargeBenefitInfoScRsp = 8371,
}

impl ::protobuf::Enum for CmdRechargeGiftType {
    const NAME: &'static str = "CmdRechargeGiftType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdRechargeGiftType> {
        match value {
            0 => ::std::option::Option::Some(CmdRechargeGiftType::CmdRechargeGiftTypeNone),
            8374 => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeBenefitRewardScRsp),
            8365 => ::std::option::Option::Some(CmdRechargeGiftType::CmdSyncRechargeBenefitInfoScNotify),
            8370 => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeGiftRewardCsReq),
            8378 => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeGiftInfoCsReq),
            8363 => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeBenefitRewardCsReq),
            8369 => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeGiftInfoScRsp),
            8376 => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeGiftRewardScRsp),
            8367 => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeBenefitInfoCsReq),
            8371 => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeBenefitInfoScRsp),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdRechargeGiftType> {
        match str {
            "CmdRechargeGiftTypeNone" => ::std::option::Option::Some(CmdRechargeGiftType::CmdRechargeGiftTypeNone),
            "CmdTakeRechargeBenefitRewardScRsp" => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeBenefitRewardScRsp),
            "CmdSyncRechargeBenefitInfoScNotify" => ::std::option::Option::Some(CmdRechargeGiftType::CmdSyncRechargeBenefitInfoScNotify),
            "CmdTakeRechargeGiftRewardCsReq" => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeGiftRewardCsReq),
            "CmdGetRechargeGiftInfoCsReq" => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeGiftInfoCsReq),
            "CmdTakeRechargeBenefitRewardCsReq" => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeBenefitRewardCsReq),
            "CmdGetRechargeGiftInfoScRsp" => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeGiftInfoScRsp),
            "CmdTakeRechargeGiftRewardScRsp" => ::std::option::Option::Some(CmdRechargeGiftType::CmdTakeRechargeGiftRewardScRsp),
            "CmdGetRechargeBenefitInfoCsReq" => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeBenefitInfoCsReq),
            "CmdGetRechargeBenefitInfoScRsp" => ::std::option::Option::Some(CmdRechargeGiftType::CmdGetRechargeBenefitInfoScRsp),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdRechargeGiftType] = &[
        CmdRechargeGiftType::CmdRechargeGiftTypeNone,
        CmdRechargeGiftType::CmdTakeRechargeBenefitRewardScRsp,
        CmdRechargeGiftType::CmdSyncRechargeBenefitInfoScNotify,
        CmdRechargeGiftType::CmdTakeRechargeGiftRewardCsReq,
        CmdRechargeGiftType::CmdGetRechargeGiftInfoCsReq,
        CmdRechargeGiftType::CmdTakeRechargeBenefitRewardCsReq,
        CmdRechargeGiftType::CmdGetRechargeGiftInfoScRsp,
        CmdRechargeGiftType::CmdTakeRechargeGiftRewardScRsp,
        CmdRechargeGiftType::CmdGetRechargeBenefitInfoCsReq,
        CmdRechargeGiftType::CmdGetRechargeBenefitInfoScRsp,
    ];
}

impl ::protobuf::EnumFull for CmdRechargeGiftType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdRechargeGiftType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdRechargeGiftType::CmdRechargeGiftTypeNone => 0,
            CmdRechargeGiftType::CmdTakeRechargeBenefitRewardScRsp => 1,
            CmdRechargeGiftType::CmdSyncRechargeBenefitInfoScNotify => 2,
            CmdRechargeGiftType::CmdTakeRechargeGiftRewardCsReq => 3,
            CmdRechargeGiftType::CmdGetRechargeGiftInfoCsReq => 4,
            CmdRechargeGiftType::CmdTakeRechargeBenefitRewardCsReq => 5,
            CmdRechargeGiftType::CmdGetRechargeGiftInfoScRsp => 6,
            CmdRechargeGiftType::CmdTakeRechargeGiftRewardScRsp => 7,
            CmdRechargeGiftType::CmdGetRechargeBenefitInfoCsReq => 8,
            CmdRechargeGiftType::CmdGetRechargeBenefitInfoScRsp => 9,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdRechargeGiftType {
    fn default() -> Self {
        CmdRechargeGiftType::CmdRechargeGiftTypeNone
    }
}

impl CmdRechargeGiftType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdRechargeGiftType>("CmdRechargeGiftType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x19CmdRechargeGiftType.proto*\x83\x03\n\x13CmdRechargeGiftType\x12\
    \x1b\n\x17CmdRechargeGiftTypeNone\x10\0\x12&\n!CmdTakeRechargeBenefitRew\
    ardScRsp\x10\xb6A\x12'\n\"CmdSyncRechargeBenefitInfoScNotify\x10\xadA\
    \x12#\n\x1eCmdTakeRechargeGiftRewardCsReq\x10\xb2A\x12\x20\n\x1bCmdGetRe\
    chargeGiftInfoCsReq\x10\xbaA\x12&\n!CmdTakeRechargeBenefitRewardCsReq\
    \x10\xabA\x12\x20\n\x1bCmdGetRechargeGiftInfoScRsp\x10\xb1A\x12#\n\x1eCm\
    dTakeRechargeGiftRewardScRsp\x10\xb8A\x12#\n\x1eCmdGetRechargeBenefitInf\
    oCsReq\x10\xafA\x12#\n\x1eCmdGetRechargeBenefitInfoScRsp\x10\xb3Ab\x06pr\
    oto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdRechargeGiftType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
