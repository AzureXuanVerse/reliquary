// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdMonopolyType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdMonopolyType)
pub enum CmdMonopolyType {
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyTypeNone)
    CmdMonopolyTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolySelectOptionScRsp)
    CmdMonopolySelectOptionScRsp = 7072,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyScrachRaffleTicketScRsp)
    CmdMonopolyScrachRaffleTicketScRsp = 7070,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyCellUpdateNotify)
    CmdMonopolyCellUpdateNotify = 7040,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyBuyGoodsScRsp)
    CmdMonopolyBuyGoodsScRsp = 7077,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyClickMbtiReportScRsp)
    CmdMonopolyClickMbtiReportScRsp = 7038,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyTakeRaffleTicketRewardScRsp)
    CmdMonopolyTakeRaffleTicketRewardScRsp = 7097,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMbtiReportScRsp)
    CmdGetMbtiReportScRsp = 7001,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyAcceptQuizScRsp)
    CmdMonopolyAcceptQuizScRsp = 7057,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameBingoFlipCardScRsp)
    CmdMonopolyGameBingoFlipCardScRsp = 7091,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRegionProgressScRsp)
    CmdMonopolyGetRegionProgressScRsp = 7018,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyFriendRankingListScRsp)
    CmdGetMonopolyFriendRankingListScRsp = 7087,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyDailyReportScRsp)
    CmdGetMonopolyDailyReportScRsp = 7015,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameCreateScNotify)
    CmdMonopolyGameCreateScNotify = 7007,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyMoveCsReq)
    CmdMonopolyMoveCsReq = 7052,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGuessBuyInformationCsReq)
    CmdMonopolyGuessBuyInformationCsReq = 7006,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRafflePoolInfoCsReq)
    CmdMonopolyGetRafflePoolInfoCsReq = 7044,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyConfirmRandomScRsp)
    CmdMonopolyConfirmRandomScRsp = 7033,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGuessBuyInformationScRsp)
    CmdMonopolyGuessBuyInformationScRsp = 7045,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolySocialEventEffectScNotify)
    CmdMonopolySocialEventEffectScNotify = 7094,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyRollDiceCsReq)
    CmdMonopolyRollDiceCsReq = 7048,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameRaiseRatioScRsp)
    CmdMonopolyGameRaiseRatioScRsp = 7084,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyActionResultScNotify)
    CmdMonopolyActionResultScNotify = 7031,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyBuyGoodsCsReq)
    CmdMonopolyBuyGoodsCsReq = 7042,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyMoveScRsp)
    CmdMonopolyMoveScRsp = 7022,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyEventLoadUpdateScNotify)
    CmdMonopolyEventLoadUpdateScNotify = 7096,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyClickCellCsReq)
    CmdMonopolyClickCellCsReq = 7055,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyConfirmRandomCsReq)
    CmdMonopolyConfirmRandomCsReq = 7043,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGuessChooseScRsp)
    CmdMonopolyGuessChooseScRsp = 7064,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGiveUpCurContentScRsp)
    CmdMonopolyGiveUpCurContentScRsp = 7063,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyTakeRaffleTicketRewardCsReq)
    CmdMonopolyTakeRaffleTicketRewardCsReq = 7010,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetDailyInitItemScRsp)
    CmdMonopolyGetDailyInitItemScRsp = 7019,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetSocialEventServerCacheScRsp)
    CmdGetSocialEventServerCacheScRsp = 7074,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameSettleScNotify)
    CmdMonopolyGameSettleScNotify = 7037,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGiveUpCurContentCsReq)
    CmdMonopolyGiveUpCurContentCsReq = 7029,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyFriendRankingListCsReq)
    CmdGetMonopolyFriendRankingListCsReq = 7099,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRegionProgressCsReq)
    CmdMonopolyGetRegionProgressCsReq = 7004,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameGachaScRsp)
    CmdMonopolyGameGachaScRsp = 7075,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyConditionUpdateScNotify)
    CmdMonopolyConditionUpdateScNotify = 7089,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyLikeCsReq)
    CmdMonopolyLikeCsReq = 7008,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyUpgradeAssetScRsp)
    CmdMonopolyUpgradeAssetScRsp = 7021,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyContentUpdateScNotify)
    CmdMonopolyContentUpdateScNotify = 7025,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetDailyInitItemCsReq)
    CmdMonopolyGetDailyInitItemCsReq = 7050,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyLikeScRsp)
    CmdMonopolyLikeScRsp = 7035,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyAcceptQuizCsReq)
    CmdMonopolyAcceptQuizCsReq = 7024,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyLikeScNotify)
    CmdMonopolyLikeScNotify = 7034,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyReRollRandomCsReq)
    CmdMonopolyReRollRandomCsReq = 7002,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyUpgradeAssetCsReq)
    CmdMonopolyUpgradeAssetCsReq = 7058,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyClickCellScRsp)
    CmdMonopolyClickCellScRsp = 7080,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyTakePhaseRewardCsReq)
    CmdMonopolyTakePhaseRewardCsReq = 7073,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameRaiseRatioCsReq)
    CmdMonopolyGameRaiseRatioCsReq = 7014,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMbtiReportCsReq)
    CmdGetMbtiReportCsReq = 7068,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGuessChooseCsReq)
    CmdMonopolyGuessChooseCsReq = 7098,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyCheatDiceCsReq)
    CmdMonopolyCheatDiceCsReq = 7011,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyInfoScRsp)
    CmdGetMonopolyInfoScRsp = 7032,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyDailySettleScNotify)
    CmdMonopolyDailySettleScNotify = 7054,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRaffleTicketCsReq)
    CmdMonopolyGetRaffleTicketCsReq = 7049,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyReRollRandomScRsp)
    CmdMonopolyReRollRandomScRsp = 7039,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetSocialEventServerCacheCsReq)
    CmdGetSocialEventServerCacheCsReq = 7027,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyDailyReportCsReq)
    CmdGetMonopolyDailyReportCsReq = 7028,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRafflePoolInfoScRsp)
    CmdMonopolyGetRafflePoolInfoScRsp = 7026,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdDeleteSocialEventServerCacheCsReq)
    CmdDeleteSocialEventServerCacheCsReq = 7090,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdDeleteSocialEventServerCacheScRsp)
    CmdDeleteSocialEventServerCacheScRsp = 7017,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyCheatDiceScRsp)
    CmdMonopolyCheatDiceScRsp = 7093,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyClickMbtiReportCsReq)
    CmdMonopolyClickMbtiReportCsReq = 7088,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyMbtiReportRewardCsReq)
    CmdGetMonopolyMbtiReportRewardCsReq = 7041,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolySttUpdateScNotify)
    CmdMonopolySttUpdateScNotify = 7012,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyEventSelectFriendScRsp)
    CmdMonopolyEventSelectFriendScRsp = 7036,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdDailyFirstEnterMonopolyActivityCsReq)
    CmdDailyFirstEnterMonopolyActivityCsReq = 7016,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyScrachRaffleTicketCsReq)
    CmdMonopolyScrachRaffleTicketCsReq = 7079,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameGachaCsReq)
    CmdMonopolyGameGachaCsReq = 7030,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyMbtiReportRewardScRsp)
    CmdGetMonopolyMbtiReportRewardScRsp = 7062,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdDailyFirstEnterMonopolyActivityScRsp)
    CmdDailyFirstEnterMonopolyActivityScRsp = 7046,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGuessDrawScNotify)
    CmdMonopolyGuessDrawScNotify = 7013,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyTakePhaseRewardScRsp)
    CmdMonopolyTakePhaseRewardScRsp = 7067,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyRollRandomCsReq)
    CmdMonopolyRollRandomCsReq = 7083,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGameBingoFlipCardCsReq)
    CmdMonopolyGameBingoFlipCardCsReq = 7051,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyGetRaffleTicketScRsp)
    CmdMonopolyGetRaffleTicketScRsp = 7003,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyRollDiceScRsp)
    CmdMonopolyRollDiceScRsp = 7071,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyEventSelectFriendCsReq)
    CmdMonopolyEventSelectFriendCsReq = 7053,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyRollRandomScRsp)
    CmdMonopolyRollRandomScRsp = 7060,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdGetMonopolyInfoCsReq)
    CmdGetMonopolyInfoCsReq = 7095,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolyQuizDurationChangeScNotify)
    CmdMonopolyQuizDurationChangeScNotify = 7078,
    // @@protoc_insertion_point(enum_value:CmdMonopolyType.CmdMonopolySelectOptionCsReq)
    CmdMonopolySelectOptionCsReq = 7056,
}

impl ::protobuf::Enum for CmdMonopolyType {
    const NAME: &'static str = "CmdMonopolyType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdMonopolyType> {
        match value {
            0 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTypeNone),
            7072 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySelectOptionScRsp),
            7070 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyScrachRaffleTicketScRsp),
            7040 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCellUpdateNotify),
            7077 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyBuyGoodsScRsp),
            7038 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickMbtiReportScRsp),
            7097 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardScRsp),
            7001 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMbtiReportScRsp),
            7057 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyAcceptQuizScRsp),
            7091 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameBingoFlipCardScRsp),
            7018 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRegionProgressScRsp),
            7087 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyFriendRankingListScRsp),
            7015 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyDailyReportScRsp),
            7007 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameCreateScNotify),
            7052 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyMoveCsReq),
            7006 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessBuyInformationCsReq),
            7044 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRafflePoolInfoCsReq),
            7033 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConfirmRandomScRsp),
            7045 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessBuyInformationScRsp),
            7094 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySocialEventEffectScNotify),
            7048 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollDiceCsReq),
            7084 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameRaiseRatioScRsp),
            7031 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyActionResultScNotify),
            7042 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyBuyGoodsCsReq),
            7022 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyMoveScRsp),
            7096 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventLoadUpdateScNotify),
            7055 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickCellCsReq),
            7043 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConfirmRandomCsReq),
            7064 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessChooseScRsp),
            7063 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGiveUpCurContentScRsp),
            7010 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardCsReq),
            7019 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetDailyInitItemScRsp),
            7074 => ::std::option::Option::Some(CmdMonopolyType::CmdGetSocialEventServerCacheScRsp),
            7037 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameSettleScNotify),
            7029 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGiveUpCurContentCsReq),
            7099 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyFriendRankingListCsReq),
            7004 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRegionProgressCsReq),
            7075 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameGachaScRsp),
            7089 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConditionUpdateScNotify),
            7008 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeCsReq),
            7021 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyUpgradeAssetScRsp),
            7025 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyContentUpdateScNotify),
            7050 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetDailyInitItemCsReq),
            7035 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeScRsp),
            7024 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyAcceptQuizCsReq),
            7034 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeScNotify),
            7002 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyReRollRandomCsReq),
            7058 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyUpgradeAssetCsReq),
            7080 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickCellScRsp),
            7073 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakePhaseRewardCsReq),
            7014 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameRaiseRatioCsReq),
            7068 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMbtiReportCsReq),
            7098 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessChooseCsReq),
            7011 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCheatDiceCsReq),
            7032 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyInfoScRsp),
            7054 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyDailySettleScNotify),
            7049 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRaffleTicketCsReq),
            7039 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyReRollRandomScRsp),
            7027 => ::std::option::Option::Some(CmdMonopolyType::CmdGetSocialEventServerCacheCsReq),
            7028 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyDailyReportCsReq),
            7026 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRafflePoolInfoScRsp),
            7090 => ::std::option::Option::Some(CmdMonopolyType::CmdDeleteSocialEventServerCacheCsReq),
            7017 => ::std::option::Option::Some(CmdMonopolyType::CmdDeleteSocialEventServerCacheScRsp),
            7093 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCheatDiceScRsp),
            7088 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickMbtiReportCsReq),
            7041 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyMbtiReportRewardCsReq),
            7012 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySttUpdateScNotify),
            7036 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventSelectFriendScRsp),
            7016 => ::std::option::Option::Some(CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityCsReq),
            7079 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyScrachRaffleTicketCsReq),
            7030 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameGachaCsReq),
            7062 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyMbtiReportRewardScRsp),
            7046 => ::std::option::Option::Some(CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityScRsp),
            7013 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessDrawScNotify),
            7067 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakePhaseRewardScRsp),
            7083 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollRandomCsReq),
            7051 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameBingoFlipCardCsReq),
            7003 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRaffleTicketScRsp),
            7071 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollDiceScRsp),
            7053 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventSelectFriendCsReq),
            7060 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollRandomScRsp),
            7095 => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyInfoCsReq),
            7078 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyQuizDurationChangeScNotify),
            7056 => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySelectOptionCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdMonopolyType> {
        match str {
            "CmdMonopolyTypeNone" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTypeNone),
            "CmdMonopolySelectOptionScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySelectOptionScRsp),
            "CmdMonopolyScrachRaffleTicketScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyScrachRaffleTicketScRsp),
            "CmdMonopolyCellUpdateNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCellUpdateNotify),
            "CmdMonopolyBuyGoodsScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyBuyGoodsScRsp),
            "CmdMonopolyClickMbtiReportScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickMbtiReportScRsp),
            "CmdMonopolyTakeRaffleTicketRewardScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardScRsp),
            "CmdGetMbtiReportScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMbtiReportScRsp),
            "CmdMonopolyAcceptQuizScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyAcceptQuizScRsp),
            "CmdMonopolyGameBingoFlipCardScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameBingoFlipCardScRsp),
            "CmdMonopolyGetRegionProgressScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRegionProgressScRsp),
            "CmdGetMonopolyFriendRankingListScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyFriendRankingListScRsp),
            "CmdGetMonopolyDailyReportScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyDailyReportScRsp),
            "CmdMonopolyGameCreateScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameCreateScNotify),
            "CmdMonopolyMoveCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyMoveCsReq),
            "CmdMonopolyGuessBuyInformationCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessBuyInformationCsReq),
            "CmdMonopolyGetRafflePoolInfoCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRafflePoolInfoCsReq),
            "CmdMonopolyConfirmRandomScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConfirmRandomScRsp),
            "CmdMonopolyGuessBuyInformationScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessBuyInformationScRsp),
            "CmdMonopolySocialEventEffectScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySocialEventEffectScNotify),
            "CmdMonopolyRollDiceCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollDiceCsReq),
            "CmdMonopolyGameRaiseRatioScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameRaiseRatioScRsp),
            "CmdMonopolyActionResultScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyActionResultScNotify),
            "CmdMonopolyBuyGoodsCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyBuyGoodsCsReq),
            "CmdMonopolyMoveScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyMoveScRsp),
            "CmdMonopolyEventLoadUpdateScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventLoadUpdateScNotify),
            "CmdMonopolyClickCellCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickCellCsReq),
            "CmdMonopolyConfirmRandomCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConfirmRandomCsReq),
            "CmdMonopolyGuessChooseScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessChooseScRsp),
            "CmdMonopolyGiveUpCurContentScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGiveUpCurContentScRsp),
            "CmdMonopolyTakeRaffleTicketRewardCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardCsReq),
            "CmdMonopolyGetDailyInitItemScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetDailyInitItemScRsp),
            "CmdGetSocialEventServerCacheScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetSocialEventServerCacheScRsp),
            "CmdMonopolyGameSettleScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameSettleScNotify),
            "CmdMonopolyGiveUpCurContentCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGiveUpCurContentCsReq),
            "CmdGetMonopolyFriendRankingListCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyFriendRankingListCsReq),
            "CmdMonopolyGetRegionProgressCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRegionProgressCsReq),
            "CmdMonopolyGameGachaScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameGachaScRsp),
            "CmdMonopolyConditionUpdateScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyConditionUpdateScNotify),
            "CmdMonopolyLikeCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeCsReq),
            "CmdMonopolyUpgradeAssetScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyUpgradeAssetScRsp),
            "CmdMonopolyContentUpdateScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyContentUpdateScNotify),
            "CmdMonopolyGetDailyInitItemCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetDailyInitItemCsReq),
            "CmdMonopolyLikeScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeScRsp),
            "CmdMonopolyAcceptQuizCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyAcceptQuizCsReq),
            "CmdMonopolyLikeScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyLikeScNotify),
            "CmdMonopolyReRollRandomCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyReRollRandomCsReq),
            "CmdMonopolyUpgradeAssetCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyUpgradeAssetCsReq),
            "CmdMonopolyClickCellScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickCellScRsp),
            "CmdMonopolyTakePhaseRewardCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakePhaseRewardCsReq),
            "CmdMonopolyGameRaiseRatioCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameRaiseRatioCsReq),
            "CmdGetMbtiReportCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMbtiReportCsReq),
            "CmdMonopolyGuessChooseCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessChooseCsReq),
            "CmdMonopolyCheatDiceCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCheatDiceCsReq),
            "CmdGetMonopolyInfoScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyInfoScRsp),
            "CmdMonopolyDailySettleScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyDailySettleScNotify),
            "CmdMonopolyGetRaffleTicketCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRaffleTicketCsReq),
            "CmdMonopolyReRollRandomScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyReRollRandomScRsp),
            "CmdGetSocialEventServerCacheCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetSocialEventServerCacheCsReq),
            "CmdGetMonopolyDailyReportCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyDailyReportCsReq),
            "CmdMonopolyGetRafflePoolInfoScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRafflePoolInfoScRsp),
            "CmdDeleteSocialEventServerCacheCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdDeleteSocialEventServerCacheCsReq),
            "CmdDeleteSocialEventServerCacheScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdDeleteSocialEventServerCacheScRsp),
            "CmdMonopolyCheatDiceScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyCheatDiceScRsp),
            "CmdMonopolyClickMbtiReportCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyClickMbtiReportCsReq),
            "CmdGetMonopolyMbtiReportRewardCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyMbtiReportRewardCsReq),
            "CmdMonopolySttUpdateScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySttUpdateScNotify),
            "CmdMonopolyEventSelectFriendScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventSelectFriendScRsp),
            "CmdDailyFirstEnterMonopolyActivityCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityCsReq),
            "CmdMonopolyScrachRaffleTicketCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyScrachRaffleTicketCsReq),
            "CmdMonopolyGameGachaCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameGachaCsReq),
            "CmdGetMonopolyMbtiReportRewardScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyMbtiReportRewardScRsp),
            "CmdDailyFirstEnterMonopolyActivityScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityScRsp),
            "CmdMonopolyGuessDrawScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGuessDrawScNotify),
            "CmdMonopolyTakePhaseRewardScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyTakePhaseRewardScRsp),
            "CmdMonopolyRollRandomCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollRandomCsReq),
            "CmdMonopolyGameBingoFlipCardCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGameBingoFlipCardCsReq),
            "CmdMonopolyGetRaffleTicketScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyGetRaffleTicketScRsp),
            "CmdMonopolyRollDiceScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollDiceScRsp),
            "CmdMonopolyEventSelectFriendCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyEventSelectFriendCsReq),
            "CmdMonopolyRollRandomScRsp" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyRollRandomScRsp),
            "CmdGetMonopolyInfoCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdGetMonopolyInfoCsReq),
            "CmdMonopolyQuizDurationChangeScNotify" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolyQuizDurationChangeScNotify),
            "CmdMonopolySelectOptionCsReq" => ::std::option::Option::Some(CmdMonopolyType::CmdMonopolySelectOptionCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdMonopolyType] = &[
        CmdMonopolyType::CmdMonopolyTypeNone,
        CmdMonopolyType::CmdMonopolySelectOptionScRsp,
        CmdMonopolyType::CmdMonopolyScrachRaffleTicketScRsp,
        CmdMonopolyType::CmdMonopolyCellUpdateNotify,
        CmdMonopolyType::CmdMonopolyBuyGoodsScRsp,
        CmdMonopolyType::CmdMonopolyClickMbtiReportScRsp,
        CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardScRsp,
        CmdMonopolyType::CmdGetMbtiReportScRsp,
        CmdMonopolyType::CmdMonopolyAcceptQuizScRsp,
        CmdMonopolyType::CmdMonopolyGameBingoFlipCardScRsp,
        CmdMonopolyType::CmdMonopolyGetRegionProgressScRsp,
        CmdMonopolyType::CmdGetMonopolyFriendRankingListScRsp,
        CmdMonopolyType::CmdGetMonopolyDailyReportScRsp,
        CmdMonopolyType::CmdMonopolyGameCreateScNotify,
        CmdMonopolyType::CmdMonopolyMoveCsReq,
        CmdMonopolyType::CmdMonopolyGuessBuyInformationCsReq,
        CmdMonopolyType::CmdMonopolyGetRafflePoolInfoCsReq,
        CmdMonopolyType::CmdMonopolyConfirmRandomScRsp,
        CmdMonopolyType::CmdMonopolyGuessBuyInformationScRsp,
        CmdMonopolyType::CmdMonopolySocialEventEffectScNotify,
        CmdMonopolyType::CmdMonopolyRollDiceCsReq,
        CmdMonopolyType::CmdMonopolyGameRaiseRatioScRsp,
        CmdMonopolyType::CmdMonopolyActionResultScNotify,
        CmdMonopolyType::CmdMonopolyBuyGoodsCsReq,
        CmdMonopolyType::CmdMonopolyMoveScRsp,
        CmdMonopolyType::CmdMonopolyEventLoadUpdateScNotify,
        CmdMonopolyType::CmdMonopolyClickCellCsReq,
        CmdMonopolyType::CmdMonopolyConfirmRandomCsReq,
        CmdMonopolyType::CmdMonopolyGuessChooseScRsp,
        CmdMonopolyType::CmdMonopolyGiveUpCurContentScRsp,
        CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardCsReq,
        CmdMonopolyType::CmdMonopolyGetDailyInitItemScRsp,
        CmdMonopolyType::CmdGetSocialEventServerCacheScRsp,
        CmdMonopolyType::CmdMonopolyGameSettleScNotify,
        CmdMonopolyType::CmdMonopolyGiveUpCurContentCsReq,
        CmdMonopolyType::CmdGetMonopolyFriendRankingListCsReq,
        CmdMonopolyType::CmdMonopolyGetRegionProgressCsReq,
        CmdMonopolyType::CmdMonopolyGameGachaScRsp,
        CmdMonopolyType::CmdMonopolyConditionUpdateScNotify,
        CmdMonopolyType::CmdMonopolyLikeCsReq,
        CmdMonopolyType::CmdMonopolyUpgradeAssetScRsp,
        CmdMonopolyType::CmdMonopolyContentUpdateScNotify,
        CmdMonopolyType::CmdMonopolyGetDailyInitItemCsReq,
        CmdMonopolyType::CmdMonopolyLikeScRsp,
        CmdMonopolyType::CmdMonopolyAcceptQuizCsReq,
        CmdMonopolyType::CmdMonopolyLikeScNotify,
        CmdMonopolyType::CmdMonopolyReRollRandomCsReq,
        CmdMonopolyType::CmdMonopolyUpgradeAssetCsReq,
        CmdMonopolyType::CmdMonopolyClickCellScRsp,
        CmdMonopolyType::CmdMonopolyTakePhaseRewardCsReq,
        CmdMonopolyType::CmdMonopolyGameRaiseRatioCsReq,
        CmdMonopolyType::CmdGetMbtiReportCsReq,
        CmdMonopolyType::CmdMonopolyGuessChooseCsReq,
        CmdMonopolyType::CmdMonopolyCheatDiceCsReq,
        CmdMonopolyType::CmdGetMonopolyInfoScRsp,
        CmdMonopolyType::CmdMonopolyDailySettleScNotify,
        CmdMonopolyType::CmdMonopolyGetRaffleTicketCsReq,
        CmdMonopolyType::CmdMonopolyReRollRandomScRsp,
        CmdMonopolyType::CmdGetSocialEventServerCacheCsReq,
        CmdMonopolyType::CmdGetMonopolyDailyReportCsReq,
        CmdMonopolyType::CmdMonopolyGetRafflePoolInfoScRsp,
        CmdMonopolyType::CmdDeleteSocialEventServerCacheCsReq,
        CmdMonopolyType::CmdDeleteSocialEventServerCacheScRsp,
        CmdMonopolyType::CmdMonopolyCheatDiceScRsp,
        CmdMonopolyType::CmdMonopolyClickMbtiReportCsReq,
        CmdMonopolyType::CmdGetMonopolyMbtiReportRewardCsReq,
        CmdMonopolyType::CmdMonopolySttUpdateScNotify,
        CmdMonopolyType::CmdMonopolyEventSelectFriendScRsp,
        CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityCsReq,
        CmdMonopolyType::CmdMonopolyScrachRaffleTicketCsReq,
        CmdMonopolyType::CmdMonopolyGameGachaCsReq,
        CmdMonopolyType::CmdGetMonopolyMbtiReportRewardScRsp,
        CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityScRsp,
        CmdMonopolyType::CmdMonopolyGuessDrawScNotify,
        CmdMonopolyType::CmdMonopolyTakePhaseRewardScRsp,
        CmdMonopolyType::CmdMonopolyRollRandomCsReq,
        CmdMonopolyType::CmdMonopolyGameBingoFlipCardCsReq,
        CmdMonopolyType::CmdMonopolyGetRaffleTicketScRsp,
        CmdMonopolyType::CmdMonopolyRollDiceScRsp,
        CmdMonopolyType::CmdMonopolyEventSelectFriendCsReq,
        CmdMonopolyType::CmdMonopolyRollRandomScRsp,
        CmdMonopolyType::CmdGetMonopolyInfoCsReq,
        CmdMonopolyType::CmdMonopolyQuizDurationChangeScNotify,
        CmdMonopolyType::CmdMonopolySelectOptionCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdMonopolyType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdMonopolyType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdMonopolyType::CmdMonopolyTypeNone => 0,
            CmdMonopolyType::CmdMonopolySelectOptionScRsp => 1,
            CmdMonopolyType::CmdMonopolyScrachRaffleTicketScRsp => 2,
            CmdMonopolyType::CmdMonopolyCellUpdateNotify => 3,
            CmdMonopolyType::CmdMonopolyBuyGoodsScRsp => 4,
            CmdMonopolyType::CmdMonopolyClickMbtiReportScRsp => 5,
            CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardScRsp => 6,
            CmdMonopolyType::CmdGetMbtiReportScRsp => 7,
            CmdMonopolyType::CmdMonopolyAcceptQuizScRsp => 8,
            CmdMonopolyType::CmdMonopolyGameBingoFlipCardScRsp => 9,
            CmdMonopolyType::CmdMonopolyGetRegionProgressScRsp => 10,
            CmdMonopolyType::CmdGetMonopolyFriendRankingListScRsp => 11,
            CmdMonopolyType::CmdGetMonopolyDailyReportScRsp => 12,
            CmdMonopolyType::CmdMonopolyGameCreateScNotify => 13,
            CmdMonopolyType::CmdMonopolyMoveCsReq => 14,
            CmdMonopolyType::CmdMonopolyGuessBuyInformationCsReq => 15,
            CmdMonopolyType::CmdMonopolyGetRafflePoolInfoCsReq => 16,
            CmdMonopolyType::CmdMonopolyConfirmRandomScRsp => 17,
            CmdMonopolyType::CmdMonopolyGuessBuyInformationScRsp => 18,
            CmdMonopolyType::CmdMonopolySocialEventEffectScNotify => 19,
            CmdMonopolyType::CmdMonopolyRollDiceCsReq => 20,
            CmdMonopolyType::CmdMonopolyGameRaiseRatioScRsp => 21,
            CmdMonopolyType::CmdMonopolyActionResultScNotify => 22,
            CmdMonopolyType::CmdMonopolyBuyGoodsCsReq => 23,
            CmdMonopolyType::CmdMonopolyMoveScRsp => 24,
            CmdMonopolyType::CmdMonopolyEventLoadUpdateScNotify => 25,
            CmdMonopolyType::CmdMonopolyClickCellCsReq => 26,
            CmdMonopolyType::CmdMonopolyConfirmRandomCsReq => 27,
            CmdMonopolyType::CmdMonopolyGuessChooseScRsp => 28,
            CmdMonopolyType::CmdMonopolyGiveUpCurContentScRsp => 29,
            CmdMonopolyType::CmdMonopolyTakeRaffleTicketRewardCsReq => 30,
            CmdMonopolyType::CmdMonopolyGetDailyInitItemScRsp => 31,
            CmdMonopolyType::CmdGetSocialEventServerCacheScRsp => 32,
            CmdMonopolyType::CmdMonopolyGameSettleScNotify => 33,
            CmdMonopolyType::CmdMonopolyGiveUpCurContentCsReq => 34,
            CmdMonopolyType::CmdGetMonopolyFriendRankingListCsReq => 35,
            CmdMonopolyType::CmdMonopolyGetRegionProgressCsReq => 36,
            CmdMonopolyType::CmdMonopolyGameGachaScRsp => 37,
            CmdMonopolyType::CmdMonopolyConditionUpdateScNotify => 38,
            CmdMonopolyType::CmdMonopolyLikeCsReq => 39,
            CmdMonopolyType::CmdMonopolyUpgradeAssetScRsp => 40,
            CmdMonopolyType::CmdMonopolyContentUpdateScNotify => 41,
            CmdMonopolyType::CmdMonopolyGetDailyInitItemCsReq => 42,
            CmdMonopolyType::CmdMonopolyLikeScRsp => 43,
            CmdMonopolyType::CmdMonopolyAcceptQuizCsReq => 44,
            CmdMonopolyType::CmdMonopolyLikeScNotify => 45,
            CmdMonopolyType::CmdMonopolyReRollRandomCsReq => 46,
            CmdMonopolyType::CmdMonopolyUpgradeAssetCsReq => 47,
            CmdMonopolyType::CmdMonopolyClickCellScRsp => 48,
            CmdMonopolyType::CmdMonopolyTakePhaseRewardCsReq => 49,
            CmdMonopolyType::CmdMonopolyGameRaiseRatioCsReq => 50,
            CmdMonopolyType::CmdGetMbtiReportCsReq => 51,
            CmdMonopolyType::CmdMonopolyGuessChooseCsReq => 52,
            CmdMonopolyType::CmdMonopolyCheatDiceCsReq => 53,
            CmdMonopolyType::CmdGetMonopolyInfoScRsp => 54,
            CmdMonopolyType::CmdMonopolyDailySettleScNotify => 55,
            CmdMonopolyType::CmdMonopolyGetRaffleTicketCsReq => 56,
            CmdMonopolyType::CmdMonopolyReRollRandomScRsp => 57,
            CmdMonopolyType::CmdGetSocialEventServerCacheCsReq => 58,
            CmdMonopolyType::CmdGetMonopolyDailyReportCsReq => 59,
            CmdMonopolyType::CmdMonopolyGetRafflePoolInfoScRsp => 60,
            CmdMonopolyType::CmdDeleteSocialEventServerCacheCsReq => 61,
            CmdMonopolyType::CmdDeleteSocialEventServerCacheScRsp => 62,
            CmdMonopolyType::CmdMonopolyCheatDiceScRsp => 63,
            CmdMonopolyType::CmdMonopolyClickMbtiReportCsReq => 64,
            CmdMonopolyType::CmdGetMonopolyMbtiReportRewardCsReq => 65,
            CmdMonopolyType::CmdMonopolySttUpdateScNotify => 66,
            CmdMonopolyType::CmdMonopolyEventSelectFriendScRsp => 67,
            CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityCsReq => 68,
            CmdMonopolyType::CmdMonopolyScrachRaffleTicketCsReq => 69,
            CmdMonopolyType::CmdMonopolyGameGachaCsReq => 70,
            CmdMonopolyType::CmdGetMonopolyMbtiReportRewardScRsp => 71,
            CmdMonopolyType::CmdDailyFirstEnterMonopolyActivityScRsp => 72,
            CmdMonopolyType::CmdMonopolyGuessDrawScNotify => 73,
            CmdMonopolyType::CmdMonopolyTakePhaseRewardScRsp => 74,
            CmdMonopolyType::CmdMonopolyRollRandomCsReq => 75,
            CmdMonopolyType::CmdMonopolyGameBingoFlipCardCsReq => 76,
            CmdMonopolyType::CmdMonopolyGetRaffleTicketScRsp => 77,
            CmdMonopolyType::CmdMonopolyRollDiceScRsp => 78,
            CmdMonopolyType::CmdMonopolyEventSelectFriendCsReq => 79,
            CmdMonopolyType::CmdMonopolyRollRandomScRsp => 80,
            CmdMonopolyType::CmdGetMonopolyInfoCsReq => 81,
            CmdMonopolyType::CmdMonopolyQuizDurationChangeScNotify => 82,
            CmdMonopolyType::CmdMonopolySelectOptionCsReq => 83,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdMonopolyType {
    fn default() -> Self {
        CmdMonopolyType::CmdMonopolyTypeNone
    }
}

impl CmdMonopolyType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdMonopolyType>("CmdMonopolyType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x15CmdMonopolyType.proto*\x91\x18\n\x0fCmdMonopolyType\x12\x17\n\x13C\
    mdMonopolyTypeNone\x10\0\x12!\n\x1cCmdMonopolySelectOptionScRsp\x10\xa07\
    \x12'\n\"CmdMonopolyScrachRaffleTicketScRsp\x10\x9e7\x12\x20\n\x1bCmdMon\
    opolyCellUpdateNotify\x10\x807\x12\x1d\n\x18CmdMonopolyBuyGoodsScRsp\x10\
    \xa57\x12$\n\x1fCmdMonopolyClickMbtiReportScRsp\x10\xfe6\x12+\n&CmdMonop\
    olyTakeRaffleTicketRewardScRsp\x10\xb97\x12\x1a\n\x15CmdGetMbtiReportScR\
    sp\x10\xd96\x12\x1f\n\x1aCmdMonopolyAcceptQuizScRsp\x10\x917\x12&\n!CmdM\
    onopolyGameBingoFlipCardScRsp\x10\xb37\x12&\n!CmdMonopolyGetRegionProgre\
    ssScRsp\x10\xea6\x12)\n$CmdGetMonopolyFriendRankingListScRsp\x10\xaf7\
    \x12#\n\x1eCmdGetMonopolyDailyReportScRsp\x10\xe76\x12\"\n\x1dCmdMonopol\
    yGameCreateScNotify\x10\xdf6\x12\x19\n\x14CmdMonopolyMoveCsReq\x10\x8c7\
    \x12(\n#CmdMonopolyGuessBuyInformationCsReq\x10\xde6\x12&\n!CmdMonopolyG\
    etRafflePoolInfoCsReq\x10\x847\x12\"\n\x1dCmdMonopolyConfirmRandomScRsp\
    \x10\xf96\x12(\n#CmdMonopolyGuessBuyInformationScRsp\x10\x857\x12)\n$Cmd\
    MonopolySocialEventEffectScNotify\x10\xb67\x12\x1d\n\x18CmdMonopolyRollD\
    iceCsReq\x10\x887\x12#\n\x1eCmdMonopolyGameRaiseRatioScRsp\x10\xac7\x12$\
    \n\x1fCmdMonopolyActionResultScNotify\x10\xf76\x12\x1d\n\x18CmdMonopolyB\
    uyGoodsCsReq\x10\x827\x12\x19\n\x14CmdMonopolyMoveScRsp\x10\xee6\x12'\n\
    \"CmdMonopolyEventLoadUpdateScNotify\x10\xb87\x12\x1e\n\x19CmdMonopolyCl\
    ickCellCsReq\x10\x8f7\x12\"\n\x1dCmdMonopolyConfirmRandomCsReq\x10\x837\
    \x12\x20\n\x1bCmdMonopolyGuessChooseScRsp\x10\x987\x12%\n\x20CmdMonopoly\
    GiveUpCurContentScRsp\x10\x977\x12+\n&CmdMonopolyTakeRaffleTicketRewardC\
    sReq\x10\xe26\x12%\n\x20CmdMonopolyGetDailyInitItemScRsp\x10\xeb6\x12&\n\
    !CmdGetSocialEventServerCacheScRsp\x10\xa27\x12\"\n\x1dCmdMonopolyGameSe\
    ttleScNotify\x10\xfd6\x12%\n\x20CmdMonopolyGiveUpCurContentCsReq\x10\xf5\
    6\x12)\n$CmdGetMonopolyFriendRankingListCsReq\x10\xbb7\x12&\n!CmdMonopol\
    yGetRegionProgressCsReq\x10\xdc6\x12\x1e\n\x19CmdMonopolyGameGachaScRsp\
    \x10\xa37\x12'\n\"CmdMonopolyConditionUpdateScNotify\x10\xb17\x12\x19\n\
    \x14CmdMonopolyLikeCsReq\x10\xe06\x12!\n\x1cCmdMonopolyUpgradeAssetScRsp\
    \x10\xed6\x12%\n\x20CmdMonopolyContentUpdateScNotify\x10\xf16\x12%\n\x20\
    CmdMonopolyGetDailyInitItemCsReq\x10\x8a7\x12\x19\n\x14CmdMonopolyLikeSc\
    Rsp\x10\xfb6\x12\x1f\n\x1aCmdMonopolyAcceptQuizCsReq\x10\xf06\x12\x1c\n\
    \x17CmdMonopolyLikeScNotify\x10\xfa6\x12!\n\x1cCmdMonopolyReRollRandomCs\
    Req\x10\xda6\x12!\n\x1cCmdMonopolyUpgradeAssetCsReq\x10\x927\x12\x1e\n\
    \x19CmdMonopolyClickCellScRsp\x10\xa87\x12$\n\x1fCmdMonopolyTakePhaseRew\
    ardCsReq\x10\xa17\x12#\n\x1eCmdMonopolyGameRaiseRatioCsReq\x10\xe66\x12\
    \x1a\n\x15CmdGetMbtiReportCsReq\x10\x9c7\x12\x20\n\x1bCmdMonopolyGuessCh\
    ooseCsReq\x10\xba7\x12\x1e\n\x19CmdMonopolyCheatDiceCsReq\x10\xe36\x12\
    \x1c\n\x17CmdGetMonopolyInfoScRsp\x10\xf86\x12#\n\x1eCmdMonopolyDailySet\
    tleScNotify\x10\x8e7\x12$\n\x1fCmdMonopolyGetRaffleTicketCsReq\x10\x897\
    \x12!\n\x1cCmdMonopolyReRollRandomScRsp\x10\xff6\x12&\n!CmdGetSocialEven\
    tServerCacheCsReq\x10\xf36\x12#\n\x1eCmdGetMonopolyDailyReportCsReq\x10\
    \xf46\x12&\n!CmdMonopolyGetRafflePoolInfoScRsp\x10\xf26\x12)\n$CmdDelete\
    SocialEventServerCacheCsReq\x10\xb27\x12)\n$CmdDeleteSocialEventServerCa\
    cheScRsp\x10\xe96\x12\x1e\n\x19CmdMonopolyCheatDiceScRsp\x10\xb57\x12$\n\
    \x1fCmdMonopolyClickMbtiReportCsReq\x10\xb07\x12(\n#CmdGetMonopolyMbtiRe\
    portRewardCsReq\x10\x817\x12!\n\x1cCmdMonopolySttUpdateScNotify\x10\xe46\
    \x12&\n!CmdMonopolyEventSelectFriendScRsp\x10\xfc6\x12,\n'CmdDailyFirstE\
    nterMonopolyActivityCsReq\x10\xe86\x12'\n\"CmdMonopolyScrachRaffleTicket\
    CsReq\x10\xa77\x12\x1e\n\x19CmdMonopolyGameGachaCsReq\x10\xf66\x12(\n#Cm\
    dGetMonopolyMbtiReportRewardScRsp\x10\x967\x12,\n'CmdDailyFirstEnterMono\
    polyActivityScRsp\x10\x867\x12!\n\x1cCmdMonopolyGuessDrawScNotify\x10\
    \xe56\x12$\n\x1fCmdMonopolyTakePhaseRewardScRsp\x10\x9b7\x12\x1f\n\x1aCm\
    dMonopolyRollRandomCsReq\x10\xab7\x12&\n!CmdMonopolyGameBingoFlipCardCsR\
    eq\x10\x8b7\x12$\n\x1fCmdMonopolyGetRaffleTicketScRsp\x10\xdb6\x12\x1d\n\
    \x18CmdMonopolyRollDiceScRsp\x10\x9f7\x12&\n!CmdMonopolyEventSelectFrien\
    dCsReq\x10\x8d7\x12\x1f\n\x1aCmdMonopolyRollRandomScRsp\x10\x947\x12\x1c\
    \n\x17CmdGetMonopolyInfoCsReq\x10\xb77\x12*\n%CmdMonopolyQuizDurationCha\
    ngeScNotify\x10\xa67\x12!\n\x1cCmdMonopolySelectOptionCsReq\x10\x907b\
    \x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdMonopolyType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
