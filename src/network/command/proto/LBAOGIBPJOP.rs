// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `LBAOGIBPJOP.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

// @@protoc_insertion_point(message:LBAOGIBPJOP)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct LBAOGIBPJOP {
    // message fields
    // @@protoc_insertion_point(field:LBAOGIBPJOP.JJEFBPKPKBK)
    pub JJEFBPKPKBK: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.CEIFKJIEAJE)
    pub CEIFKJIEAJE: ::protobuf::EnumOrUnknown<super::JOMKPEGEFMP::JOMKPEGEFMP>,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.NLIBKABFGCC)
    pub NLIBKABFGCC: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.LIPJDJPMOKB)
    pub LIPJDJPMOKB: ::std::vec::Vec<super::CBBDIOMIFHD::CBBDIOMIFHD>,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.DKPNENBHELH)
    pub DKPNENBHELH: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.JIJHAAIHNCN)
    pub JIJHAAIHNCN: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.LIKHCLPMHJK)
    pub LIKHCLPMHJK: bool,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.MODDKLNDAMK)
    pub MODDKLNDAMK: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.PBFAIOJJGNL)
    pub PBFAIOJJGNL: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.JIKEIGBCABB)
    pub JIKEIGBCABB: bool,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.HJEFOLKGAEI)
    pub HJEFOLKGAEI: ::protobuf::EnumOrUnknown<super::JOMKPEGEFMP::JOMKPEGEFMP>,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.PCMGAGAHBLK)
    pub PCMGAGAHBLK: ::std::vec::Vec<u32>,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.level_id)
    pub level_id: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.EIGABCKEDNP)
    pub EIGABCKEDNP: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.KHCMOFPFOAK)
    pub KHCMOFPFOAK: u32,
    // @@protoc_insertion_point(field:LBAOGIBPJOP.BBDOPLEKIAC)
    pub BBDOPLEKIAC: u32,
    // special fields
    // @@protoc_insertion_point(special_field:LBAOGIBPJOP.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a LBAOGIBPJOP {
    fn default() -> &'a LBAOGIBPJOP {
        <LBAOGIBPJOP as ::protobuf::Message>::default_instance()
    }
}

impl LBAOGIBPJOP {
    pub fn new() -> LBAOGIBPJOP {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(16);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "JJEFBPKPKBK",
            |m: &LBAOGIBPJOP| { &m.JJEFBPKPKBK },
            |m: &mut LBAOGIBPJOP| { &mut m.JJEFBPKPKBK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "CEIFKJIEAJE",
            |m: &LBAOGIBPJOP| { &m.CEIFKJIEAJE },
            |m: &mut LBAOGIBPJOP| { &mut m.CEIFKJIEAJE },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "NLIBKABFGCC",
            |m: &LBAOGIBPJOP| { &m.NLIBKABFGCC },
            |m: &mut LBAOGIBPJOP| { &mut m.NLIBKABFGCC },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "LIPJDJPMOKB",
            |m: &LBAOGIBPJOP| { &m.LIPJDJPMOKB },
            |m: &mut LBAOGIBPJOP| { &mut m.LIPJDJPMOKB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "DKPNENBHELH",
            |m: &LBAOGIBPJOP| { &m.DKPNENBHELH },
            |m: &mut LBAOGIBPJOP| { &mut m.DKPNENBHELH },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIJHAAIHNCN",
            |m: &LBAOGIBPJOP| { &m.JIJHAAIHNCN },
            |m: &mut LBAOGIBPJOP| { &mut m.JIJHAAIHNCN },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "LIKHCLPMHJK",
            |m: &LBAOGIBPJOP| { &m.LIKHCLPMHJK },
            |m: &mut LBAOGIBPJOP| { &mut m.LIKHCLPMHJK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "MODDKLNDAMK",
            |m: &LBAOGIBPJOP| { &m.MODDKLNDAMK },
            |m: &mut LBAOGIBPJOP| { &mut m.MODDKLNDAMK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "PBFAIOJJGNL",
            |m: &LBAOGIBPJOP| { &m.PBFAIOJJGNL },
            |m: &mut LBAOGIBPJOP| { &mut m.PBFAIOJJGNL },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "JIKEIGBCABB",
            |m: &LBAOGIBPJOP| { &m.JIKEIGBCABB },
            |m: &mut LBAOGIBPJOP| { &mut m.JIKEIGBCABB },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "HJEFOLKGAEI",
            |m: &LBAOGIBPJOP| { &m.HJEFOLKGAEI },
            |m: &mut LBAOGIBPJOP| { &mut m.HJEFOLKGAEI },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_vec_simpler_accessor::<_, _>(
            "PCMGAGAHBLK",
            |m: &LBAOGIBPJOP| { &m.PCMGAGAHBLK },
            |m: &mut LBAOGIBPJOP| { &mut m.PCMGAGAHBLK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "level_id",
            |m: &LBAOGIBPJOP| { &m.level_id },
            |m: &mut LBAOGIBPJOP| { &mut m.level_id },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "EIGABCKEDNP",
            |m: &LBAOGIBPJOP| { &m.EIGABCKEDNP },
            |m: &mut LBAOGIBPJOP| { &mut m.EIGABCKEDNP },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "KHCMOFPFOAK",
            |m: &LBAOGIBPJOP| { &m.KHCMOFPFOAK },
            |m: &mut LBAOGIBPJOP| { &mut m.KHCMOFPFOAK },
        ));
        fields.push(::protobuf::reflect::rt::v2::make_simpler_field_accessor::<_, _>(
            "BBDOPLEKIAC",
            |m: &LBAOGIBPJOP| { &m.BBDOPLEKIAC },
            |m: &mut LBAOGIBPJOP| { &mut m.BBDOPLEKIAC },
        ));
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<LBAOGIBPJOP>(
            "LBAOGIBPJOP",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for LBAOGIBPJOP {
    const NAME: &'static str = "LBAOGIBPJOP";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                18 => {
                    is.read_repeated_packed_uint32_into(&mut self.JJEFBPKPKBK)?;
                },
                16 => {
                    self.JJEFBPKPKBK.push(is.read_uint32()?);
                },
                48 => {
                    self.CEIFKJIEAJE = is.read_enum_or_unknown()?;
                },
                88 => {
                    self.NLIBKABFGCC = is.read_uint32()?;
                },
                9650 => {
                    self.LIPJDJPMOKB.push(is.read_message()?);
                },
                56 => {
                    self.DKPNENBHELH = is.read_uint32()?;
                },
                104 => {
                    self.JIJHAAIHNCN = is.read_uint32()?;
                },
                8 => {
                    self.LIKHCLPMHJK = is.read_bool()?;
                },
                112 => {
                    self.MODDKLNDAMK = is.read_uint32()?;
                },
                80 => {
                    self.PBFAIOJJGNL = is.read_uint32()?;
                },
                72 => {
                    self.JIKEIGBCABB = is.read_bool()?;
                },
                40 => {
                    self.HJEFOLKGAEI = is.read_enum_or_unknown()?;
                },
                98 => {
                    is.read_repeated_packed_uint32_into(&mut self.PCMGAGAHBLK)?;
                },
                96 => {
                    self.PCMGAGAHBLK.push(is.read_uint32()?);
                },
                32 => {
                    self.level_id = is.read_uint32()?;
                },
                24 => {
                    self.EIGABCKEDNP = is.read_uint32()?;
                },
                120 => {
                    self.KHCMOFPFOAK = is.read_uint32()?;
                },
                64 => {
                    self.BBDOPLEKIAC = is.read_uint32()?;
                },
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        my_size += ::protobuf::rt::vec_packed_uint32_size(2, &self.JJEFBPKPKBK);
        if self.CEIFKJIEAJE != ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE) {
            my_size += ::protobuf::rt::int32_size(6, self.CEIFKJIEAJE.value());
        }
        if self.NLIBKABFGCC != 0 {
            my_size += ::protobuf::rt::uint32_size(11, self.NLIBKABFGCC);
        }
        for value in &self.LIPJDJPMOKB {
            let len = value.compute_size();
            my_size += 2 + ::protobuf::rt::compute_raw_varint64_size(len) + len;
        };
        if self.DKPNENBHELH != 0 {
            my_size += ::protobuf::rt::uint32_size(7, self.DKPNENBHELH);
        }
        if self.JIJHAAIHNCN != 0 {
            my_size += ::protobuf::rt::uint32_size(13, self.JIJHAAIHNCN);
        }
        if self.LIKHCLPMHJK != false {
            my_size += 1 + 1;
        }
        if self.MODDKLNDAMK != 0 {
            my_size += ::protobuf::rt::uint32_size(14, self.MODDKLNDAMK);
        }
        if self.PBFAIOJJGNL != 0 {
            my_size += ::protobuf::rt::uint32_size(10, self.PBFAIOJJGNL);
        }
        if self.JIKEIGBCABB != false {
            my_size += 1 + 1;
        }
        if self.HJEFOLKGAEI != ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE) {
            my_size += ::protobuf::rt::int32_size(5, self.HJEFOLKGAEI.value());
        }
        my_size += ::protobuf::rt::vec_packed_uint32_size(12, &self.PCMGAGAHBLK);
        if self.level_id != 0 {
            my_size += ::protobuf::rt::uint32_size(4, self.level_id);
        }
        if self.EIGABCKEDNP != 0 {
            my_size += ::protobuf::rt::uint32_size(3, self.EIGABCKEDNP);
        }
        if self.KHCMOFPFOAK != 0 {
            my_size += ::protobuf::rt::uint32_size(15, self.KHCMOFPFOAK);
        }
        if self.BBDOPLEKIAC != 0 {
            my_size += ::protobuf::rt::uint32_size(8, self.BBDOPLEKIAC);
        }
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        os.write_repeated_packed_uint32(2, &self.JJEFBPKPKBK)?;
        if self.CEIFKJIEAJE != ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE) {
            os.write_enum(6, ::protobuf::EnumOrUnknown::value(&self.CEIFKJIEAJE))?;
        }
        if self.NLIBKABFGCC != 0 {
            os.write_uint32(11, self.NLIBKABFGCC)?;
        }
        for v in &self.LIPJDJPMOKB {
            ::protobuf::rt::write_message_field_with_cached_size(1206, v, os)?;
        };
        if self.DKPNENBHELH != 0 {
            os.write_uint32(7, self.DKPNENBHELH)?;
        }
        if self.JIJHAAIHNCN != 0 {
            os.write_uint32(13, self.JIJHAAIHNCN)?;
        }
        if self.LIKHCLPMHJK != false {
            os.write_bool(1, self.LIKHCLPMHJK)?;
        }
        if self.MODDKLNDAMK != 0 {
            os.write_uint32(14, self.MODDKLNDAMK)?;
        }
        if self.PBFAIOJJGNL != 0 {
            os.write_uint32(10, self.PBFAIOJJGNL)?;
        }
        if self.JIKEIGBCABB != false {
            os.write_bool(9, self.JIKEIGBCABB)?;
        }
        if self.HJEFOLKGAEI != ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE) {
            os.write_enum(5, ::protobuf::EnumOrUnknown::value(&self.HJEFOLKGAEI))?;
        }
        os.write_repeated_packed_uint32(12, &self.PCMGAGAHBLK)?;
        if self.level_id != 0 {
            os.write_uint32(4, self.level_id)?;
        }
        if self.EIGABCKEDNP != 0 {
            os.write_uint32(3, self.EIGABCKEDNP)?;
        }
        if self.KHCMOFPFOAK != 0 {
            os.write_uint32(15, self.KHCMOFPFOAK)?;
        }
        if self.BBDOPLEKIAC != 0 {
            os.write_uint32(8, self.BBDOPLEKIAC)?;
        }
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> LBAOGIBPJOP {
        LBAOGIBPJOP::new()
    }

    fn clear(&mut self) {
        self.JJEFBPKPKBK.clear();
        self.CEIFKJIEAJE = ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE);
        self.NLIBKABFGCC = 0;
        self.LIPJDJPMOKB.clear();
        self.DKPNENBHELH = 0;
        self.JIJHAAIHNCN = 0;
        self.LIKHCLPMHJK = false;
        self.MODDKLNDAMK = 0;
        self.PBFAIOJJGNL = 0;
        self.JIKEIGBCABB = false;
        self.HJEFOLKGAEI = ::protobuf::EnumOrUnknown::new(super::JOMKPEGEFMP::JOMKPEGEFMP::MARBLE_TEAM_TYPE_NONE);
        self.PCMGAGAHBLK.clear();
        self.level_id = 0;
        self.EIGABCKEDNP = 0;
        self.KHCMOFPFOAK = 0;
        self.BBDOPLEKIAC = 0;
        self.special_fields.clear();
    }

    fn default_instance() -> &'static LBAOGIBPJOP {
        static instance: LBAOGIBPJOP = LBAOGIBPJOP {
            JJEFBPKPKBK: ::std::vec::Vec::new(),
            CEIFKJIEAJE: ::protobuf::EnumOrUnknown::from_i32(0),
            NLIBKABFGCC: 0,
            LIPJDJPMOKB: ::std::vec::Vec::new(),
            DKPNENBHELH: 0,
            JIJHAAIHNCN: 0,
            LIKHCLPMHJK: false,
            MODDKLNDAMK: 0,
            PBFAIOJJGNL: 0,
            JIKEIGBCABB: false,
            HJEFOLKGAEI: ::protobuf::EnumOrUnknown::from_i32(0),
            PCMGAGAHBLK: ::std::vec::Vec::new(),
            level_id: 0,
            EIGABCKEDNP: 0,
            KHCMOFPFOAK: 0,
            BBDOPLEKIAC: 0,
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for LBAOGIBPJOP {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("LBAOGIBPJOP").unwrap()).clone()
    }
}

impl ::std::fmt::Display for LBAOGIBPJOP {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for LBAOGIBPJOP {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x11LBAOGIBPJOP.proto\x1a\x11CBBDIOMIFHD.proto\x1a\x11JOMKPEGEFMP.prot\
    o\"\xd1\x04\n\x0bLBAOGIBPJOP\x12\x20\n\x0bJJEFBPKPKBK\x18\x02\x20\x03(\r\
    R\x0bJJEFBPKPKBK\x12.\n\x0bCEIFKJIEAJE\x18\x06\x20\x01(\x0e2\x0c.JOMKPEG\
    EFMPR\x0bCEIFKJIEAJE\x12\x20\n\x0bNLIBKABFGCC\x18\x0b\x20\x01(\rR\x0bNLI\
    BKABFGCC\x12/\n\x0bLIPJDJPMOKB\x18\xb6\t\x20\x03(\x0b2\x0c.CBBDIOMIFHDR\
    \x0bLIPJDJPMOKB\x12\x20\n\x0bDKPNENBHELH\x18\x07\x20\x01(\rR\x0bDKPNENBH\
    ELH\x12\x20\n\x0bJIJHAAIHNCN\x18\r\x20\x01(\rR\x0bJIJHAAIHNCN\x12\x20\n\
    \x0bLIKHCLPMHJK\x18\x01\x20\x01(\x08R\x0bLIKHCLPMHJK\x12\x20\n\x0bMODDKL\
    NDAMK\x18\x0e\x20\x01(\rR\x0bMODDKLNDAMK\x12\x20\n\x0bPBFAIOJJGNL\x18\n\
    \x20\x01(\rR\x0bPBFAIOJJGNL\x12\x20\n\x0bJIKEIGBCABB\x18\t\x20\x01(\x08R\
    \x0bJIKEIGBCABB\x12.\n\x0bHJEFOLKGAEI\x18\x05\x20\x01(\x0e2\x0c.JOMKPEGE\
    FMPR\x0bHJEFOLKGAEI\x12\x20\n\x0bPCMGAGAHBLK\x18\x0c\x20\x03(\rR\x0bPCMG\
    AGAHBLK\x12\x19\n\x08level_id\x18\x04\x20\x01(\rR\x07levelId\x12\x20\n\
    \x0bEIGABCKEDNP\x18\x03\x20\x01(\rR\x0bEIGABCKEDNP\x12\x20\n\x0bKHCMOFPF\
    OAK\x18\x0f\x20\x01(\rR\x0bKHCMOFPFOAK\x12\x20\n\x0bBBDOPLEKIAC\x18\x08\
    \x20\x01(\rR\x0bBBDOPLEKIACb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(super::CBBDIOMIFHD::file_descriptor().clone());
            deps.push(super::JOMKPEGEFMP::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(LBAOGIBPJOP::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
