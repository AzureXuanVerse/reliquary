// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdStrongChallengeActivityType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdStrongChallengeActivityType)
pub enum CmdStrongChallengeActivityType {
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdStrongChallengeActivityTypeNone)
    CmdStrongChallengeActivityTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdStrongChallengeActivityBattleEndScNotify)
    CmdStrongChallengeActivityBattleEndScNotify = 6627,
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdEnterStrongChallengeActivityStageCsReq)
    CmdEnterStrongChallengeActivityStageCsReq = 6667,
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdGetStrongChallengeActivityDataScRsp)
    CmdGetStrongChallengeActivityDataScRsp = 6691,
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdEnterStrongChallengeActivityStageScRsp)
    CmdEnterStrongChallengeActivityStageScRsp = 6639,
    // @@protoc_insertion_point(enum_value:CmdStrongChallengeActivityType.CmdGetStrongChallengeActivityDataCsReq)
    CmdGetStrongChallengeActivityDataCsReq = 6620,
}

impl ::protobuf::Enum for CmdStrongChallengeActivityType {
    const NAME: &'static str = "CmdStrongChallengeActivityType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdStrongChallengeActivityType> {
        match value {
            0 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdStrongChallengeActivityTypeNone),
            6627 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdStrongChallengeActivityBattleEndScNotify),
            6667 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageCsReq),
            6691 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataScRsp),
            6639 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageScRsp),
            6620 => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdStrongChallengeActivityType> {
        match str {
            "CmdStrongChallengeActivityTypeNone" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdStrongChallengeActivityTypeNone),
            "CmdStrongChallengeActivityBattleEndScNotify" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdStrongChallengeActivityBattleEndScNotify),
            "CmdEnterStrongChallengeActivityStageCsReq" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageCsReq),
            "CmdGetStrongChallengeActivityDataScRsp" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataScRsp),
            "CmdEnterStrongChallengeActivityStageScRsp" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageScRsp),
            "CmdGetStrongChallengeActivityDataCsReq" => ::std::option::Option::Some(CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdStrongChallengeActivityType] = &[
        CmdStrongChallengeActivityType::CmdStrongChallengeActivityTypeNone,
        CmdStrongChallengeActivityType::CmdStrongChallengeActivityBattleEndScNotify,
        CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageCsReq,
        CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataScRsp,
        CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageScRsp,
        CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdStrongChallengeActivityType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdStrongChallengeActivityType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdStrongChallengeActivityType::CmdStrongChallengeActivityTypeNone => 0,
            CmdStrongChallengeActivityType::CmdStrongChallengeActivityBattleEndScNotify => 1,
            CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageCsReq => 2,
            CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataScRsp => 3,
            CmdStrongChallengeActivityType::CmdEnterStrongChallengeActivityStageScRsp => 4,
            CmdStrongChallengeActivityType::CmdGetStrongChallengeActivityDataCsReq => 5,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdStrongChallengeActivityType {
    fn default() -> Self {
        CmdStrongChallengeActivityType::CmdStrongChallengeActivityTypeNone
    }
}

impl CmdStrongChallengeActivityType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdStrongChallengeActivityType>("CmdStrongChallengeActivityType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n$CmdStrongChallengeActivityType.proto*\xb4\x02\n\x1eCmdStrongChallenge\
    ActivityType\x12&\n\"CmdStrongChallengeActivityTypeNone\x10\0\x120\n+Cmd\
    StrongChallengeActivityBattleEndScNotify\x10\xe33\x12.\n)CmdEnterStrongC\
    hallengeActivityStageCsReq\x10\x8b4\x12+\n&CmdGetStrongChallengeActivity\
    DataScRsp\x10\xa34\x12.\n)CmdEnterStrongChallengeActivityStageScRsp\x10\
    \xef3\x12+\n&CmdGetStrongChallengeActivityDataCsReq\x10\xdc3b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdStrongChallengeActivityType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
