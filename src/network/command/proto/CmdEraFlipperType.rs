// This file is generated by rust-protobuf 3.7.1. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `CmdEraFlipperType.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_7_1;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:CmdEraFlipperType)
pub enum CmdEraFlipperType {
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdEraFlipperTypeNone)
    CmdEraFlipperTypeNone = 0,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdEnterEraFlipperRegionScRsp)
    CmdEnterEraFlipperRegionScRsp = 6568,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdResetEraFlipperDataCsReq)
    CmdResetEraFlipperDataCsReq = 6570,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdGetEraFlipperDataScRsp)
    CmdGetEraFlipperDataScRsp = 6561,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdChangeEraFlipperDataCsReq)
    CmdChangeEraFlipperDataCsReq = 6555,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdEnterEraFlipperRegionCsReq)
    CmdEnterEraFlipperRegionCsReq = 6562,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdEraFlipperDataChangeScNotify)
    CmdEraFlipperDataChangeScNotify = 6566,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdResetEraFlipperDataScRsp)
    CmdResetEraFlipperDataScRsp = 6557,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdChangeEraFlipperDataScRsp)
    CmdChangeEraFlipperDataScRsp = 6560,
    // @@protoc_insertion_point(enum_value:CmdEraFlipperType.CmdGetEraFlipperDataCsReq)
    CmdGetEraFlipperDataCsReq = 6559,
}

impl ::protobuf::Enum for CmdEraFlipperType {
    const NAME: &'static str = "CmdEraFlipperType";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<CmdEraFlipperType> {
        match value {
            0 => ::std::option::Option::Some(CmdEraFlipperType::CmdEraFlipperTypeNone),
            6568 => ::std::option::Option::Some(CmdEraFlipperType::CmdEnterEraFlipperRegionScRsp),
            6570 => ::std::option::Option::Some(CmdEraFlipperType::CmdResetEraFlipperDataCsReq),
            6561 => ::std::option::Option::Some(CmdEraFlipperType::CmdGetEraFlipperDataScRsp),
            6555 => ::std::option::Option::Some(CmdEraFlipperType::CmdChangeEraFlipperDataCsReq),
            6562 => ::std::option::Option::Some(CmdEraFlipperType::CmdEnterEraFlipperRegionCsReq),
            6566 => ::std::option::Option::Some(CmdEraFlipperType::CmdEraFlipperDataChangeScNotify),
            6557 => ::std::option::Option::Some(CmdEraFlipperType::CmdResetEraFlipperDataScRsp),
            6560 => ::std::option::Option::Some(CmdEraFlipperType::CmdChangeEraFlipperDataScRsp),
            6559 => ::std::option::Option::Some(CmdEraFlipperType::CmdGetEraFlipperDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<CmdEraFlipperType> {
        match str {
            "CmdEraFlipperTypeNone" => ::std::option::Option::Some(CmdEraFlipperType::CmdEraFlipperTypeNone),
            "CmdEnterEraFlipperRegionScRsp" => ::std::option::Option::Some(CmdEraFlipperType::CmdEnterEraFlipperRegionScRsp),
            "CmdResetEraFlipperDataCsReq" => ::std::option::Option::Some(CmdEraFlipperType::CmdResetEraFlipperDataCsReq),
            "CmdGetEraFlipperDataScRsp" => ::std::option::Option::Some(CmdEraFlipperType::CmdGetEraFlipperDataScRsp),
            "CmdChangeEraFlipperDataCsReq" => ::std::option::Option::Some(CmdEraFlipperType::CmdChangeEraFlipperDataCsReq),
            "CmdEnterEraFlipperRegionCsReq" => ::std::option::Option::Some(CmdEraFlipperType::CmdEnterEraFlipperRegionCsReq),
            "CmdEraFlipperDataChangeScNotify" => ::std::option::Option::Some(CmdEraFlipperType::CmdEraFlipperDataChangeScNotify),
            "CmdResetEraFlipperDataScRsp" => ::std::option::Option::Some(CmdEraFlipperType::CmdResetEraFlipperDataScRsp),
            "CmdChangeEraFlipperDataScRsp" => ::std::option::Option::Some(CmdEraFlipperType::CmdChangeEraFlipperDataScRsp),
            "CmdGetEraFlipperDataCsReq" => ::std::option::Option::Some(CmdEraFlipperType::CmdGetEraFlipperDataCsReq),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [CmdEraFlipperType] = &[
        CmdEraFlipperType::CmdEraFlipperTypeNone,
        CmdEraFlipperType::CmdEnterEraFlipperRegionScRsp,
        CmdEraFlipperType::CmdResetEraFlipperDataCsReq,
        CmdEraFlipperType::CmdGetEraFlipperDataScRsp,
        CmdEraFlipperType::CmdChangeEraFlipperDataCsReq,
        CmdEraFlipperType::CmdEnterEraFlipperRegionCsReq,
        CmdEraFlipperType::CmdEraFlipperDataChangeScNotify,
        CmdEraFlipperType::CmdResetEraFlipperDataScRsp,
        CmdEraFlipperType::CmdChangeEraFlipperDataScRsp,
        CmdEraFlipperType::CmdGetEraFlipperDataCsReq,
    ];
}

impl ::protobuf::EnumFull for CmdEraFlipperType {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("CmdEraFlipperType").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            CmdEraFlipperType::CmdEraFlipperTypeNone => 0,
            CmdEraFlipperType::CmdEnterEraFlipperRegionScRsp => 1,
            CmdEraFlipperType::CmdResetEraFlipperDataCsReq => 2,
            CmdEraFlipperType::CmdGetEraFlipperDataScRsp => 3,
            CmdEraFlipperType::CmdChangeEraFlipperDataCsReq => 4,
            CmdEraFlipperType::CmdEnterEraFlipperRegionCsReq => 5,
            CmdEraFlipperType::CmdEraFlipperDataChangeScNotify => 6,
            CmdEraFlipperType::CmdResetEraFlipperDataScRsp => 7,
            CmdEraFlipperType::CmdChangeEraFlipperDataScRsp => 8,
            CmdEraFlipperType::CmdGetEraFlipperDataCsReq => 9,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for CmdEraFlipperType {
    fn default() -> Self {
        CmdEraFlipperType::CmdEraFlipperTypeNone
    }
}

impl CmdEraFlipperType {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<CmdEraFlipperType>("CmdEraFlipperType")
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x17CmdEraFlipperType.proto*\xe6\x02\n\x11CmdEraFlipperType\x12\x19\n\
    \x15CmdEraFlipperTypeNone\x10\0\x12\"\n\x1dCmdEnterEraFlipperRegionScRsp\
    \x10\xa83\x12\x20\n\x1bCmdResetEraFlipperDataCsReq\x10\xaa3\x12\x1e\n\
    \x19CmdGetEraFlipperDataScRsp\x10\xa13\x12!\n\x1cCmdChangeEraFlipperData\
    CsReq\x10\x9b3\x12\"\n\x1dCmdEnterEraFlipperRegionCsReq\x10\xa23\x12$\n\
    \x1fCmdEraFlipperDataChangeScNotify\x10\xa63\x12\x20\n\x1bCmdResetEraFli\
    pperDataScRsp\x10\x9d3\x12!\n\x1cCmdChangeEraFlipperDataScRsp\x10\xa03\
    \x12\x1e\n\x19CmdGetEraFlipperDataCsReq\x10\x9f3b\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(0);
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(CmdEraFlipperType::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
